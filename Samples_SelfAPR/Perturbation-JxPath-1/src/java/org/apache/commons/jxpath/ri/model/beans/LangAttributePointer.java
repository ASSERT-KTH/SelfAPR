[P14_Delete_Statement]^^32^^^^^31^33^super ( parent ) ;^[CLASS] LangAttributePointer  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent [VARIABLES] boolean  NodePointer  parent  
[P3_Replace_Literal]^return new QName ( "", "lang" ) ;^36^^^^^35^37^return new QName ( "xml", "lang" ) ;^[CLASS] LangAttributePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] boolean  
[P8_Replace_Mix]^return true;^40^^^^^39^41^return null;^[CLASS] LangAttributePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] boolean  
[P3_Replace_Literal]^return true;^44^^^^^43^45^return false;^[CLASS] LangAttributePointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] boolean  
[P3_Replace_Literal]^return -3;^48^^^^^47^49^return 1;^[CLASS] LangAttributePointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] boolean  
[P8_Replace_Mix]^return 1 - 2;^48^^^^^47^49^return 1;^[CLASS] LangAttributePointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] boolean  
[P7_Replace_Invocation]^return parent.asPath (  ) .toString (  ) .replace ( '_', '-' ) ;^52^^^^^51^53^return parent.getLocale (  ) .toString (  ) .replace ( '_', '-' ) ;^[CLASS] LangAttributePointer  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] boolean  
[P14_Delete_Statement]^^52^^^^^51^53^return parent.getLocale (  ) .toString (  ) .replace ( '_', '-' ) ;^[CLASS] LangAttributePointer  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] boolean  
[P14_Delete_Statement]^^56^^^^^55^57^return getBaseValue (  ) ;^[CLASS] LangAttributePointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  
[P3_Replace_Literal]^return false;^60^^^^^59^61^return true;^[CLASS] LangAttributePointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "le using the 'lang' attribu" ) ;^67^68^^^^66^69^throw new UnsupportedOperationException ( "Cannot change locale using the 'lang' attribute" ) ;^[CLASS] LangAttributePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Object  value  
[P3_Replace_Literal]^throw new UnsupportedOperationException ( "Cannot change locale using the 'lang' attributeCannot chang" ) ;^67^68^^^^66^69^throw new UnsupportedOperationException ( "Cannot change locale using the 'lang' attribute" ) ;^[CLASS] LangAttributePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Object  value  
[P2_Replace_Operator]^if  ( parent == null )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P5_Replace_Variable]^if  ( null != null )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.length() == 0 || length() - 1))) != '/' )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P8_Replace_Mix]^if  ( parent != true )  {^75^^^^^73^84^if  ( parent != null )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P15_Unwrap_Block]^buffer.append(parent.asPath()); if (((buffer.length()) == 0) || ((buffer.charAt(((buffer.length()) - 1))) != '/')) {    buffer.append('/');};^75^76^77^78^79^73^84^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P16_Remove_Block]^^75^76^77^78^79^73^84^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P13_Insert_Block]^if  (  (  ( buffer.length (  )  )  == 0 )  ||  (  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  )  != '/' )  )  {     buffer.append ( '/' ) ; }^75^^^^^73^84^[Delete]^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 && buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  >= 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  >= '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   <<  1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 6 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^if  ( buffer.length() + 2  == 0 || buffer.charAt ( buffer.length() + 2  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 ) {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  (  buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P7_Replace_Invocation]^if  ( buffer.append (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P15_Unwrap_Block]^buffer.append('/');^77^78^79^80^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P16_Remove_Block]^^77^78^79^80^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ;     if  (  (  ( buffer.length (  )  )  == 0 )  ||  (  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  )  != '/' )  )  {         buffer.append ( '/' ) ;     } }^77^^^^^73^84^[Delete]^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P14_Delete_Statement]^^79^^^^^73^84^buffer.append ( '/' ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '/' ) ;^79^^^^^73^84^buffer.append ( '/' ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "@xml:lang" ) ;buffer.append ( '/' ) ;^79^^^^^73^84^buffer.append ( '/' ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P7_Replace_Invocation]^buffer.append ( parent.getLocale (  )  ) ;^76^^^^^73^84^buffer.append ( parent.asPath (  )  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P8_Replace_Mix]^buffer .toString (  )  ;^76^^^^^73^84^buffer.append ( parent.asPath (  )  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P14_Delete_Statement]^^76^^^^^73^84^buffer.append ( parent.asPath (  )  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( parent.asPath (  )  ) ;^76^^^^^73^84^buffer.append ( parent.asPath (  )  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "@xml:lang" ) ;buffer.append ( parent.asPath (  )  ) ;^76^^^^^73^84^buffer.append ( parent.asPath (  )  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^if  ( buffer.length() + 5  == 0 || buffer.charAt ( buffer.length() + 5  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )   >=  1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length (  )   )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 7  - 1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P7_Replace_Invocation]^|| buffer .toString (  )   != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer.append (  )  - 1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P8_Replace_Mix]^|| buffer.charAt ( buffer .StringBuffer (  )   - 1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P14_Delete_Statement]^^78^79^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() - 0  - 1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  != 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  == '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   !=  1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^if  ( buffer.length() - 5  == 0 || buffer.charAt ( buffer.length() - 5  - 1 )  != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P7_Replace_Invocation]^if  ( buffer.length (  )  == 0 || buffer .toString (  )   != '/' )  {^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P8_Replace_Mix]^if  ( buffer .StringBuffer (  )   == 0  || buffer.charAt ( buffer^77^78^^^^73^84^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P8_Replace_Mix]^buffer .append ( 0 )  ;^79^^^^^73^84^buffer.append ( '/' ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P5_Replace_Variable]^buffer.append ( this.asPath (  )  ) ;^76^^^^^73^84^buffer.append ( parent.asPath (  )  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )    instanceof   1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 6  - 1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() - 5  - 1 )  != '/' )  {^78^^^^^73^84^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^buffer.append ( "@xmlxml:lang" ) ;^82^^^^^73^84^buffer.append ( "@xml:lang" ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P14_Delete_Statement]^^82^^^^^73^84^buffer.append ( "@xml:lang" ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( "@xml:lang" ) ;^82^^^^^73^84^buffer.append ( "@xml:lang" ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "@xml:lang" ) ;^82^^^^^73^84^buffer.append ( "@xml:lang" ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P7_Replace_Invocation]^return buffer.charAt (  ) ;^83^^^^^73^84^return buffer.toString (  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P14_Delete_Statement]^^83^^^^^73^84^return buffer.toString (  ) ;^[CLASS] LangAttributePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  
[P3_Replace_Literal]^return -4;^87^^^^^86^88^return 0;^[CLASS] LangAttributePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  
[P8_Replace_Mix]^return 0L;^87^^^^^86^88^return 0;^[CLASS] LangAttributePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  
[P2_Replace_Operator]^if  ( object >= this )  {^91^^^^^90^100^if  ( object == this )  {^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P15_Unwrap_Block]^return true;^91^92^93^^^90^100^if  ( object == this )  { return true; }^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P16_Remove_Block]^^91^92^93^^^90^100^if  ( object == this )  { return true; }^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P3_Replace_Literal]^return false;^92^^^^^90^100^return true;^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P2_Replace_Operator]^if  ( ! ( object  ==  LangAttributePointer )  )  {^95^^^^^90^100^if  ( ! ( object instanceof LangAttributePointer )  )  {^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P8_Replace_Mix]^if  (  ( object instanceof LangAttributePointer )  )  {^95^^^^^90^100^if  ( ! ( object instanceof LangAttributePointer )  )  {^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P15_Unwrap_Block]^return false;^95^96^97^^^90^100^if  ( ! ( object instanceof LangAttributePointer )  )  { return false; }^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P16_Remove_Block]^^95^96^97^^^90^100^if  ( ! ( object instanceof LangAttributePointer )  )  { return false; }^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P3_Replace_Literal]^return true;^96^^^^^90^100^return false;^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P3_Replace_Literal]^return false;^99^^^^^90^100^return true;^[CLASS] LangAttributePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Object  object  
[P3_Replace_Literal]^return true;^103^^^^^102^104^return false;^[CLASS] LangAttributePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] boolean  NodeTest  test  
[P3_Replace_Literal]^return 4;^111^^^^^106^112^return 0;^[CLASS] LangAttributePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] boolean  NodePointer  pointer1  pointer2  
[P8_Replace_Mix]^return 2;^111^^^^^106^112^return 0;^[CLASS] LangAttributePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] boolean  NodePointer  pointer1  pointer2  
[P8_Replace_Mix]^throw new UnsupportedOperationException ( "Cannot change locale using the 'lang' attribute" ) ;^111^^^^^106^112^return 0;^[CLASS] LangAttributePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] boolean  NodePointer  pointer1  pointer2  
