[P14_Delete_Statement]^^41^^^^^40^43^super ( null, locale ) ;^[CLASS] ContainerPointer  [METHOD] <init> [RETURN_TYPE] Locale)   Container container Locale locale [VARIABLES] Locale  locale  Container  container  NodePointer  valuePointer  boolean  
[P8_Replace_Mix]^this.container =  null;^42^^^^^40^43^this.container = container;^[CLASS] ContainerPointer  [METHOD] <init> [RETURN_TYPE] Locale)   Container container Locale locale [VARIABLES] Locale  locale  Container  container  NodePointer  valuePointer  boolean  
[P5_Replace_Variable]^super ( valuePointer ) ;^46^^^^^45^48^super ( parent ) ;^[CLASS] ContainerPointer  [METHOD] <init> [RETURN_TYPE] Container)   NodePointer parent Container container [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^46^^^^^45^48^super ( parent ) ;^[CLASS] ContainerPointer  [METHOD] <init> [RETURN_TYPE] Container)   NodePointer parent Container container [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^this.container =  null;^47^^^^^45^48^this.container = container;^[CLASS] ContainerPointer  [METHOD] <init> [RETURN_TYPE] Container)   NodePointer parent Container container [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^return false;^54^^^^^53^55^return true;^[CLASS] ContainerPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return false;^58^^^^^57^59^return null;^[CLASS] ContainerPointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object value = getName (  ) ;^66^^^^^65^68^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getImmediateNode (  ) ;Object value = getBaseValue (  ) ;^66^^^^^65^68^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^66^^^^^65^68^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return value != null || ValueUtils.isCollection ( value ) ;^67^^^^^65^68^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return value == null && ValueUtils.isCollection ( value ) ;^67^^^^^65^68^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return value != null && ValueUtils.getLength ( value ) ;^67^^^^^65^68^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return value != null ;;^67^^^^^65^68^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^67^^^^^65^68^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] ContainerPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object value = getName (  ) ;^71^^^^^70^76^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getImmediateNode (  ) ;Object value = getBaseValue (  ) ;^71^^^^^70^76^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^71^^^^^70^76^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( value != null )  {^72^^^^^70^76^if  ( value == null )  {^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  ( value == true )  {^72^^^^^70^76^if  ( value == null )  {^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent != null )  {^72^^^^^70^76^if  ( value == null )  {^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( valuePointer == null )  {^72^^^^^70^76^if  ( value == null )  {^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^return 1;^72^73^74^^^70^76^if  ( value == null )  { return 1; }^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^72^73^74^^^70^76^if  ( value == null )  { return 1; }^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     return parent.asPath (  ) ; }^72^^^^^70^76^[Delete]^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^72^^^^^70^76^[Delete]^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^return 10;^73^^^^^70^76^return 1;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return 3;^73^^^^^70^76^return 1;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return 1 >> 4;^73^^^^^70^76^return 1;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.getValue ( value ) ;^75^^^^^70^76^return ValueUtils.getLength ( value ) ;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^75^^^^^70^76^return ValueUtils.getLength ( value ) ;^[CLASS] ContainerPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return getValuePointer (  ) .namespaceIterator (  ) ;^79^^^^^78^80^return getValuePointer (  ) .isLeaf (  ) ;^[CLASS] ContainerPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return namespaceIterator (  ) .isLeaf (  ) ;^79^^^^^78^80^return getValuePointer (  ) .isLeaf (  ) ;^[CLASS] ContainerPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^79^^^^^78^80^return getValuePointer (  ) .isLeaf (  ) ;^[CLASS] ContainerPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object value = getName (  ) ;^83^^^^^82^95^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getImmediateNode (  ) ;Object value = getBaseValue (  ) ;^83^^^^^82^95^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^83^^^^^82^95^Object value = getBaseValue (  ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index >= WHOLE_COLLECTION )  {^84^^^^^82^95^if  ( index != WHOLE_COLLECTION )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^84^^^^^82^95^if  ( index != WHOLE_COLLECTION )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index >= 0 && index < getLength() )  {^84^^^^^82^95^if  ( index != WHOLE_COLLECTION )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index >= 0 )  {^84^^^^^82^95^if  ( index != WHOLE_COLLECTION )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index < getLength (  ) )  {^84^^^^^82^95^if  ( index != WHOLE_COLLECTION )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  ( index = WHOLE_COLLECTION )  {^84^^^^^82^95^if  ( index != WHOLE_COLLECTION )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^if (((index) >= 0) && ((index) < (getLength()))) {    return org.apache.commons.jxpath.util.ValueUtils.getValue(value, index);}else {    return null;};^84^85^86^87^^82^95^if  ( index != WHOLE_COLLECTION )  { if  ( index >= 0 && index < getLength (  )  )  { return ValueUtils.getValue ( value, index ) ; }^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^84^85^86^87^^82^95^if  ( index != WHOLE_COLLECTION )  { if  ( index >= 0 && index < getLength (  )  )  { return ValueUtils.getValue ( value, index ) ; }^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  (  ( index )  >= 0 )  &&  (  ( index )  <  ( getLength (  )  )  )  )  {     return getValue ( value, index ) ; }else {     return null; }^84^^^^^82^95^[Delete]^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.getLength ( value ) ;^93^^^^^82^95^return ValueUtils.getValue ( value ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^93^^^^^82^95^return ValueUtils.getValue ( value ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index >= 0 || index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index > 0 && index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index >= 0 && index <= getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^if  ( index >= 5 && index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index >= 0 ) {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P6_Replace_Expression]^if  (  index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^if  ( index >= 0 && index < getName (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  ( index >= 4 && index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^return org.apache.commons.jxpath.util.ValueUtils.getValue(value, index);^85^86^87^^^82^95^if  ( index >= 0 && index < getLength (  )  )  { return ValueUtils.getValue ( value, index ) ; }^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^85^86^87^^^82^95^if  ( index >= 0 && index < getLength (  )  )  { return ValueUtils.getValue ( value, index ) ; }^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     if  (  (  ( index )  >= 0 )  &&  (  ( index )  <  ( getLength (  )  )  )  )  {         return getValue ( value, index ) ;     }else {         return null;     } }else {     return getValue ( value ) ; }^85^^^^^82^95^[Delete]^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return false;^89^^^^^82^95^return null;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue (  index ) ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( value ) ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( index, value ) ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.getLength ( value, index ) ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils .getLength ( value )  ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return ValueUtils.getValue ( value, null ) ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index < 0 && index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index >= 0 && index == getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^if  ( index >= -2 && index < getLength (  )  )  {^85^^^^^82^95^if  ( index >= 0 && index < getLength (  )  )  {^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return true;^89^^^^^82^95^return null;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( value, 1 ) ;^86^^^^^82^95^return ValueUtils.getValue ( value, index ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^container .setValue ( value )  ;^99^^^^^97^100^container.setValue ( value ) ;^[CLASS] ContainerPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^99^^^^^97^100^container.setValue ( value ) ;^[CLASS] ContainerPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value ) ;container.setValue ( value ) ;^99^^^^^97^100^container.setValue ( value ) ;^[CLASS] ContainerPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value, index ) ;container.setValue ( value ) ;^99^^^^^97^100^container.setValue ( value ) ;^[CLASS] ContainerPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( valuePointer != null )  {^103^^^^^102^109^if  ( valuePointer == null )  {^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( parent == null )  {^103^^^^^102^109^if  ( valuePointer == null )  {^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( valuePointerPointer == null )  {^103^^^^^102^109^if  ( valuePointer == null )  {^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( value == null )  {^103^^^^^102^109^if  ( valuePointer == null )  {^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  ( valuePointer == false )  {^103^^^^^102^109^if  ( valuePointer == null )  {^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent != null )  {^103^^^^^102^109^if  ( valuePointer == null )  {^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^java.lang.Object value = getImmediateNode(); valuePointer = org.apache.commons.jxpath.ri.model.NodePointer.newChildNodePointer(this, getName(), value);^103^104^105^106^107^102^109^if  ( valuePointer == null )  { Object value = getImmediateNode (  ) ; valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ; }^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^103^104^105^106^107^102^109^if  ( valuePointer == null )  { Object value = getImmediateNode (  ) ; valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ; }^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^valuePointer = NodePointer.newChildNodePointer ( this, getLength (  ) , value ) ;^105^106^^^^102^109^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^valuePointer =  NodePointer.newChildNodePointer ( this, getName (  ) , null ) ;^105^106^^^^102^109^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object value = getBaseValue (  ) ;^104^^^^^102^109^Object value = getImmediateNode (  ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getBaseValue (  ) ;Object value = getImmediateNode (  ) ;^104^^^^^102^109^Object value = getImmediateNode (  ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^104^^^^^102^109^Object value = getImmediateNode (  ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^NodePointer.newChildNodePointer ( this, getLength (  ) , value ) ;^106^^^^^102^109^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^106^^^^^102^109^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return parent;^108^^^^^102^109^return valuePointer;^[CLASS] ContainerPointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Container  container  Object  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return System.identityHashCode ( container )  &  + index;^112^^^^^111^113^return System.identityHashCode ( container )  + index;^[CLASS] ContainerPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return System.identityHashCode ( index )  + container;^112^^^^^111^113^return System.identityHashCode ( container )  + index;^[CLASS] ContainerPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return System.identityHashCode ( container )   ;^112^^^^^111^113^return System.identityHashCode ( container )  + index;^[CLASS] ContainerPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^112^^^^^111^113^return System.identityHashCode ( container )  + index;^[CLASS] ContainerPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Container  container  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( object != this )  {^116^^^^^115^126^if  ( object == this )  {^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^return true;^116^117^118^^^115^126^if  ( object == this )  { return true; }^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^116^117^118^^^115^126^if  ( object == this )  { return true; }^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  ( value == null )  {     return 1; }^116^^^^^115^126^[Delete]^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^return false;^117^^^^^115^126^return true;^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( ! ( object  <=  ContainerPointer )  )  {^120^^^^^115^126^if  ( ! ( object instanceof ContainerPointer )  )  {^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  (  ( object instanceof ContainerPointer )  )  {^120^^^^^115^126^if  ( ! ( object instanceof ContainerPointer )  )  {^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^return false;^120^121^122^^^115^126^if  ( ! ( object instanceof ContainerPointer )  )  { return false; }^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^120^121^122^^^115^126^if  ( ! ( object instanceof ContainerPointer )  )  { return false; }^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^return true;^121^^^^^115^126^return false;^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return container == other.container || index == other.index;^125^^^^^115^126^return container == other.container && index == other.index;^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return container < other.container && index == other.index;^125^^^^^115^126^return container == other.container && index == other.index;^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return false ;^125^^^^^115^126^return container == other.container && index == other.index;^[CLASS] ContainerPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] ContainerPointer  other  Container  container  Object  object  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, reverse, valuePointer ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator (  reverse, startWith ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test,  startWith ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, reverse ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( reverse, test, startWith ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, startWith, reverse ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P7_Replace_Invocation]^return namespaceIterator (  ) .childIterator ( test, reverse, startWith ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( startWith, reverse, test ) ;^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P14_Delete_Statement]^^133^^^^^128^134^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] ContainerPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P7_Replace_Invocation]^return getValuePointer (  ) .testNode ( name ) ;^137^^^^^136^138^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] ContainerPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  QName  name  
[P7_Replace_Invocation]^return namespaceIterator (  ) .attributeIterator ( name ) ;^137^^^^^136^138^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] ContainerPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  QName  name  
[P14_Delete_Statement]^^137^^^^^136^138^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] ContainerPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  QName  name  
[P7_Replace_Invocation]^return getValuePointer (  ) .getValuePointer (  ) ;^141^^^^^140^142^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] ContainerPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return namespaceIterator (  ) .namespaceIterator (  ) ;^141^^^^^140^142^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] ContainerPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^141^^^^^140^142^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] ContainerPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return getValuePointer (  ) .getNamespaceURI ( namespace ) ;^145^^^^^144^146^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] ContainerPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  String  namespace  boolean  
[P7_Replace_Invocation]^return getValuePointer (  )  .namespaceIterator (  )  ;^145^^^^^144^146^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] ContainerPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  String  namespace  boolean  
[P7_Replace_Invocation]^return namespaceIterator (  ) .namespacePointer ( namespace ) ;^145^^^^^144^146^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] ContainerPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  String  namespace  boolean  
[P14_Delete_Statement]^^145^^^^^144^146^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] ContainerPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  String  namespace  boolean  
[P7_Replace_Invocation]^return getValuePointer (  ) .attributeIterator ( nodeTest ) ;^149^^^^^148^150^return getValuePointer (  ) .testNode ( nodeTest ) ;^[CLASS] ContainerPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  NodeTest  nodeTest  
[P7_Replace_Invocation]^return namespaceIterator (  ) .testNode ( nodeTest ) ;^149^^^^^148^150^return getValuePointer (  ) .testNode ( nodeTest ) ;^[CLASS] ContainerPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  NodeTest  nodeTest  
[P14_Delete_Statement]^^149^^^^^148^150^return getValuePointer (  ) .testNode ( nodeTest ) ;^[CLASS] ContainerPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] Container  container  NodePointer  parent  startWith  valuePointer  boolean  NodeTest  nodeTest  
[P2_Replace_Operator]^return pointer1.getIndex (  )   >>  pointer2.getIndex (  ) ;^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return pointer2.getIndex (  )  - pointer1.getIndex (  ) ;^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P8_Replace_Mix]^return pointer1.getIndex (  )   ;^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return startWith.getIndex (  )  - pointer2.getIndex (  ) ;^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P8_Replace_Mix]^return valuePointer.getIndex (  )  - pointer2.getIndex (  ) ;^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return pointer1.getIndex (  )  - valuePointer.getIndex (  ) ;^156^^^^^152^157^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] ContainerPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return getValuePointer (  ) .namespacePointer ( prefix ) ;^160^^^^^159^161^return getValuePointer (  ) .getNamespaceURI ( prefix ) ;^[CLASS] ContainerPointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  String  prefix  boolean  
[P7_Replace_Invocation]^return namespaceIterator (  ) .getNamespaceURI ( prefix ) ;^160^^^^^159^161^return getValuePointer (  ) .getNamespaceURI ( prefix ) ;^[CLASS] ContainerPointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  String  prefix  boolean  
[P14_Delete_Statement]^^160^^^^^159^161^return getValuePointer (  ) .getNamespaceURI ( prefix ) ;^[CLASS] ContainerPointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  String  prefix  boolean  
[P2_Replace_Operator]^if  ( parent == null )  {^164^^^^^163^168^if  ( parent != null )  {^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( 4 != null )  {^164^^^^^163^168^if  ( parent != null )  {^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( parent != false )  {^164^^^^^163^168^if  ( parent != null )  {^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( value == null )  {^164^^^^^163^168^if  ( parent != null )  {^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( valuePointer == null )  {^164^^^^^163^168^if  ( parent != null )  {^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P15_Unwrap_Block]^return parent.asPath();^164^165^166^^^163^168^if  ( parent != null )  { return parent.asPath (  ) ; }^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P16_Remove_Block]^^164^165^166^^^163^168^if  ( parent != null )  { return parent.asPath (  ) ; }^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P13_Insert_Block]^if  ( value == null )  {     return 1; }^164^^^^^163^168^[Delete]^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return parent .asPath (  )  ;^165^^^^^163^168^return parent.asPath (  ) ;^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^165^^^^^163^168^return parent.asPath (  ) ;^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return null.asPath (  ) ;^165^^^^^163^168^return parent.asPath (  ) ;^[CLASS] ContainerPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Container  container  NodePointer  parent  pointer1  pointer2  startWith  valuePointer  boolean  
