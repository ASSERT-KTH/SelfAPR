[P3_Replace_Literal]^private boolean atomic = true;^37^^^^^32^42^private boolean atomic = false;^[CLASS] JXPathBasicBeanInfo 1   [VARIABLES] 
[P8_Replace_Mix]^private boolean atomic ;^37^^^^^32^42^private boolean atomic = false;^[CLASS] JXPathBasicBeanInfo 1   [VARIABLES] 
[P5_Replace_Variable]^this.clazz = dynamicPropertyHandlerClass;^44^^^^^43^45^this.clazz = clazz;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class)   Class clazz [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^this.clazz = dynamicPropertyHandlerClass;^48^^^^^47^50^this.clazz = clazz;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class,boolean)   Class clazz boolean atomic [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^this.atomic =  null;^49^^^^^47^50^this.atomic = atomic;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class,boolean)   Class clazz boolean atomic [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^this.atomic = false;this.atomic = atomic;^49^^^^^47^50^this.atomic = atomic;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class,boolean)   Class clazz boolean atomic [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^this.clazz = dynamicPropertyHandlerClass;^53^^^^^52^56^this.clazz = clazz;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class)   Class clazz Class dynamicPropertyHandlerClass [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^this.atomic = true;^54^^^^^52^56^this.atomic = false;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class)   Class clazz Class dynamicPropertyHandlerClass [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^this.atomic = atomic;this.atomic = false;^54^^^^^52^56^this.atomic = false;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class)   Class clazz Class dynamicPropertyHandlerClass [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^this.dynamicPropertyHandlerClass = clazz;^55^^^^^52^56^this.dynamicPropertyHandlerClass = dynamicPropertyHandlerClass;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] <init> [RETURN_TYPE] Class)   Class clazz Class dynamicPropertyHandlerClass [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P2_Replace_Operator]^return dynamicPropertyHandlerClass == null;^70^^^^^69^71^return dynamicPropertyHandlerClass != null;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] isDynamic [RETURN_TYPE] boolean   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^return clazz != null;^70^^^^^69^71^return dynamicPropertyHandlerClass != null;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] isDynamic [RETURN_TYPE] boolean   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^return dynamicPropertyHandlerClass ;^70^^^^^69^71^return dynamicPropertyHandlerClass != null;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] isDynamic [RETURN_TYPE] boolean   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  propertyDescriptors  String[]  propertyNames  
[P2_Replace_Operator]^if  ( propertyDescriptors != null )  {^74^^^^^73^99^if  ( propertyDescriptors == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^if  ( pds == null )  {^74^^^^^73^99^if  ( propertyDescriptors == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^if  ( propertyDescriptors == false )  {^74^^^^^73^99^if  ( propertyDescriptors == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P9_Replace_Statement]^if  ( propertyNames == null )  {^74^^^^^73^99^if  ( propertyDescriptors == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P15_Unwrap_Block]^try {    java.beans.BeanInfo bi = null;    if (clazz.isInterface()) {        bi = java.beans.Introspector.getBeanInfo(clazz);    }else {        bi = java.beans.Introspector.getBeanInfo(clazz, java.lang.Object.class);    }    java.beans.PropertyDescriptor[] pds = bi.getPropertyDescriptors();    java.beans.PropertyDescriptor[] descriptors = new java.beans.PropertyDescriptor[pds.length];    java.lang.System.arraycopy(pds, 0, descriptors, 0, pds.length);    java.util.Arrays.sort(descriptors, new java.util.Comparator() {        public int compare(java.lang.Object left, java.lang.Object right) {            return ((java.beans.PropertyDescriptor) (left)).getName().compareTo(((java.beans.PropertyDescriptor) (right)).getName());        }    });    propertyDescriptors = descriptors;} catch (java.beans.IntrospectionException ex) {    ex.printStackTrace();};^74^75^76^77^78^73^99^if  ( propertyDescriptors == null )  { try { BeanInfo bi = null; if  ( clazz.isInterface (  )  )  { bi = Introspector.getBeanInfo ( clazz ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P16_Remove_Block]^^74^75^76^77^78^73^99^if  ( propertyDescriptors == null )  { try { BeanInfo bi = null; if  ( clazz.isInterface (  )  )  { bi = Introspector.getBeanInfo ( clazz ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^if  ( clazz.getName (  )  )  {^77^^^^^73^99^if  ( clazz.isInterface (  )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P15_Unwrap_Block]^bi = java.beans.Introspector.getBeanInfo(clazz);^77^78^79^^^73^99^if  ( clazz.isInterface (  )  )  { bi = Introspector.getBeanInfo ( clazz ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P16_Remove_Block]^^77^78^79^^^73^99^if  ( clazz.isInterface (  )  )  { bi = Introspector.getBeanInfo ( clazz ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo ( dynamicPropertyHandlerClass, Object.class ) ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo ( clazz, Object.dynamicPropertyHandlerClass ) ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo (  Object.class ) ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^bi = Introspector.getBeanInfo ( clazz ) ;bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo ( dynamicPropertyHandlerClass ) ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi  = null ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;bi = Introspector.getBeanInfo ( clazz ) ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^if  ( dynamicPropertyHandlerClass.isInterface (  )  )  {^77^^^^^73^99^if  ( clazz.isInterface (  )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo ( clazz, Object.dynamicPropertyHandlerClass ) ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo (  Object.class ) ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi  =  bi ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^bi = Introspector.getBeanInfo ( clazz ) ;bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^propertyDescriptors = propertyDescriptors;^92^^^^^73^99^propertyDescriptors = descriptors;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^propertyDescriptors =  pds;^92^^^^^73^99^propertyDescriptors = descriptors;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^return  (  ( PropertyDescriptor )  left ) .getName (  )  .equals ( left )  .getName (  )  ) ;^88^89^^^^73^99^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^83^^^^^73^99^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^83^^^^^73^99^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^83^^^^^73^99^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^84^^^^^73^99^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^84^^^^^73^99^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^84^^^^^73^99^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^if  ( dynamicPropertyHandlerClass.getName (  )  )  {^77^^^^^73^99^if  ( clazz.isInterface (  )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^bi = Introspector.getBeanInfo ( dynamicPropertyHandlerClass, Object.class ) ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^PropertyDescriptor[] pds = bi .getPropertyDescriptors (  )  ;^83^^^^^73^99^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^83^^^^^73^99^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, 4, descriptors, 4, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, -7, descriptors, -7, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( propertyDescriptors, 0, descriptors, 0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( pds, 0, propertyDescriptors, 0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy (  0, descriptors, 0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( pds, 0,  0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( pds, 0, descriptors, 0 ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( descriptors, 0, pds, 0, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( pds, 0, pds.length, 0, descriptors ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^System.arraycopy ( pds.length, 0, descriptors, 0, pds ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P4_Replace_Constructor]^Arrays.sort (  new Comparator (  )  {^86^^^^^73^99^Arrays.sort ( descriptors, new Comparator (  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^Arrays.sort ( propertyDescriptors, new Comparator (  )  {^86^^^^^73^99^Arrays.sort ( descriptors, new Comparator (  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^88^89^^^^73^99^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^89^^^^^73^99^(  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P12_Insert_Condition]^if  ( propertyDescriptors == null )  { (  ( PropertyDescriptor )  right ) .getName (  )  ) ; }^89^^^^^73^99^(  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^bi = Introspector .getBeanInfo ( this )  ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi  =  bi ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^bi = Introspector .getBeanInfo ( null )  ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^83^84^^^^73^99^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ; PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, 7, descriptors, 7, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, -9, descriptors, -9, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^95^^^^^73^99^ex.printStackTrace (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi  =  bi ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi  = null ;^81^^^^^77^82^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^bi = Introspector .getBeanInfo ( 4 )  ;^78^^^^^73^99^bi = Introspector.getBeanInfo ( clazz ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P8_Replace_Mix]^bi ;^81^^^^^73^99^bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^return  (  ( PropertyDescriptor )  left ) .getName (  )  .equals ( right )  .getName (  )  ) ;^88^89^^^^73^99^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, -1, descriptors, -1, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, 1, descriptors, 1, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P3_Replace_Literal]^System.arraycopy ( pds, -6, descriptors, -6, pds.length ) ;^85^^^^^73^99^System.arraycopy ( pds, 0, descriptors, 0, pds.length ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P5_Replace_Variable]^return pds;^98^^^^^73^99^return propertyDescriptors;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptors [RETURN_TYPE] PropertyDescriptor[]   [VARIABLES] boolean  atomic  BeanInfo  bi  IntrospectionException  ex  Class  clazz  dynamicPropertyHandlerClass  Object  left  right  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^return  (  ( PropertyDescriptor )  left ) .getName (  )  .equals ( right )  .getName (  )  ) ;^88^89^^^^87^90^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  Object  left  right  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P7_Replace_Invocation]^return  (  ( PropertyDescriptor )  left ) .getName (  )  .equals ( left )  .getName (  )  ) ;^88^89^^^^87^90^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  Object  left  right  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^88^89^^^^87^90^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  Object  left  right  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P14_Delete_Statement]^^89^^^^^87^90^(  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  Object  left  right  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P12_Insert_Condition]^if  ( propertyDescriptors == null )  { (  ( PropertyDescriptor )  right ) .getName (  )  ) ; }^89^^^^^87^90^(  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  Object  left  right  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  propertyNames  
[P2_Replace_Operator]^if  ( propertyNames != null )  {^102^^^^^101^123^if  ( propertyNames == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( names == null )  {^102^^^^^101^123^if  ( propertyNames == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P6_Replace_Expression]^if  ( i < pds.length )  {^102^^^^^101^123^if  ( propertyNames == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P8_Replace_Mix]^if  ( propertyNames == false )  {^102^^^^^101^123^if  ( propertyNames == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P9_Replace_Statement]^if  ( propertyDescriptors == null )  {^102^^^^^101^123^if  ( propertyNames == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P9_Replace_Statement]^if  ( propertyNames[i] == propertyName )  {^102^^^^^101^123^if  ( propertyNames == null )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P15_Unwrap_Block]^java.beans.PropertyDescriptor[] pds = getPropertyDescriptors(); java.lang.String[] names = new java.lang.String[pds.length]; for (int i = 0; i < (pds.length); i++) {    names[i] = pds[i].getName();}; propertyNames = names;^102^103^104^105^106^101^123^if  ( propertyNames == null )  { PropertyDescriptor[] pds = getPropertyDescriptors (  ) ; String[] names = new String[pds.length]; for  ( int i = 0; i < pds.length; i++ )  { names[i] = pds[i].getName (  ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P16_Remove_Block]^^102^103^104^105^106^101^123^if  ( propertyNames == null )  { PropertyDescriptor[] pds = getPropertyDescriptors (  ) ; String[] names = new String[pds.length]; for  ( int i = 0; i < pds.length; i++ )  { names[i] = pds[i].getName (  ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < pds.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= pds.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < pds.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( pdsnt i = 0; i < i.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( pds.lengthnt i = 0; i < i; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P8_Replace_Mix]^for  ( int i = 0; i < propertyDescriptors.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^names[i] = propertyDescriptors[i].getName (  ) ;^106^^^^^101^123^names[i] = pds[i].getName (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P8_Replace_Mix]^names[i] ;^106^^^^^101^123^names[i] = pds[i].getName (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P14_Delete_Statement]^^106^^^^^101^123^names[i] = pds[i].getName (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;names[i] = pds[i].getName (  ) ;^106^^^^^101^123^names[i] = pds[i].getName (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P8_Replace_Mix]^names[i]  = null ;^106^^^^^101^123^names[i] = pds[i].getName (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^propertyNames = propertyNames;^108^^^^^101^123^propertyNames = names;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P8_Replace_Mix]^propertyNames =  null;^108^^^^^101^123^propertyNames = names;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P12_Insert_Condition]^if  ( propertyNames == null )  { propertyNames = names; }^108^^^^^101^123^propertyNames = names;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P7_Replace_Invocation]^PropertyDescriptor[] pds = isDynamic (  ) ;^103^^^^^101^123^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^103^^^^^101^123^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^103^^^^^101^123^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^103^^^^^101^123^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P14_Delete_Statement]^^103^104^^^^101^123^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ; String[] names = new String[pds.length];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P3_Replace_Literal]^for  ( int i = -2; i < pds.length; i++ )  {^105^^^^^101^123^for  ( int i = 0; i < pds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P14_Delete_Statement]^^103^^^^^101^123^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P2_Replace_Operator]^if  ( propertyNames[i] != propertyName )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( names[i] == propertyName )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( propertyNamess[i] == propertyName )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( propertyName[i] == propertyNames )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P9_Replace_Statement]^if  ( propertyNames == null )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P9_Replace_Statement]^if  ( propertyNames[i].equals ( propertyName )  )  {^112^^^^^101^123^if  ( propertyNames[i] == propertyName )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P15_Unwrap_Block]^return propertyDescriptors[i];^112^113^114^^^101^123^if  ( propertyNames[i] == propertyName )  { return propertyDescriptors[i]; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P16_Remove_Block]^^112^113^114^^^101^123^if  ( propertyNames[i] == propertyName )  { return propertyDescriptors[i]; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P13_Insert_Block]^if  ( propertyNames[i].equals ( propertyName )  )  {     return propertyDescriptors[i]; }^112^^^^^101^123^[Delete]^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^return pds[i];^113^^^^^101^123^return propertyDescriptors[i];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < propertyNames.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= propertyNames.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P3_Replace_Literal]^for  ( int i = -9; i < propertyNames.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < names.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( propertyNames.lengthnt i = 0; i < i; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < propertyNames; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < propertyNames.length.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < propertyNames.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P3_Replace_Literal]^for  ( int i = -5; i < propertyNames.length; i++ )  {^111^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( names[i].equals ( propertyName )  )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( propertyNamess[i].equals ( propertyName )  )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^if  ( propertyName[i].equals ( propertyNames )  )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P9_Replace_Statement]^if  ( propertyNames[i] == propertyName )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P15_Unwrap_Block]^return propertyDescriptors[i];^118^119^120^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  { return propertyDescriptors[i]; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P16_Remove_Block]^^118^119^120^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  { return propertyDescriptors[i]; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P13_Insert_Block]^if  (  ( propertyNames[i] )  == propertyName )  {     return propertyDescriptors[i]; }^118^^^^^101^123^[Delete]^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^return pds[i];^119^^^^^101^123^return propertyDescriptors[i];^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < propertyNames.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= propertyNames.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < propertyNames.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < names.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( propertyNament i = 0; i < is.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < propertyNamess.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P7_Replace_Invocation]^if  ( propertyNames[i] .compareTo ( propertyName )   )  {^118^^^^^101^123^if  ( propertyNames[i].equals ( propertyName )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < propertyNames.length; i++ )  {^117^^^^^101^123^for  ( int i = 0; i < propertyNames.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P8_Replace_Mix]^return this;^122^^^^^101^123^return null;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getPropertyDescriptor [RETURN_TYPE] PropertyDescriptor   String propertyName [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  String  propertyName  int  i  
[P5_Replace_Variable]^return clazz;^130^^^^^129^131^return dynamicPropertyHandlerClass;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] getDynamicPropertyHandlerClass [RETURN_TYPE] Class   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  boolean  atomic  PropertyDescriptor[]  descriptors  pds  propertyDescriptors  String[]  names  propertyNames  
[P3_Replace_Literal]^buffer.append ( "BeanInfo [class = o" ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "]" ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "\n    " ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ": " ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( "BeanInfo [class = " ) ;^135^^^^^133^153^buffer.append ( "BeanInfo [class = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P5_Replace_Variable]^buffer.append ( dynamicPropertyHandlerClass.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^buffer .toString (  )  ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^buffer.append ( clazz.isInterface (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "]" ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "\n    " ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getPropertyType (  )  ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ": " ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "BeanInfo [class = " ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( clazz.getName (  )  ) ;^136^^^^^133^153^buffer.append ( clazz.getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^if  ( isAtomic (  )  )  {^137^^^^^133^153^if  ( isDynamic (  )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P15_Unwrap_Block]^buffer.append(", dynamic");^137^138^139^^^133^153^if  ( isDynamic (  )  )  { buffer.append ( ", dynamic" ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P16_Remove_Block]^^137^138^139^^^133^153^if  ( isDynamic (  )  )  { buffer.append ( ", dynamic" ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P13_Insert_Block]^if  ( isAtomic (  )  )  {     buffer.append ( ", atomic" ) ; }^137^^^^^133^153^[Delete]^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( ", dy" ) ;^138^^^^^133^153^buffer.append ( ", dynamic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^138^^^^^133^153^buffer.append ( ", dynamic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( ", dynamic dynam" ) ;^138^^^^^133^153^buffer.append ( ", dynamic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^buffer .append ( 4 )  ;^138^^^^^133^153^buffer.append ( ", dynamic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^if  ( isDynamic (  )  )  {^140^^^^^133^153^if  ( isAtomic (  )  )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P15_Unwrap_Block]^buffer.append(", atomic");^140^141^142^^^133^153^if  ( isAtomic (  )  )  { buffer.append ( ", atomic" ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P16_Remove_Block]^^140^141^142^^^133^153^if  ( isAtomic (  )  )  { buffer.append ( ", atomic" ) ; }^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P13_Insert_Block]^if  ( isDynamic (  )  )  {     buffer.append ( ", dynamic" ) ; }^140^^^^^133^153^[Delete]^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( "atomi atomic" ) ;^141^^^^^133^153^buffer.append ( ", atomic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^141^^^^^133^153^buffer.append ( ", atomic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( " at atomic" ) ;^141^^^^^133^153^buffer.append ( ", atomic" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( "opertie properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^143^144^^^^133^153^buffer.append ( ", properties = " ) ; PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "]" ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "\n    " ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getPropertyType (  )  ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ": " ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "BeanInfo [class = " ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( ", properties = " ) ;^143^^^^^133^153^buffer.append ( ", properties = " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^PropertyDescriptor[] jpds = isDynamic (  ) ;^144^^^^^133^153^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^144^^^^^133^153^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^144^^^^^133^153^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^144^^^^^133^153^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^144^^^^^133^153^PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < jpds.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i == jpds.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^for  ( int i = -2; i < jpds.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < propertyDescriptors.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( "\nn    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "]" ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ": " ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "BeanInfo [class = " ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( "\n    " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P5_Replace_Variable]^buffer.append ( propertyDescriptors[i].getPropertyType (  )  ) ;^147^^^^^133^153^buffer.append ( jpds[i].getPropertyType (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^147^^^^^133^153^buffer.append ( jpds[i].getPropertyType (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( jpds[i].getPropertyType (  )  ) ;^147^^^^^133^153^buffer.append ( jpds[i].getPropertyType (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( jpds[i].getPropertyType (  )  ) ;^147^^^^^133^153^buffer.append ( jpds[i].getPropertyType (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( jpds[i].getPropertyType (  )  ) ;^147^^^^^133^153^buffer.append ( jpds[i].getPropertyType (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^147^148^^^^133^153^buffer.append ( jpds[i].getPropertyType (  )  ) ; buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( ": :" ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "]" ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "\n    " ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "BeanInfo [class = " ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( ": " ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P5_Replace_Variable]^buffer.append ( propertyDescriptors[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^names[i] = pds[i].getName (  ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "]" ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "\n    " ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getPropertyType (  )  ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ": " ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "BeanInfo [class = " ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( jpds[i].getName (  )  ) ;^149^^^^^133^153^buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < jpds.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < jpds.length; i++ )  {^145^^^^^133^153^for  ( int i = 0; i < jpds.length; i++ )  {^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( "\n " ) ;^146^^^^^133^153^buffer.append ( "\n    " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^146^147^^^^133^153^buffer.append ( "\n    " ) ; buffer.append ( jpds[i].getPropertyType (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( "" ) ;^148^^^^^133^153^buffer.append ( ": " ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^148^149^^^^133^153^buffer.append ( ": " ) ; buffer.append ( jpds[i].getName (  )  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P3_Replace_Literal]^buffer.append ( "" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( jpds[i].getName (  )  ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", dynamic" ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "\n    " ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", properties = " ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ": " ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( clazz.getName (  )  ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( "BeanInfo [class = " ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( ", atomic" ) ;buffer.append ( "]" ) ;^151^^^^^133^153^buffer.append ( "]" ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^return buffer.append (  ) ;^152^^^^^133^153^return buffer.toString (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P7_Replace_Invocation]^return buffer .StringBuffer (  )  ;^152^^^^^133^153^return buffer.toString (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^152^^^^^133^153^return buffer.toString (  ) ;^[CLASS] JXPathBasicBeanInfo 1  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Class  clazz  dynamicPropertyHandlerClass  StringBuffer  buffer  boolean  atomic  PropertyDescriptor[]  descriptors  jpds  pds  propertyDescriptors  String[]  names  propertyNames  int  i  
[P14_Delete_Statement]^^88^89^^^^87^90^return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] boolean  Object  left  right  
[P14_Delete_Statement]^^89^^^^^87^90^(  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Object left Object right [VARIABLES] boolean  Object  left  right  
