[P3_Replace_Literal]^private boolean basicKnown = true;^44^^^^^39^49^private boolean basicKnown = false;^[CLASS] Path   [VARIABLES] 
[P8_Replace_Mix]^private boolean basicKnown ;^44^^^^^39^49^private boolean basicKnown = false;^[CLASS] Path   [VARIABLES] 
[P8_Replace_Mix]^this.steps =  null;^48^^^^^47^49^this.steps = steps;^[CLASS] Path  [METHOD] <init> [RETURN_TYPE] Step[])   Step[] steps [VARIABLES] Step[]  steps  boolean  basic  basicKnown  
[P2_Replace_Operator]^if  ( steps == null )  {^56^^^^^55^65^if  ( steps != null )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P6_Replace_Expression]^if  ( i < steps.length )  {^56^^^^^55^65^if  ( steps != null )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P8_Replace_Mix]^if  ( steps != true )  {^56^^^^^55^65^if  ( steps != null )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P9_Replace_Statement]^if  ( namespaceURI != null )  {^56^^^^^55^65^if  ( steps != null )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P9_Replace_Statement]^if  ( predicates != null )  {^56^^^^^55^65^if  ( steps != null )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P9_Replace_Statement]^if  ( pointer != null )  {^56^^^^^55^65^if  ( steps != null )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P15_Unwrap_Block]^for (int i = 0; i < (steps.length); i++) {    if (steps[i].isContextDependent()) {        return true;    }};^56^57^58^59^60^55^65^if  ( steps != null )  { for  ( int i = 0; i < steps.length; i++ )  { if  ( steps[i].isContextDependent (  )  )  { return true; }^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P16_Remove_Block]^^56^57^58^59^60^55^65^if  ( steps != null )  { for  ( int i = 0; i < steps.length; i++ )  { if  ( steps[i].isContextDependent (  )  )  { return true; }^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P7_Replace_Invocation]^if  ( steps[i].getNamespaceURI (  )  )  {^58^^^^^55^65^if  ( steps[i].isContextDependent (  )  )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P15_Unwrap_Block]^return true;^58^59^60^^^55^65^if  ( steps[i].isContextDependent (  )  )  { return true; }^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P16_Remove_Block]^^58^59^60^^^55^65^if  ( steps[i].isContextDependent (  )  )  { return true; }^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P13_Insert_Block]^if  ( ! ( isSimpleStep ( steps[i] )  )  )  {     return null; }^58^^^^^55^65^[Delete]^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P13_Insert_Block]^if  ( ctx.hasNext (  )  )  {     return null; }^58^^^^^55^65^[Delete]^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P13_Insert_Block]^if  ( !firstIndex )  {     return false; }^58^^^^^55^65^[Delete]^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^return false;^59^^^^^55^65^return true;^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P1_Replace_Type]^for  (  short  i = 0; i < steps.length; i++ )  {^57^^^^^55^65^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P2_Replace_Operator]^for  ( int i = 0; i > steps.length; i++ )  {^57^^^^^55^65^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^for  ( int i = i; i < steps.length; i++ )  {^57^^^^^55^65^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P13_Insert_Block]^if  (  ( steps )  != null )  {     for  ( int i = 0; i <  ( steps.length ) ; i++ )  {         if  ( steps[i].isContextDependent (  )  )  {             return true;         }     } }^57^^^^^55^65^[Delete]^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P13_Insert_Block]^if  ( steps[i].isContextDependent (  )  )  {     return true; }^58^^^^^55^65^[Delete]^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P7_Replace_Invocation]^if  ( steps[i] .getNodeTest (  )   )  {^58^^^^^55^65^if  ( steps[i].isContextDependent (  )  )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P2_Replace_Operator]^for  ( int i = 0; i <= steps.length; i++ )  {^57^^^^^55^65^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^for  ( int i = 4; i < steps.length; i++ )  {^57^^^^^55^65^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P1_Replace_Type]^for  (  long  i = 0; i < steps.length; i++ )  {^57^^^^^55^65^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^return true;^64^^^^^55^65^return false;^[CLASS] Path  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P8_Replace_Mix]^if  ( isSimpleStep ( steps[i] )  ) {^78^^^^^72^85^if  ( !isSimpleStep ( steps[i] )  ) {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P15_Unwrap_Block]^basic = false; break;^78^79^80^81^^72^85^if  ( !isSimpleStep ( steps[i] )  ) { basic = false; break; }^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P16_Remove_Block]^^78^79^80^81^^72^85^if  ( !isSimpleStep ( steps[i] )  ) { basic = false; break; }^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P13_Insert_Block]^if  ( ! ( isSimpleStep ( steps[i] )  )  )  {     return null; }^78^^^^^72^85^[Delete]^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^basic = true;^79^^^^^72^85^basic = false;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P11_Insert_Donor_Statement]^firstIndex = false;basic = false;^79^^^^^72^85^basic = false;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P11_Insert_Donor_Statement]^basic = true;basic = false;^79^^^^^72^85^basic = false;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P1_Replace_Type]^for  (  short  i = 0; i < steps.length; i++ )  {^77^^^^^72^85^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P2_Replace_Operator]^for  ( int i = 0; i > steps.length; i++ )  {^77^^^^^72^85^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^basicKnown = false;^74^^^^^72^85^basicKnown = true;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P11_Insert_Donor_Statement]^basic = true;basicKnown = true;^74^^^^^72^85^basicKnown = true;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^basic = false;^75^^^^^72^85^basic = true;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P11_Insert_Donor_Statement]^basic = false;basic = true;^75^^^^^72^85^basic = true;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P11_Insert_Donor_Statement]^basicKnown = true;basic = true;^75^^^^^72^85^basic = true;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P7_Replace_Invocation]^Step[] steps = isSimplePath (  ) ;^76^^^^^72^85^Step[] steps = getSteps (  ) ;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P1_Replace_Type]^for  (  long  i = 0; i < steps.length; i++ )  {^77^^^^^72^85^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^for  ( int i = i; i < steps.length; i++ )  {^77^^^^^72^85^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P14_Delete_Statement]^^76^^^^^72^85^Step[] steps = getSteps (  ) ;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P2_Replace_Operator]^for  ( int i = 0; i <= steps.length; i++ )  {^77^^^^^72^85^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P3_Replace_Literal]^for  ( int i = 3; i < steps.length; i++ )  {^77^^^^^72^85^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P5_Replace_Variable]^return basicKnown;^84^^^^^72^85^return basic;^[CLASS] Path  [METHOD] isSimplePath [RETURN_TYPE] boolean   [VARIABLES] Step[]  steps  int  i  boolean  basic  basicKnown  
[P2_Replace_Operator]^if  ( ! ( nodeTest  |  NodeNameTest )  ) {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^if  (  ( nodeTest instanceof NodeNameTest )  ) {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P9_Replace_Statement]^if  ( nodeTest instanceof NodeNameTest )  {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P9_Replace_Statement]^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P15_Unwrap_Block]^return false;^107^108^109^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P16_Remove_Block]^^107^108^109^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^107^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {     return false; }^107^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  ( namespaceURI != null )  {     nodeTest = new NodeNameTest ( qname, namespaceURI ) ; }^107^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P3_Replace_Literal]^return true;^108^^^^^92^117^return false;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^if  (  (  ( NodeNameTest )  nodeTest ) .getNamespaceURI (  )  )  {^111^^^^^92^117^if  (  (  ( NodeNameTest )  nodeTest ) .isWildcard (  )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P15_Unwrap_Block]^return false;^111^112^113^^^92^117^if  (  (  ( NodeNameTest )  nodeTest ) .isWildcard (  )  )  { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P16_Remove_Block]^^111^112^113^^^92^117^if  (  (  ( NodeNameTest )  nodeTest ) .isWildcard (  )  )  { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  (  (  ( NameAttributeTest )   ( predicates[i] )  ) .getNameTestExpression (  ) .isContextDependent (  )  )  {     return false; }^111^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {     return false; }^111^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {     return false; }^111^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P3_Replace_Literal]^return true;^112^^^^^92^117^return false;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^return isSimpleStep ( step.getPredicates (  )  ) ;^114^^^^^92^117^return areBasicPredicates ( step.getPredicates (  )  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P11_Insert_Donor_Statement]^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;NodeTest nodeTest = step.getNodeTest (  ) ;^106^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P12_Insert_Condition]^if  ( ! ( nodeTest instanceof NodeNameTest )  ) { NodeTest nodeTest = step.getNodeTest (  ) ; }^106^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^106^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P11_Insert_Donor_Statement]^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;NodeTest nodeTest = step.getNodeTest (  ) ;^106^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^if  (  (  ( NodeNameTest )  nodeTest )  .getPredicates (  )   )  {^111^^^^^92^117^if  (  (  ( NodeNameTest )  nodeTest ) .isWildcard (  )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^111^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^114^^^^^92^117^return areBasicPredicates ( step.getPredicates (  )  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^return areBasicPredicates ( step .getNodeTest (  )   ) ;^114^^^^^92^117^return areBasicPredicates ( step.getPredicates (  )  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P2_Replace_Operator]^if  ( ! ( nodeTest  <=  NodeNameTest )  ) {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^NodeTest nodeTest = step .getPredicates (  )  ;^106^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^else if  ( step .getPredicates (  )   == Compiler.AXIS_CHILD || step^104^105^^^^92^117^else if  ( step.getAxis (  )  == Compiler.AXIS_CHILD || step.getAxis (  )  == Compiler.AXIS_ATTRIBUTE )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^104^105^106^107^108^92^117^else if  ( step.getAxis (  )  == Compiler.AXIS_CHILD || step.getAxis (  )  == Compiler.AXIS_ATTRIBUTE )  { NodeTest nodeTest = step.getNodeTest (  ) ; if  ( ! ( nodeTest instanceof NodeNameTest )  ) { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^|| step .getPredicates (  )   == Compiler.AXIS_ATTRIBUTE )  {^105^^^^^92^117^|| step.getAxis (  )  == Compiler.AXIS_ATTRIBUTE )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^105^106^^^^92^117^|| step.getAxis (  )  == Compiler.AXIS_ATTRIBUTE )  { NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P2_Replace_Operator]^if  ( ! ( nodeTest  <<  NodeTypeTest )  )  {^95^^^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^if  (  ( nodeTest instanceof NodeTypeTest )  )  {^95^^^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P9_Replace_Statement]^if  ( nodeTest instanceof NodeNameTest )  {^95^^^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P9_Replace_Statement]^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^95^^^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P15_Unwrap_Block]^return false;^95^96^97^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P16_Remove_Block]^^95^96^97^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^95^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {     return false; }^95^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  ( namespaceURI != null )  {     nodeTest = new NodeNameTest ( qname, namespaceURI ) ; }^95^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P3_Replace_Literal]^return true;^96^^^^^92^117^return false;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P3_Replace_Literal]^return true;^100^^^^^92^117^return false;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^return isSimpleStep ( step.getPredicates (  )  ) ;^102^^^^^92^117^return areBasicPredicates ( step.getPredicates (  )  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P11_Insert_Donor_Statement]^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;NodeTest nodeTest = step.getNodeTest (  ) ;^94^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P12_Insert_Condition]^if  ( ! ( nodeTest instanceof NodeNameTest )  ) { NodeTest nodeTest = step.getNodeTest (  ) ; }^94^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^94^^^^^92^117^[Delete]^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P1_Replace_Type]^long  nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNamespaceURI (  ) ;^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P8_Replace_Mix]^int nodeType =  (  ( NodeTypeTest )  nodeTest )  .getNodeTest (  )  ;^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P11_Insert_Donor_Statement]^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P11_Insert_Donor_Statement]^NodeTest nodeTest = step.getNodeTest (  ) ;int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P12_Insert_Condition]^if  (  (  ( NodeNameTest )  nodeTest ) .isWildcard (  )  )  { int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ; }^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^NodeTest nodeTest = step .getPredicates (  )  ;^94^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^94^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P11_Insert_Donor_Statement]^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;NodeTest nodeTest = step.getNodeTest (  ) ;^94^^^^^92^117^NodeTest nodeTest = step.getNodeTest (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^return areBasicPredicates ( step .getNodeTest (  )   ) ;^102^^^^^92^117^return areBasicPredicates ( step.getPredicates (  )  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^102^^^^^92^117^return areBasicPredicates ( step.getPredicates (  )  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P2_Replace_Operator]^if  ( ! ( nodeTest  >  NodeTypeTest )  )  {^95^^^^^92^117^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P2_Replace_Operator]^if  ( ! ( nodeTest  >=  NodeNameTest )  ) {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P2_Replace_Operator]^if  ( ! ( nodeTest  ||  NodeNameTest )  ) {^107^^^^^92^117^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P1_Replace_Type]^short  nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^98^^^^^92^117^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P7_Replace_Invocation]^if  ( step .getPredicates (  )   == Compiler.AXIS_SELF )  {^93^^^^^92^117^if  ( step.getAxis (  )  == Compiler.AXIS_SELF )  {^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P14_Delete_Statement]^^93^94^95^96^97^92^117^if  ( step.getAxis (  )  == Compiler.AXIS_SELF )  { NodeTest nodeTest = step.getNodeTest (  ) ; if  ( ! ( nodeTest instanceof NodeTypeTest )  )  { return false; }^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P3_Replace_Literal]^return true;^116^^^^^92^117^return false;^[CLASS] Path  [METHOD] isSimpleStep [RETURN_TYPE] boolean   Step step [VARIABLES] Step[]  steps  boolean  basic  basicKnown  Step  step  NodeTest  nodeTest  int  nodeType  
[P2_Replace_Operator]^if  ( predicates != null || predicates.length != 0 )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates == null && predicates.length != 0 )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates != null && predicates.length == 0 )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^if  ( predicates != null && predicates.length != -7 )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^if  ( predicates != null && predicates.length != i )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P6_Replace_Expression]^if  ( predicates != null ) {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P6_Replace_Expression]^if  (  predicates.length != 0 )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P6_Replace_Expression]^if  ( i < predicates.length )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P6_Replace_Expression]^if  ( predicates[i] instanceof NameAttributeTest )  {^120^^^^^119^142^if  ( predicates != null && predicates.length != 0 )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( predicates[i] )  instanceof NameAttributeTest )  {     if  (  (  ( NameAttributeTest )   ( predicates[i] )  ) .getNameTestExpression (  ) .isContextDependent (  )  )  {         return false;     } }else     if  ( predicates[i].isContextDependent (  )  )  {         return false;     }else {         if  ( !firstIndex )  {             return false;         }         firstIndex = false;     }^120^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates[i]  >  NameAttributeTest )  {^123^^^^^119^142^if  ( predicates[i] instanceof NameAttributeTest )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P5_Replace_Variable]^if  ( i[i] predicatesnstanceof NameAttributeTest )  {^123^^^^^119^142^if  ( predicates[i] instanceof NameAttributeTest )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P15_Unwrap_Block]^if (((org.apache.commons.jxpath.ri.compiler.NameAttributeTest) (predicates[i])).getNameTestExpression().isContextDependent()) {    return false;};^123^124^125^126^127^119^142^if  ( predicates[i] instanceof NameAttributeTest )  { if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P16_Remove_Block]^^123^124^125^126^127^119^142^if  ( predicates[i] instanceof NameAttributeTest )  { if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P5_Replace_Variable]^else predicatesf  ( i[i].isContextDependent (  )  )  {^130^^^^^119^142^else if  ( predicates[i].isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P8_Replace_Mix]^else if  ( predicates[i] .getNodeTest (  )   )  {^130^^^^^119^142^else if  ( predicates[i].isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P15_Unwrap_Block]^return false;^130^131^132^^^119^142^else if  ( predicates[i].isContextDependent (  )  )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P16_Remove_Block]^^130^131^132^^^119^142^else if  ( predicates[i].isContextDependent (  )  )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P5_Replace_Variable]^if  ( !basicKnown )  {^134^^^^^119^142^if  ( !firstIndex )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P15_Unwrap_Block]^return false;^134^135^136^^^119^142^if  ( !firstIndex )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P16_Remove_Block]^^134^135^136^^^119^142^if  ( !firstIndex )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  (  ( steps.length )  == 0 )  {     return context; }^134^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  ( ! ( isSimpleStep ( steps[i] )  )  )  {     return null; }^134^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  ( ctx.hasNext (  )  )  {     return null; }^134^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  ( steps[i].isContextDependent (  )  )  {     return true; }^134^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^134^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^return true;^135^^^^^119^142^return false;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^firstIndex = true;^137^^^^^119^142^firstIndex = false;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P11_Insert_Donor_Statement]^basic = false;firstIndex = false;^137^^^^^119^142^firstIndex = false;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^return true;^131^^^^^119^142^return false;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P7_Replace_Invocation]^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  )  .getNodeTest (  )   )  {^124^125^126^^^119^142^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P15_Unwrap_Block]^return false;^124^125^126^127^128^119^142^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P16_Remove_Block]^^124^125^126^127^128^119^142^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  { return false; }^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^124^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^return true;^127^^^^^119^142^return false;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P7_Replace_Invocation]^if  (  (  ( NameAttributeTest )  predicates[i] )  .getNamespaceURI ( 3 )  .isContextDependent (  )  )  {^124^125^126^^^119^142^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P13_Insert_Block]^if  (  (  ( NameAttributeTest )   ( predicates[i] )  ) .getNameTestExpression (  ) .isContextDependent (  )  )  {     return false; }^124^^^^^119^142^[Delete]^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P8_Replace_Mix]^if  ( predicates[i].isContextDependent (  )  )  {^130^^^^^119^142^else if  ( predicates[i].isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P8_Replace_Mix]^else {^130^^^^^119^142^else if  ( predicates[i].isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P7_Replace_Invocation]^if  (  (  ( NameAttributeTest )  predicates[i] )  .getNamespaceURI ( 2 )  .isContextDependent (  )  )  {^124^125^126^^^119^142^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^boolean firstIndex = false;^121^^^^^119^142^boolean firstIndex = true;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^for  ( int i = 6; i < predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P8_Replace_Mix]^if  (  (  ( NameAttributeTest )  predicates[i] )  .getNamespaceURI ( 4 )  .isContextDependent (  )  )  {^124^125^126^^^119^142^if  (  (  ( NameAttributeTest )  predicates[i] ) .getNameTestExpression (  ) .isContextDependent (  )  )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates[i]  ==  NameAttributeTest )  {^123^^^^^119^142^if  ( predicates[i] instanceof NameAttributeTest )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i == predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^if  ( predicates[i]  ^  NameAttributeTest )  {^123^^^^^119^142^if  ( predicates[i] instanceof NameAttributeTest )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^for  ( int i = -2; i < predicates.length; i++ )  {^122^^^^^119^142^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P3_Replace_Literal]^return false;^141^^^^^119^142^return true;^[CLASS] Path  [METHOD] areBasicPredicates [RETURN_TYPE] boolean   Expression[] predicates [VARIABLES] Step[]  steps  boolean  basic  basicKnown  firstIndex  Expression[]  predicates  int  i  
[P2_Replace_Operator]^if  ( steps.length != 0 )  {^149^^^^^148^163^if  ( steps.length == 0 )  {^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P3_Replace_Literal]^if  ( steps.length == -4 )  {^149^^^^^148^163^if  ( steps.length == 0 )  {^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P8_Replace_Mix]^if  ( steps.length == 0  )  {^149^^^^^148^163^if  ( steps.length == 0 )  {^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P15_Unwrap_Block]^return context.getSingleNodePointer();^149^150^151^^^148^163^if  ( steps.length == 0 )  { return context.getSingleNodePointer (  ) ; }^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P16_Remove_Block]^^149^150^151^^^148^163^if  ( steps.length == 0 )  { return context.getSingleNodePointer (  ) ; }^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P13_Insert_Block]^if  (  ( steps.length )  == 0 )  {     return context; }^149^^^^^148^163^[Delete]^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P8_Replace_Mix]^return context .getJXPathContext (  )  ;^150^^^^^148^163^return context.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P13_Insert_Block]^if  (  ( steps.length )  == 0 )  {     return context.getSingleNodePointer (  ) ; }^150^^^^^148^163^[Delete]^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P14_Delete_Statement]^^150^^^^^148^163^return context.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P7_Replace_Invocation]^if  ( getSteps (  )  )  {^153^^^^^148^163^if  ( isSimplePath (  )  )  {^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P9_Replace_Statement]^if  ( !isSimpleStep ( steps[i] )  )  {^153^^^^^148^163^if  ( isSimplePath (  )  )  {^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P7_Replace_Invocation]^return evalSteps ( context ) ;^161^^^^^148^163^return searchForPath ( context ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P14_Delete_Statement]^^161^^^^^148^163^return searchForPath ( context ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P5_Replace_Variable]^return SimplePathInterpreter.interpretSimpleLocationPath (  ptr, steps ) ;^155^156^157^158^^148^163^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr, steps ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P5_Replace_Variable]^return SimplePathInterpreter.interpretSimpleLocationPath ( context,  steps ) ;^155^156^157^158^^148^163^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr, steps ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P5_Replace_Variable]^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr ) ;^155^156^157^158^^148^163^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr, steps ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P5_Replace_Variable]^return SimplePathInterpreter.interpretSimpleLocationPath ( ptr, context, steps ) ;^155^156^157^158^^148^163^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr, steps ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P5_Replace_Variable]^return SimplePathInterpreter.interpretSimpleLocationPath ( context, steps, ptr ) ;^155^156^157^158^^148^163^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr, steps ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P11_Insert_Donor_Statement]^Pointer pointer = ctx.getSingleNodePointer (  ) ;NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;^154^^^^^148^163^NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P11_Insert_Donor_Statement]^Pointer partial =  ( Pointer )  ctx.next (  ) ;NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;^154^^^^^148^163^NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P8_Replace_Mix]^NodePointer ptr =  ( NodePointer )  context .getJXPathContext (  )  ;^154^^^^^148^163^NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P14_Delete_Statement]^^154^^^^^148^163^NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P5_Replace_Variable]^return SimplePathInterpreter.interpretSimpleLocationPath ( steps, ptr, context ) ;^155^156^157^158^^148^163^return SimplePathInterpreter.interpretSimpleLocationPath ( context, ptr, steps ) ;^[CLASS] Path  [METHOD] getSingleNodePointerForSteps [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  NodePointer  ptr  
[P3_Replace_Literal]^EvalContext ctx = buildContextChain ( context, steps.length, false ) ;^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^EvalContext ctx = buildContextChain (  steps.length, true ) ;^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^EvalContext ctx = buildContextChain ( context,  true ) ;^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^EvalContext ctx = buildContextChain ( context.length, true ) ;^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P14_Delete_Statement]^^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^ctx = buildContextChain ( context, i, true ) ;EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^return buildContextChain ( context, steps.length, false ) ;EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^184^^^^^183^213^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^Pointer pointer = context.getSingleNodePointer (  ) ;^185^^^^^183^213^Pointer pointer = ctx.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;Pointer pointer = ctx.getSingleNodePointer (  ) ;^185^^^^^183^213^Pointer pointer = ctx.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P7_Replace_Invocation]^Pointer pointer = ctx .getJXPathContext (  )  ;^185^^^^^183^213^Pointer pointer = ctx.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P14_Delete_Statement]^^185^^^^^183^213^Pointer pointer = ctx.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^return context.getSingleNodePointer (  ) ;Pointer pointer = ctx.getSingleNodePointer (  ) ;^185^^^^^183^213^Pointer pointer = ctx.getSingleNodePointer (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P2_Replace_Operator]^if  ( pointer == null )  {^187^^^^^183^213^if  ( pointer != null )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^if  ( partial != null )  {^187^^^^^183^213^if  ( pointer != null )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^if  ( pointer != this )  {^187^^^^^183^213^if  ( pointer != null )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P9_Replace_Statement]^if  ( namespaceURI != null )  {^187^^^^^183^213^if  ( pointer != null )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P9_Replace_Statement]^if  ( steps != null )  {^187^^^^^183^213^if  ( pointer != null )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P9_Replace_Statement]^if  ( predicates != null )  {^187^^^^^183^213^if  ( pointer != null )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P15_Unwrap_Block]^return pointer;^187^188^189^^^183^213^if  ( pointer != null )  { return pointer; }^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P16_Remove_Block]^^187^188^189^^^183^213^if  ( pointer != null )  { return pointer; }^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  (  ( steps.length )  == 0 )  {     return context; }^187^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( ctx.hasNext (  )  )  {     return null; }^187^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( !firstIndex )  {     return false; }^187^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^return partial;^188^^^^^183^213^return pointer;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P7_Replace_Invocation]^if  ( !evalSteps ( steps[i] )  )  {^192^^^^^183^213^if  ( !isSimpleStep ( steps[i] )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P9_Replace_Statement]^if  ( isSimplePath (  )  )  {^192^^^^^183^213^if  ( !isSimpleStep ( steps[i] )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P15_Unwrap_Block]^return null;^192^193^194^^^183^213^if  ( !isSimpleStep ( steps[i] )  )  { return null; }^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P16_Remove_Block]^^192^193^194^^^183^213^if  ( !isSimpleStep ( steps[i] )  )  { return null; }^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( ctx.hasNext (  )  )  {     return null; }^192^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( ! ( isSimpleStep ( steps[i] )  )  )  {     basic = false;     break; }^192^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( !firstIndex )  {     return false; }^192^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( steps[i].isContextDependent (  )  )  {     return true; }^192^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return false;^193^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^if  ( context.hasNext (  )  )  {^196^^^^^183^213^if  ( ctx.hasNext (  )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P7_Replace_Invocation]^if  ( ctx .next (  )   )  {^196^^^^^183^213^if  ( ctx.hasNext (  )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( partial instanceof NodePointer )  {     return createNullPointer ( context,  (  ( NodePointer )   ( partial )  ) , steps, i ) ; }^196^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^if  ( context.hasNext (  )  )  {^198^^^^^183^213^if  ( ctx.hasNext (  )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^if  ( context .next (  )   )  {^198^^^^^183^213^if  ( ctx.hasNext (  )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P15_Unwrap_Block]^return null;^198^199^^201^202^183^213^if  ( ctx.hasNext (  )  )  {  return null; }^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P16_Remove_Block]^^198^199^^201^202^183^213^if  ( ctx.hasNext (  )  )  {  return null; }^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  (  ( steps.length )  == 0 )  {     return context; }^198^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( ! ( isSimpleStep ( steps[i] )  )  )  {     return null; }^198^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( !firstIndex )  {     return false; }^198^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( steps[i].isContextDependent (  )  )  {     return true; }^198^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^198^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return false;^201^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P2_Replace_Operator]^if  ( partial  |  NodePointer )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^if  ( pointer instanceof NodePointer )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P9_Replace_Statement]^if  ( nodeTest instanceof NodeNameTest )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^return SimplePathInterpreter.createNullPointer ( ctx, ( NodePointer )  partial, steps,^204^205^206^207^^183^213^return SimplePathInterpreter.createNullPointer ( context, ( NodePointer )  partial, steps,^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^return SimplePathInterpreter.createNullPointer (  ( NodePointer )  partial, steps,^204^205^206^207^^183^213^return SimplePathInterpreter.createNullPointer ( context, ( NodePointer )  partial, steps,^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^return SimplePathInterpreter.createNullPointer ( context, ( NodePointer )  partial,^204^205^206^207^^183^213^return SimplePathInterpreter.createNullPointer ( context, ( NodePointer )  partial, steps,^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P13_Insert_Block]^if  ( partial instanceof NodePointer )  {     return createNullPointer ( context,  (  ( NodePointer )   ( partial )  ) , steps, i ) ; }^204^^^^^183^213^[Delete]^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^return SimplePathInterpreter.createNullPointer ( steps, ( NodePointer )  partial, context,^204^205^206^207^^183^213^return SimplePathInterpreter.createNullPointer ( context, ( NodePointer )  partial, steps,^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^Pointer partial =  ( Pointer )  context.next (  ) ;^197^^^^^183^213^Pointer partial =  ( Pointer )  ctx.next (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P7_Replace_Invocation]^Pointer partial =  ( Pointer )  ctx .hasNext (  )  ;^197^^^^^183^213^Pointer partial =  ( Pointer )  ctx.next (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  context.getSingleNodePointer (  ) ;Pointer partial =  ( Pointer )  ctx.next (  ) ;^197^^^^^183^213^Pointer partial =  ( Pointer )  ctx.next (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P14_Delete_Statement]^^197^^^^^183^213^Pointer partial =  ( Pointer )  ctx.next (  ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return true;^201^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P2_Replace_Operator]^if  ( partial  >  NodePointer )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^if  ( i partialnstanceof NodePointer )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P1_Replace_Type]^for  (  short  i = steps.length; --i > 0; )  {^191^^^^^183^213^for  ( int i = steps.length; --i > 0; )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P2_Replace_Operator]^for  ( int i = steps.length; --i < 0; )  {^191^^^^^183^213^for  ( int i = steps.length; --i > 0; )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P3_Replace_Literal]^for  ( int i = steps.length; --i > i; )  {^191^^^^^183^213^for  ( int i = steps.length; --i > 0; )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return true;^193^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^if  ( ctx .next (  )   )  {^198^^^^^183^213^if  ( ctx.hasNext (  )  )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P2_Replace_Operator]^if  ( partial  <<  NodePointer )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return this;^201^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P2_Replace_Operator]^if  ( partial  ||  NodePointer )  {^203^^^^^183^213^if  ( partial instanceof NodePointer )  {^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P3_Replace_Literal]^ctx = buildContextChain ( context, i, false ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^ctx = buildContextChain ( ctx, i, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^ctx = buildContextChain (  i, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^ctx = buildContextChain ( context,  true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P5_Replace_Variable]^ctx = buildContextChain ( i, context, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P7_Replace_Invocation]^ctx = createContextForStep ( context, i, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^ctx = createContextForStep ( ctx, i, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P14_Delete_Statement]^^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^return buildContextChain ( context, steps.length, false ) ;ctx = buildContextChain ( context, i, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P11_Insert_Donor_Statement]^EvalContext ctx = buildContextChain ( context, steps.length, true ) ;ctx = buildContextChain ( context, i, true ) ;^195^^^^^183^213^ctx = buildContextChain ( context, i, true ) ;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return this;^193^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P8_Replace_Mix]^return true;^212^^^^^183^213^return null;^[CLASS] Path  [METHOD] searchForPath [RETURN_TYPE] Pointer   EvalContext context [VARIABLES] EvalContext  context  ctx  Step[]  steps  Pointer  partial  pointer  boolean  basic  basicKnown  firstIndex  int  i  
[P3_Replace_Literal]^return buildContextChain ( context, steps.length, true ) ;^220^^^^^219^221^return buildContextChain ( context, steps.length, false ) ;^[CLASS] Path  [METHOD] evalSteps [RETURN_TYPE] EvalContext   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  
[P5_Replace_Variable]^return buildContextChain (  steps.length, false ) ;^220^^^^^219^221^return buildContextChain ( context, steps.length, false ) ;^[CLASS] Path  [METHOD] evalSteps [RETURN_TYPE] EvalContext   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  
[P5_Replace_Variable]^return buildContextChain ( context,  false ) ;^220^^^^^219^221^return buildContextChain ( context, steps.length, false ) ;^[CLASS] Path  [METHOD] evalSteps [RETURN_TYPE] EvalContext   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  
[P5_Replace_Variable]^return buildContextChain ( context.length, false ) ;^220^^^^^219^221^return buildContextChain ( context, steps.length, false ) ;^[CLASS] Path  [METHOD] evalSteps [RETURN_TYPE] EvalContext   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  
[P14_Delete_Statement]^^220^^^^^219^221^return buildContextChain ( context, steps.length, false ) ;^[CLASS] Path  [METHOD] evalSteps [RETURN_TYPE] EvalContext   EvalContext context [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  firstIndex  
[P5_Replace_Variable]^if  ( firstIndex )  {^228^^^^^227^251^if  ( createInitialContext )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P15_Unwrap_Block]^context = new org.apache.commons.jxpath.ri.axes.InitialContext(context);^228^229^230^^^227^251^if  ( createInitialContext )  { context = new InitialContext ( context ) ; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P16_Remove_Block]^^228^229^230^^^227^251^if  ( createInitialContext )  { context = new InitialContext ( context ) ; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( namespaceURI != null )  {     nodeTest = new NodeNameTest ( qname, namespaceURI ) ; }^228^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^context =  new InitialContext ( null ) ;^229^^^^^227^251^context = new InitialContext ( context ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^context = new PredicateContext ( context, predicates[j] ) ;context = new InitialContext ( context ) ;^229^^^^^227^251^context = new InitialContext ( context ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^context = new UnionContext ( context, new EvalContext[]{context} ) ;context = new InitialContext ( context ) ;^229^^^^^227^251^context = new InitialContext ( context ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( createInitialContext )  {     context = new InitialContext ( context ) ; }^229^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( steps.length != 0 )  {^231^^^^^227^251^if  ( steps.length == 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^if  ( steps.length == 1 )  {^231^^^^^227^251^if  ( steps.length == 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( steps.length == 0  )  {^231^^^^^227^251^if  ( steps.length == 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P15_Unwrap_Block]^return context;^231^232^233^^^227^251^if  ( steps.length == 0 )  { return context; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P16_Remove_Block]^^231^232^233^^^227^251^if  ( steps.length == 0 )  { return context; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( ctx.hasNext (  )  )  {     return null; }^231^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( !firstIndex )  {     return false; }^231^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  (  ( steps.length )  == 0 )  {     return context.getSingleNodePointer (  ) ; }^231^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^231^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( predicates == null )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P6_Replace_Expression]^if  ( j < predicates.length )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P6_Replace_Expression]^if  ( j != 0 )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( predicates != false )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P9_Replace_Statement]^if  ( namespaceURI != null )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P9_Replace_Statement]^if  ( steps != null )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P9_Replace_Statement]^if  ( pointer != null )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P15_Unwrap_Block]^for (int j = 0; j < (predicates.length); j++) {    if (j != 0) {        context = new org.apache.commons.jxpath.ri.axes.UnionContext(context, new org.apache.commons.jxpath.ri.EvalContext[]{ context });    }    context = new org.apache.commons.jxpath.ri.axes.PredicateContext(context, predicates[j]);};^241^242^243^244^245^227^251^if  ( predicates != null )  { for  ( int j = 0; j < predicates.length; j++ )  { if  ( j != 0 )  { context = new UnionContext ( context, new EvalContext[]{context} ) ; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P16_Remove_Block]^^241^242^243^244^245^227^251^if  ( predicates != null )  { for  ( int j = 0; j < predicates.length; j++ )  { if  ( j != 0 )  { context = new UnionContext ( context, new EvalContext[]{context} ) ; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( j > 0 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^if  ( j != 8 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( j != 4 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P15_Unwrap_Block]^context = new org.apache.commons.jxpath.ri.axes.UnionContext(context, new org.apache.commons.jxpath.ri.EvalContext[]{ context });^243^244^245^^^227^251^if  ( j != 0 )  { context = new UnionContext ( context, new EvalContext[]{context} ) ; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P16_Remove_Block]^^243^244^245^^^227^251^if  ( j != 0 )  { context = new UnionContext ( context, new EvalContext[]{context} ) ; }^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^context =  new UnionContext ( null, new EvalContext[]{null} ) ;^244^^^^^227^251^context = new UnionContext ( context, new EvalContext[]{context} ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^context = new PredicateContext ( context, predicates[j] ) ;context = new UnionContext ( context, new EvalContext[]{context} ) ;^244^^^^^227^251^context = new UnionContext ( context, new EvalContext[]{context} ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^context = new InitialContext ( context ) ;context = new UnionContext ( context, new EvalContext[]{context} ) ;^244^^^^^227^251^context = new UnionContext ( context, new EvalContext[]{context} ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( j != 0 )  {     context = new UnionContext ( context, new EvalContext[]{ context } ) ; }^244^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P1_Replace_Type]^for  (  long  j = 0; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^for  ( int j = 0; j == predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = i; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = 6; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P13_Insert_Block]^if  ( predicates != null )  {     for  ( int j = 0; j <  ( predicates.length ) ; j++ )  {         if  ( j != 0 )  {             context = new UnionContext ( context, new EvalContext[]{ context } ) ;         }         context = new PredicateContext ( context, predicates[j] ) ;     } }^242^^^^^227^251^[Delete]^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( j == 0 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^if  ( j != stepCount )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^if  ( stepCount != 0 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( j != 1 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P4_Replace_Constructor]^context = new PredicateContext (  predicates[j] ) ;^246^^^^^227^251^context = new PredicateContext ( context, predicates[j] ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P4_Replace_Constructor]^context = new PredicateContext ( context[j] ) ;^246^^^^^227^251^context = new PredicateContext ( context, predicates[j] ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^context =  new PredicateContext ( null, predicates[j] ) ;^246^^^^^227^251^context = new PredicateContext ( context, predicates[j] ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^context = new InitialContext ( context ) ;context = new PredicateContext ( context, predicates[j] ) ;^246^^^^^227^251^context = new PredicateContext ( context, predicates[j] ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^context = new UnionContext ( context, new EvalContext[]{context} ) ;context = new PredicateContext ( context, predicates[j] ) ;^246^^^^^227^251^context = new PredicateContext ( context, predicates[j] ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^context = new PredicateContext ( predicates, context[j] ) ;^246^^^^^227^251^context = new PredicateContext ( context, predicates[j] ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P1_Replace_Type]^for  (  short  j = 0; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = stepCount; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( j >= 0 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^if  ( j != i )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( j != 0 % 3 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P1_Replace_Type]^for  (  short  i = 0; i < stepCount; i++ )  {^234^^^^^227^251^for  ( int i = 0; i < stepCount; i++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^for  ( int i = 0; i <= stepCount; i++ )  {^234^^^^^227^251^for  ( int i = 0; i < stepCount; i++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int i = -9; i < stepCount; i++ )  {^234^^^^^227^251^for  ( int i = 0; i < stepCount; i++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int i = -8; i < stepCount; i++ )  {^234^^^^^227^251^for  ( int i = 0; i < stepCount; i++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int i = j; i < stepCount; i++ )  {^234^^^^^227^251^for  ( int i = 0; i < stepCount; i++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( predicates != true )  {^241^^^^^227^251^if  ( predicates != null )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( j <= 0 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^if  ( j != -6 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^for  ( int j = 0; j <= predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = -6; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^if  ( j != j )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = j; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = -9; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^context = createContextForStep (  steps[i].getAxis (  ) ,^235^236^237^238^^227^251^context = createContextForStep ( context, steps[i].getAxis (  ) ,^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^context = createContextForStep ( context[i].getAxis (  ) ,^235^236^237^238^^227^251^context = createContextForStep ( context, steps[i].getAxis (  ) ,^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^context = createContextForStep ( steps, context[i].getAxis (  ) ,^235^236^237^238^^227^251^context = createContextForStep ( context, steps[i].getAxis (  ) ,^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^context = buildContextChain ( context, steps[i].getAxis (  ) ,^235^236^237^238^^227^251^context = createContextForStep ( context, steps[i].getAxis (  ) ,^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^context = createContextForStep ( context, steps[i].getNamespaceURI (  ) ,^235^236^237^238^^227^251^context = createContextForStep ( context, steps[i].getAxis (  ) ,^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^context =  createContextForStep ( null, steps[i].getAxis (  ) ,^235^236^237^238^^227^251^context = createContextForStep ( context, steps[i].getAxis (  ) ,^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^Expression predicates[] = steps[i].getNamespaceURI (  ) ;^240^^^^^227^251^Expression predicates[] = steps[i].getPredicates (  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^Expression predicates[] = steps[i] .getNodeTest (  )  ;^240^^^^^227^251^Expression predicates[] = steps[i].getPredicates (  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^createContextForStep (  steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^236^237^238^239^^227^251^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^createContextForStep ( context[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^236^237^238^239^^227^251^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^createContextForStep ( steps, context[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^236^237^238^239^^227^251^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^buildContextChain ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^236^237^238^239^^227^251^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^createContextForStep ( context, steps[i].getNamespaceURI (  ) , steps[i].getNodeTest (  )  ) ;^236^237^238^239^^227^251^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNamespaceURI (  )  ) ;^236^237^238^239^^227^251^createContextForStep ( context, steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P5_Replace_Variable]^steps[i].getAxis (  ) [i].getNodeTest (  )  ) ;^238^239^^^^227^251^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^steps[i].getNamespaceURI (  ) , steps[i].getNodeTest (  )  ) ;^238^239^^^^227^251^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P14_Delete_Statement]^^238^239^^^^227^251^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^steps[i].getNodeTest (  )  ) ;steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^238^239^^^^227^251^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^NodeTest nodeTest = step.getNodeTest (  ) ;steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^238^239^^^^227^251^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P7_Replace_Invocation]^steps[i].getNamespaceURI (  )  ) ;^239^^^^^227^251^steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P14_Delete_Statement]^^239^^^^^227^251^steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;steps[i].getNodeTest (  )  ) ;^239^^^^^227^251^steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P14_Delete_Statement]^^240^^^^^227^251^Expression predicates[] = steps[i].getPredicates (  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P11_Insert_Donor_Statement]^return areBasicPredicates ( step.getPredicates (  )  ) ;Expression predicates[] = steps[i].getPredicates (  ) ;^240^^^^^227^251^Expression predicates[] = steps[i].getPredicates (  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = 2; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^if  ( j != 0 + 2 )  {^243^^^^^227^251^if  ( j != 0 )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P3_Replace_Literal]^for  ( int j = ; j < predicates.length; j++ )  {^242^^^^^227^251^for  ( int j = 0; j < predicates.length; j++ )  {^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^steps[i] .getPredicates (  )  , steps[i].getNodeTest (  )  ) ;^238^239^^^^227^251^steps[i].getAxis (  ) , steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P8_Replace_Mix]^steps[i] .getPredicates (  )   ) ;^239^^^^^227^251^steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P12_Insert_Condition]^if  ( steps[i].isContextDependent (  )  )  { steps[i].getNodeTest (  )  ) ; }^239^^^^^227^251^steps[i].getNodeTest (  )  ) ;^[CLASS] Path  [METHOD] buildContextChain [RETURN_TYPE] EvalContext   EvalContext context int stepCount boolean createInitialContext [VARIABLES] EvalContext  context  Step[]  steps  boolean  basic  basicKnown  createInitialContext  firstIndex  int  i  j  stepCount  Expression[]  predicates  
[P2_Replace_Operator]^if  ( nodeTest  |  NodeNameTest )  {^262^^^^^247^277^if  ( nodeTest instanceof NodeNameTest )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( prefix != null )  {^262^^^^^247^277^if  ( nodeTest instanceof NodeNameTest )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( namespaceURI != null )  {^262^^^^^247^277^if  ( nodeTest instanceof NodeNameTest )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {^262^^^^^247^277^if  ( nodeTest instanceof NodeNameTest )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( ! ( nodeTest instanceof NodeNameTest )  ) {^262^^^^^247^277^if  ( nodeTest instanceof NodeNameTest )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( partial instanceof NodePointer )  {^262^^^^^247^277^if  ( nodeTest instanceof NodeNameTest )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( namespaceURI == null )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( prefix != null )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( namespaceURI != true )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( steps != null )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( predicates != null )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( pointer != null )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P15_Unwrap_Block]^nodeTest = new org.apache.commons.jxpath.ri.compiler.NodeNameTest(qname, namespaceURI);^268^269^270^^^253^283^if  ( namespaceURI != null )  { nodeTest = new NodeNameTest ( qname, namespaceURI ) ; }^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P16_Remove_Block]^^268^269^270^^^253^283^if  ( namespaceURI != null )  { nodeTest = new NodeNameTest ( qname, namespaceURI ) ; }^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {     return false; }^268^^^^^253^283^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( createInitialContext )  {     context = new InitialContext ( context ) ; }^268^^^^^253^283^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {     return false; }^268^^^^^253^283^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^nodeTest = new NodeNameTest (  namespaceURI ) ;^269^^^^^254^284^nodeTest = new NodeNameTest ( qname, namespaceURI ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^nodeTest = new NodeNameTest ( qname ) ;^269^^^^^254^284^nodeTest = new NodeNameTest ( qname, namespaceURI ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^nodeTest = new NodeNameTest ( namespaceURI, qname ) ;^269^^^^^254^284^nodeTest = new NodeNameTest ( qname, namespaceURI ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^nodeTest =  new NodeNameTest ( null, namespaceURI ) ;^269^^^^^254^284^nodeTest = new NodeNameTest ( qname, namespaceURI ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeTypeTest )  )  {     return false; }^269^^^^^254^284^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {     return false; }^269^^^^^254^284^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( namespaceURI != null )  {     nodeTest = new NodeNameTest ( qname, namespaceURI ) ; }^269^^^^^254^284^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^nodeTest = new NodeNameTest ( qname, prefix ) ;^269^^^^^254^284^nodeTest = new NodeNameTest ( qname, namespaceURI ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^269^^^^^254^284^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNamespaceURI (  ) ;^263^^^^^248^278^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^QName qname =  (  ( NodeNameTest )  nodeTest )  .getNodeType (  )  ;^263^^^^^248^278^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^int nodeType =  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) ;QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;^263^^^^^248^278^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P12_Insert_Condition]^if  (  (  ( NodeNameTest )  nodeTest ) .isWildcard (  )  )  { QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ; }^263^^^^^248^278^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P1_Replace_Type]^char prefix = qname.getPrefix (  ) ;^264^^^^^249^279^String prefix = qname.getPrefix (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P1_Replace_Type]^char namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P2_Replace_Operator]^String namespaceURI = prefix == null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^String namespaceURI = context != null ? prefix.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P6_Replace_Expression]^String namespaceURI  =  context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P6_Replace_Expression]^String namespaceURI  =  context.getJXPathContext (  ) .getNamespaceURI ( prefix ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^String namespaceURI = prefix != null ? context .hasNext (  )  .getNamespaceURI ( prefix ) : context^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getNamespaceURI (  ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^String namespaceURI = prefix != null ? context.getJXPathContext (  )  .getDefaultNamespaceURI (  )  : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^265^266^267^^^250^280^String namespaceURI = prefix != null ? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P14_Delete_Statement]^^263^^^^^248^278^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  (  ( NodeNameTest )   ( nodeTest )  ) .isWildcard (  )  )  {     return false; }^263^^^^^248^278^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( nodeTest instanceof NodeNameTest )  )  {     return false; }^263^^^^^248^278^[Delete]^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P14_Delete_Statement]^^264^^^^^249^279^String prefix = qname.getPrefix (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^? context.getJXPathContext (  ) .getNamespaceURI ( namespaceURI ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^266^267^^^^251^281^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^? prefix.getJXPathContext (  ) .getNamespaceURI ( context ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^266^267^^^^251^281^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^? context.getJXPathContext (  )  .getDefaultNamespaceURI (  )  : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^266^267^^^^251^281^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^? context .hasNext (  )  .getNamespaceURI ( prefix ) : context^266^267^^^^251^281^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P14_Delete_Statement]^^266^267^^^^251^281^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^266^267^^^^251^281^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^: context.getJXPathContext (  ) .getNamespaceURI (  ) ;^267^^^^^252^282^: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P14_Delete_Statement]^^267^^^^^252^282^: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^? context.getJXPathContext (  ) .getNamespaceURI ( prefix ) : context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^267^^^^^252^282^: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^: context .hasNext (  )  .getDefaultNamespaceURI (  ) ;^267^^^^^252^282^: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( prefix != false )  {^268^^^^^253^283^if  ( namespaceURI != null )  {^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P14_Delete_Statement]^^263^264^^^^248^278^QName qname =  (  ( NodeNameTest )  nodeTest ) .getNodeName (  ) ; String prefix = qname.getPrefix (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P7_Replace_Invocation]^: context.getJXPathContext (  )  .getNamespaceURI ( namespaceURI )  ;^267^^^^^252^282^: context.getJXPathContext (  ) .getDefaultNamespaceURI (  ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new AncestorContext ( context, true, nodeTest ) ;^275^^^^^260^290^return new AncestorContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new AncestorContext (  false, nodeTest ) ;^275^^^^^260^290^return new AncestorContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new AncestorContext ( context, false ) ;^275^^^^^260^290^return new AncestorContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new AncestorContext ( nodeTest, false, context ) ;^275^^^^^260^290^return new AncestorContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new AncestorContext ( context, false, nodeTest ) ;^277^^^^^262^292^return new AncestorContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new AncestorContext (  true, nodeTest ) ;^277^^^^^262^292^return new AncestorContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new AncestorContext ( context, true ) ;^277^^^^^262^292^return new AncestorContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new AncestorContext ( nodeTest, true, context ) ;^277^^^^^262^292^return new AncestorContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new AttributeContext (  nodeTest ) ;^279^^^^^264^294^return new AttributeContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new AttributeContext ( context ) ;^279^^^^^264^294^return new AttributeContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new AttributeContext ( nodeTest, context ) ;^279^^^^^264^294^return new AttributeContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new ChildContext ( context, nodeTest, true, true ) ;^281^^^^^266^296^return new ChildContext ( context, nodeTest, false, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ChildContext (  nodeTest, false, false ) ;^281^^^^^266^296^return new ChildContext ( context, nodeTest, false, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ChildContext ( context,  false, false ) ;^281^^^^^266^296^return new ChildContext ( context, nodeTest, false, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new ChildContext ( nodeTest, context, false, false ) ;^281^^^^^266^296^return new ChildContext ( context, nodeTest, false, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new DescendantContext ( context, true, nodeTest ) ;^283^^^^^268^298^return new DescendantContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new DescendantContext (  false, nodeTest ) ;^283^^^^^268^298^return new DescendantContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new DescendantContext ( context, false ) ;^283^^^^^268^298^return new DescendantContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new DescendantContext ( nodeTest, false, context ) ;^283^^^^^268^298^return new DescendantContext ( context, false, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new DescendantContext ( context, false, nodeTest ) ;^285^^^^^270^300^return new DescendantContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new DescendantContext (  true, nodeTest ) ;^285^^^^^270^300^return new DescendantContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new DescendantContext ( context, true ) ;^285^^^^^270^300^return new DescendantContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new DescendantContext ( nodeTest, true, context ) ;^285^^^^^270^300^return new DescendantContext ( context, true, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new PrecedingOrFollowingContext ( context, nodeTest, true ) ;^287^^^^^272^302^return new PrecedingOrFollowingContext ( context, nodeTest, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new PrecedingOrFollowingContext (  nodeTest, false ) ;^287^^^^^272^302^return new PrecedingOrFollowingContext ( context, nodeTest, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new PrecedingOrFollowingContext ( context,  false ) ;^287^^^^^272^302^return new PrecedingOrFollowingContext ( context, nodeTest, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new PrecedingOrFollowingContext ( nodeTest, context, false ) ;^287^^^^^272^302^return new PrecedingOrFollowingContext ( context, nodeTest, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new ChildContext ( context, nodeTest, false, false ) ;^289^^^^^274^304^return new ChildContext ( context, nodeTest, true, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ChildContext (  nodeTest, true, false ) ;^289^^^^^274^304^return new ChildContext ( context, nodeTest, true, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ChildContext ( context,  true, false ) ;^289^^^^^274^304^return new ChildContext ( context, nodeTest, true, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new ChildContext ( nodeTest, context, true, false ) ;^289^^^^^274^304^return new ChildContext ( context, nodeTest, true, false ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new NamespaceContext (  nodeTest ) ;^291^^^^^276^306^return new NamespaceContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new NamespaceContext ( context ) ;^291^^^^^276^306^return new NamespaceContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new NamespaceContext ( nodeTest, context ) ;^291^^^^^276^306^return new NamespaceContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ParentContext (  nodeTest ) ;^293^^^^^278^308^return new ParentContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ParentContext ( context ) ;^293^^^^^278^308^return new ParentContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new ParentContext ( nodeTest, context ) ;^293^^^^^278^308^return new ParentContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new PrecedingOrFollowingContext ( context, nodeTest, false ) ;^295^^^^^280^310^return new PrecedingOrFollowingContext ( context, nodeTest, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new PrecedingOrFollowingContext (  nodeTest, true ) ;^295^^^^^280^310^return new PrecedingOrFollowingContext ( context, nodeTest, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new PrecedingOrFollowingContext ( context,  true ) ;^295^^^^^280^310^return new PrecedingOrFollowingContext ( context, nodeTest, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new PrecedingOrFollowingContext ( nodeTest, context, true ) ;^295^^^^^280^310^return new PrecedingOrFollowingContext ( context, nodeTest, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P3_Replace_Literal]^return new ChildContext ( context, nodeTest, false, false ) ;^297^^^^^282^312^return new ChildContext ( context, nodeTest, true, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ChildContext (  nodeTest, true, true ) ;^297^^^^^282^312^return new ChildContext ( context, nodeTest, true, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new ChildContext ( context,  true, true ) ;^297^^^^^282^312^return new ChildContext ( context, nodeTest, true, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new ChildContext ( nodeTest, context, true, true ) ;^297^^^^^282^312^return new ChildContext ( context, nodeTest, true, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^return new ChildContext ( context, nodeTest, true, false ) ;^297^^^^^282^312^return new ChildContext ( context, nodeTest, true, true ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new SelfContext (  nodeTest ) ;^299^^^^^284^314^return new SelfContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P4_Replace_Constructor]^return new SelfContext ( context ) ;^299^^^^^284^314^return new SelfContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P5_Replace_Variable]^return new SelfContext ( nodeTest, context ) ;^299^^^^^284^314^return new SelfContext ( context, nodeTest ) ;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^return true;^301^^^^^286^316^return null;^[CLASS] Path  [METHOD] createContextForStep [RETURN_TYPE] EvalContext   EvalContext context int axis NodeTest nodeTest [VARIABLES] boolean  basic  basicKnown  createInitialContext  firstIndex  QName  qname  EvalContext  context  Step[]  steps  String  namespaceURI  prefix  int  axis  NodeTest  nodeTest  
