[P5_Replace_Variable]^super.collectPropertyNames (  handle.getServletContext (  )  ) ;^38^^^^^35^46^super.collectPropertyNames ( set, handle.getServletContext (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P5_Replace_Variable]^super.collectPropertyNames ( set.getServletContext (  )  ) ;^38^^^^^35^46^super.collectPropertyNames ( set, handle.getServletContext (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P14_Delete_Statement]^^38^^^^^35^46^super.collectPropertyNames ( set, handle.getServletContext (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P11_Insert_Donor_Statement]^return super.getProperty ( handle.getServletContext (  ) , property ) ;super.collectPropertyNames ( set, handle.getServletContext (  )  ) ;^38^^^^^35^46^super.collectPropertyNames ( set, handle.getServletContext (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P7_Replace_Invocation]^super.collectPropertyNames ( set, handle .getSession (  )   ) ;^38^^^^^35^46^super.collectPropertyNames ( set, handle.getServletContext (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P7_Replace_Invocation]^HttpSession session = handle .getServletContext (  )  ;^39^^^^^35^46^HttpSession session = handle.getSession (  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P14_Delete_Statement]^^39^^^^^35^46^HttpSession session = handle.getSession (  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P8_Replace_Mix]^set.add ( e .hasMoreElements (  )   ) ;^43^^^^^35^46^set.add ( e.nextElement (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P14_Delete_Statement]^^43^^^^^35^46^set.add ( e.nextElement (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P2_Replace_Operator]^if  ( session == null )  {^40^^^^^35^46^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P8_Replace_Mix]^if  ( session != false )  {^40^^^^^35^46^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P9_Replace_Statement]^if  ( object != null )  {^40^^^^^35^46^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P15_Unwrap_Block]^java.util.Enumeration e = session.getAttributeNames(); while (e.hasMoreElements()) {    set.add(e.nextElement());} ;^40^41^42^43^44^35^46^if  ( session != null )  { Enumeration e = session.getAttributeNames (  ) ; while  ( e.hasMoreElements (  )  )  { set.add ( e.nextElement (  )  ) ; }^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P16_Remove_Block]^^40^41^42^43^44^35^46^if  ( session != null )  { Enumeration e = session.getAttributeNames (  ) ; while  ( e.hasMoreElements (  )  )  { set.add ( e.nextElement (  )  ) ; }^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P13_Insert_Block]^if  ( session != null )  {     Object object = session.getAttribute ( property ) ;     if  ( object != null )  {         return object;     } }^40^^^^^35^46^[Delete]^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P7_Replace_Invocation]^while  ( e .nextElement (  )   )  {^42^^^^^35^46^while  ( e.hasMoreElements (  )  )  {^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P7_Replace_Invocation]^Enumeration e = session.getAttribute (  ) ;^41^^^^^35^46^Enumeration e = session.getAttributeNames (  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P11_Insert_Donor_Statement]^Object object = session.getAttribute ( property ) ;Enumeration e = session.getAttributeNames (  ) ;^41^^^^^35^46^Enumeration e = session.getAttributeNames (  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P14_Delete_Statement]^^41^^^^^35^46^Enumeration e = session.getAttributeNames (  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P14_Delete_Statement]^^42^43^^^^35^46^while  ( e.hasMoreElements (  )  )  { set.add ( e.nextElement (  )  ) ;^[CLASS] HttpSessionHandler  [METHOD] collectPropertyNames [RETURN_TYPE] void   HashSet set Object bean [VARIABLES] Enumeration  e  boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  HashSet  set  
[P8_Replace_Mix]^HttpSession session = handle .getServletContext (  )  ;^51^^^^^48^59^HttpSession session = handle.getSession (  ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P14_Delete_Statement]^^51^^^^^48^59^HttpSession session = handle.getSession (  ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P2_Replace_Operator]^if  ( session == null )  {^52^^^^^48^59^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P6_Replace_Expression]^if  ( object != null )  {^52^^^^^48^59^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P8_Replace_Mix]^if  ( session != this )  {^52^^^^^48^59^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P15_Unwrap_Block]^java.lang.Object object = session.getAttribute(property); if (object != null) {    return object;};^52^53^54^55^56^48^59^if  ( session != null )  { Object object = session.getAttribute ( property ) ; if  ( object != null )  { return object; }^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P16_Remove_Block]^^52^53^54^55^56^48^59^if  ( session != null )  { Object object = session.getAttribute ( property ) ; if  ( object != null )  { return object; }^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P13_Insert_Block]^if  ( session != null )  {     Enumeration e = session.getAttributeNames (  ) ;     while  ( e.hasMoreElements (  )  )  {         set.add ( e.nextElement (  )  ) ;     }  }^52^^^^^48^59^[Delete]^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P2_Replace_Operator]^if  ( object == null )  {^54^^^^^48^59^if  ( object != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P5_Replace_Variable]^if  ( bean != null )  {^54^^^^^48^59^if  ( object != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P8_Replace_Mix]^if  ( object != this )  {^54^^^^^48^59^if  ( object != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P9_Replace_Statement]^if  ( session != null )  {^54^^^^^48^59^if  ( object != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P15_Unwrap_Block]^return object;^54^55^56^^^48^59^if  ( object != null )  { return object; }^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P16_Remove_Block]^^54^55^56^^^48^59^if  ( object != null )  { return object; }^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P5_Replace_Variable]^return bean;^55^^^^^48^59^return object;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P5_Replace_Variable]^Object object = property.getAttribute ( session ) ;^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P7_Replace_Invocation]^Object object = session.setAttribute ( property ) ;^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P7_Replace_Invocation]^Object object = session .setAttribute ( property , bean )  ;^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P11_Insert_Donor_Statement]^Enumeration e = session.getAttributeNames (  ) ;Object object = session.getAttribute ( property ) ;^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P14_Delete_Statement]^^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P11_Insert_Donor_Statement]^session.setAttribute ( property, value ) ;Object object = session.getAttribute ( property ) ;^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P8_Replace_Mix]^if  ( object != false )  {^54^^^^^48^59^if  ( object != null )  {^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P7_Replace_Invocation]^Object object = session .setAttribute ( property , object )  ;^53^^^^^48^59^Object object = session.getAttribute ( property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P5_Replace_Variable]^return super.getProperty ( handle.getServletContext (  )  ) ;^58^^^^^48^59^return super.getProperty ( handle.getServletContext (  ) , property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P8_Replace_Mix]^return super.getProperty ( handle .getSession (  )  , property ) ;^58^^^^^48^59^return super.getProperty ( handle.getServletContext (  ) , property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P14_Delete_Statement]^^58^^^^^48^59^return super.getProperty ( handle.getServletContext (  ) , property ) ;^[CLASS] HttpSessionHandler  [METHOD] getProperty [RETURN_TYPE] Object   Object bean String property [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  object  String  property  
[P8_Replace_Mix]^HttpSession session = handle .getServletContext (  )  ;^64^^^^^61^72^HttpSession session = handle.getSession (  ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P14_Delete_Statement]^^64^^^^^61^72^HttpSession session = handle.getSession (  ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P2_Replace_Operator]^if  ( session == null )  {^65^^^^^61^72^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P6_Replace_Expression]^if  ( "Cannot set session attribute: " + "there is no session" )  {^65^^^^^61^72^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P8_Replace_Mix]^if  ( session != true )  {^65^^^^^61^72^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P9_Replace_Statement]^if  ( object != null )  {^65^^^^^61^72^if  ( session != null )  {^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P15_Unwrap_Block]^session.setAttribute(property, value);^65^66^67^^^61^72^if  ( session != null )  { session.setAttribute ( property, value ) ; }^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P16_Remove_Block]^^65^66^67^^^61^72^if  ( session != null )  { session.setAttribute ( property, value ) ; }^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot set session attribute: "  ==  "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot set session attribute: ann" + "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot set session attribute: " + "there here is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P13_Insert_Block]^if  ( session != null )  {     session.setAttribute ( property, value ) ; }else {     throw new JXPathException (  ( "Cannot set session attribute: " + "there is no session" )  ) ; }^69^^^^^61^72^[Delete]^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot set session attribute: "  ||  "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "et sessioannot set session attribute: " + "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot set session attribute: " + "re is no seshere is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P8_Replace_Mix]^return ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P5_Replace_Variable]^session.setAttribute ( property, bean ) ;^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P5_Replace_Variable]^session.setAttribute (  value ) ;^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P5_Replace_Variable]^session.setAttribute ( property ) ;^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P14_Delete_Statement]^^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P11_Insert_Donor_Statement]^Object object = session.getAttribute ( property ) ;session.setAttribute ( property, value ) ;^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot set session attribute: "  <=  "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Caannot set session attribute: " + "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot set session attribute: " + "there is no session is no sessi" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot set session attribute: "  <<  "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot set sess" + "there is no session" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot set session attribute: " + "there is no sessionthe" ) ;^69^70^^^^61^72^throw new JXPathException ( "Cannot set session attribute: " + "there is no session" ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P5_Replace_Variable]^session.setAttribute ( value, property ) ;^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
[P7_Replace_Invocation]^session .getAttribute ( property )  ;^66^^^^^61^72^session.setAttribute ( property, value ) ;^[CLASS] HttpSessionHandler  [METHOD] setProperty [RETURN_TYPE] void   Object bean String property Object value [VARIABLES] boolean  HttpSessionAndServletContext  handle  HttpSession  session  Object  bean  value  String  property  
