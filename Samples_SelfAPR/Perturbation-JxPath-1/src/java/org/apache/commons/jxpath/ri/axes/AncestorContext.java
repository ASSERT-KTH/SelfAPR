[P3_Replace_Literal]^private boolean setStarted = true;^31^^^^^26^36^private boolean setStarted = false;^[CLASS] AncestorContext   [VARIABLES] 
[P8_Replace_Mix]^private boolean setStarted  = null ;^31^^^^^26^36^private boolean setStarted = false;^[CLASS] AncestorContext   [VARIABLES] 
[P14_Delete_Statement]^^46^^^^^41^49^super ( parentContext ) ;^[CLASS] AncestorContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext boolean includeSelf NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P5_Replace_Variable]^this.includeSelf = setStarted;^47^^^^^41^49^this.includeSelf = includeSelf;^[CLASS] AncestorContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext boolean includeSelf NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^this.nodeTest = nodeTest;this.includeSelf = includeSelf;^47^^^^^41^49^this.includeSelf = includeSelf;^[CLASS] AncestorContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext boolean includeSelf NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^this.nodeTest =  null;^48^^^^^41^49^this.nodeTest = nodeTest;^[CLASS] AncestorContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext boolean includeSelf NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^this.includeSelf = includeSelf;this.nodeTest = nodeTest;^48^^^^^41^49^this.nodeTest = nodeTest;^[CLASS] AncestorContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext boolean includeSelf NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^return --1;^56^^^^^55^57^return -1;^[CLASS] AncestorContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return -1L;^56^^^^^55^57^return -1;^[CLASS] AncestorContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^super .getCurrentPosition (  )  ;^60^^^^^59^62^super.reset (  ) ;^[CLASS] AncestorContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^60^61^^^^59^62^super.reset (  ) ; setStarted = false;^[CLASS] AncestorContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^reset (  ) ;super.reset (  ) ;^60^^^^^59^62^super.reset (  ) ;^[CLASS] AncestorContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^setStarted = true;^61^^^^^59^62^setStarted = false;^[CLASS] AncestorContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^setStarted = true;setStarted = false;^61^^^^^59^62^setStarted = false;^[CLASS] AncestorContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( position <= getCurrentPosition (  )  )  {^65^^^^^64^75^if  ( position < getCurrentPosition (  )  )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P7_Replace_Invocation]^if  ( position < reset (  )  )  {^65^^^^^64^75^if  ( position < getCurrentPosition (  )  )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P15_Unwrap_Block]^reset();^65^66^67^^^64^75^if  ( position < getCurrentPosition (  )  )  { reset (  ) ; }^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P16_Remove_Block]^^65^66^67^^^64^75^if  ( position < getCurrentPosition (  )  )  { reset (  ) ; }^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P7_Replace_Invocation]^nextNode (  ) ;^66^^^^^64^75^reset (  ) ;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P14_Delete_Statement]^^66^^^^^64^75^reset (  ) ;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P11_Insert_Donor_Statement]^super.reset (  ) ;reset (  ) ;^66^^^^^64^75^reset (  ) ;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P2_Replace_Operator]^while  ( getCurrentPosition (  )  <= position )  {^69^^^^^64^75^while  ( getCurrentPosition (  )  < position )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P7_Replace_Invocation]^while  ( reset (  )  < position )  {^69^^^^^64^75^while  ( getCurrentPosition (  )  < position )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P7_Replace_Invocation]^if  ( !reset (  )  )  {^70^^^^^64^75^if  ( !nextNode (  )  )  {^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P15_Unwrap_Block]^return false;^70^71^72^^^64^75^if  ( !nextNode (  )  )  { return false; }^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P16_Remove_Block]^^70^71^72^^^64^75^if  ( !nextNode (  )  )  { return false; }^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P13_Insert_Block]^if  (  ( currentNodePointer )  == null )  {     return false; }^70^^^^^64^75^[Delete]^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^return true;^71^^^^^64^75^return false;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P14_Delete_Statement]^^69^70^71^^^64^75^while  ( getCurrentPosition (  )  < position )  { if  ( !nextNode (  )  )  { return false;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^return false;^74^^^^^64^75^return true;^[CLASS] AncestorContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^if  ( setStarted )  {^78^^^^^77^101^if  ( !setStarted )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( setStarted )  {^81^^^^^77^101^if  ( includeSelf )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^if (currentNodePointer.testNode(nodeTest)) {    (position)++;    return true;};^81^82^83^84^85^77^101^if  ( includeSelf )  { if  ( currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P16_Remove_Block]^^81^82^83^84^85^77^101^if  ( includeSelf )  { if  ( currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( currentNodePointer.testNode ( nodeTest )  )  {      ( position ) ++;     return true; }^81^^^^^77^101^[Delete]^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^82^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^if  ( currentNodePointer.getImmediateParentPointer ( nodeTest )  )  {^82^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^(position)++; return true;^82^83^84^85^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P16_Remove_Block]^^82^83^84^85^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( includeSelf )  {     if  ( currentNodePointer.testNode ( nodeTest )  )  {          ( position ) ++;         return true;     } }^82^^^^^77^101^[Delete]^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^return false;^84^^^^^77^101^return true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^if  ( currentNodePointer .getImmediateParentPointer (  )   )  {^82^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^setStarted = false;^79^^^^^77^101^setStarted = true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^setStarted = false;setStarted = true;^79^^^^^77^101^setStarted = true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer ;^80^^^^^77^101^currentNodePointer = parentContext.getCurrentNodePointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;currentNodePointer = parentContext.getCurrentNodePointer (  ) ;^80^^^^^77^101^currentNodePointer = parentContext.getCurrentNodePointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^80^^^^^77^101^currentNodePointer = parentContext.getCurrentNodePointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^currentNodePointer = parentContext .getCurrentNodePointer (  )  ;^80^^^^^77^101^currentNodePointer = parentContext.getCurrentNodePointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^while  ( false )  {^89^^^^^77^101^while  ( true )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( currentNodePointer != null )  {^92^^^^^77^101^if  ( currentNodePointer == null )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( currentNodePointer == false )  {^92^^^^^77^101^if  ( currentNodePointer == null )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^return false;^92^93^94^^^77^101^if  ( currentNodePointer == null )  { return false; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P16_Remove_Block]^^92^93^94^^^77^101^if  ( currentNodePointer == null )  { return false; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( nextNode (  )  )  )  {     return false; }^92^^^^^77^101^[Delete]^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^return true;^93^^^^^77^101^return false;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^96^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^if  ( currentNodePointer.getImmediateParentPointer ( nodeTest )  )  {^96^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( currentNodePointer .getImmediateParentPointer (  )   )  {^96^^^^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^(position)++; return true;^96^97^98^99^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P16_Remove_Block]^^96^97^98^99^^77^101^if  ( currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( includeSelf )  {     if  ( currentNodePointer.testNode ( nodeTest )  )  {          ( position ) ++;         return true;     } }^96^^^^^77^101^[Delete]^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^return false;^98^^^^^77^101^return true;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^currentNodePointer = currentNodePointer .testNode ( nodeTest )  ;^90^^^^^77^101^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer  = null ;^90^^^^^77^101^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^currentNodePointer = parentContext.getCurrentNodePointer (  ) ;currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^90^^^^^77^101^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^90^^^^^77^101^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] AncestorContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  includeSelf  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
