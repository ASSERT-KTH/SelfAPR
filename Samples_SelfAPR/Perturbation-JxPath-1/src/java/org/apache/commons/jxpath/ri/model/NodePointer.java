[P1_Replace_Type]^public static final  long  WHOLE_COLLECTION = Integer.MIN_VALUE;^44^^^^^39^49^public static final int WHOLE_COLLECTION = Integer.MIN_VALUE;^[CLASS] NodePointer   [VARIABLES] 
[P8_Replace_Mix]^public static   short  WHOLE_COLLECTION = Integer.MIN_VALUE;^44^^^^^39^49^public static final int WHOLE_COLLECTION = Integer.MIN_VALUE;^[CLASS] NodePointer   [VARIABLES] 
[P1_Replace_Type]^protected  short  index = WHOLE_COLLECTION;^45^^^^^40^50^protected int index = WHOLE_COLLECTION;^[CLASS] NodePointer   [VARIABLES] 
[P12_Insert_Condition]^if  ( index == WHOLE_COLLECTION )  { protected int index = WHOLE_COLLECTION; }^45^^^^^40^50^protected int index = WHOLE_COLLECTION;^[CLASS] NodePointer   [VARIABLES] 
[P1_Replace_Type]^public static final char UNKNOWN_NAMESPACE = "<<unknown namespace>>";^46^^^^^41^51^public static final String UNKNOWN_NAMESPACE = "<<unknown namespace>>";^[CLASS] NodePointer   [VARIABLES] 
[P3_Replace_Literal]^public static final String UNKNOWN_NAMESPACE = "<<unknown namespace>>namespace";^46^^^^^41^51^public static final String UNKNOWN_NAMESPACE = "<<unknown namespace>>";^[CLASS] NodePointer   [VARIABLES] 
[P3_Replace_Literal]^private boolean attribute = true;^47^^^^^42^52^private boolean attribute = false;^[CLASS] NodePointer   [VARIABLES] 
[P8_Replace_Mix]^private NodePointer parent;^102^^^^^97^107^protected NodePointer parent;^[CLASS] NodePointer   [VARIABLES] 
[P8_Replace_Mix]^this.parent =  null;^107^^^^^106^108^this.parent = parent;^[CLASS] NodePointer  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  int  WHOLE_COLLECTION  index  
[P11_Insert_Donor_Statement]^this.index = index;this.parent = parent;^107^^^^^106^108^this.parent = parent;^[CLASS] NodePointer  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  int  WHOLE_COLLECTION  index  
[P8_Replace_Mix]^this.parent =  null;^111^^^^^110^113^this.parent = parent;^[CLASS] NodePointer  [METHOD] <init> [RETURN_TYPE] Locale)   NodePointer parent Locale locale [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  int  WHOLE_COLLECTION  index  
[P11_Insert_Donor_Statement]^this.index = index;this.parent = parent;^111^^^^^110^113^this.parent = parent;^[CLASS] NodePointer  [METHOD] <init> [RETURN_TYPE] Locale)   NodePointer parent Locale locale [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  int  WHOLE_COLLECTION  index  
[P8_Replace_Mix]^this.locale =  null;^112^^^^^110^113^this.locale = locale;^[CLASS] NodePointer  [METHOD] <init> [RETURN_TYPE] Locale)   NodePointer parent Locale locale [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  int  WHOLE_COLLECTION  index  
[P11_Insert_Donor_Statement]^NodePointer p1 = this;NodePointer pointer = null;^60^^^^^55^77^NodePointer pointer = null;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer pointer = null;^60^^^^^55^77^NodePointer pointer = null;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer pointer = null;^60^^^^^55^77^NodePointer pointer = null;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer p2 = pointer;NodePointer pointer = null;^60^^^^^55^77^NodePointer pointer = null;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( bean != null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( rootNode == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( bean == true )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent != null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^61^^^^^55^77^if  ( bean == null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^pointer = new org.apache.commons.jxpath.ri.model.beans.NullPointer(name, locale); return pointer;^61^62^63^64^^55^77^if  ( bean == null )  { pointer = new NullPointer ( name, locale ) ; return pointer; }^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^61^62^63^64^^55^77^if  ( bean == null )  { pointer = new NullPointer ( name, locale ) ; return pointer; }^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     ptr.parent =  (  ( NodePointer )   ( parent.clone (  )  )  ) ; }^61^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P4_Replace_Constructor]^pointer = new NullPointer (  locale ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P4_Replace_Constructor]^pointer = new NullPointer ( name ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = new NullPointer ( locale, name ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^pointer =  new NullPointer ( null, locale ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^pointer = factories[i].createNodePointer ( name, bean, locale ) ;pointer = new NullPointer ( name, locale ) ;^62^^^^^55^77^pointer = new NullPointer ( name, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( bean == null )  {     pointer = new NullPointer ( name, locale ) ;     return pointer; }^62^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return parent;^63^^^^^55^77^return pointer;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^67^^^^^55^77^JXPathContextReferenceImpl.getNodePointerFactories (  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( pointer == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( pointer != this )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( valuePointer != this )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent != null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^70^^^^^55^77^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return pointer;^70^71^72^^^55^77^if  ( pointer != null )  { return pointer; }^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^70^71^72^^^55^77^if  ( pointer != null )  { return pointer; }^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( ivp !=  ( this )  )  {     return ivp.getValuePointer (  ) ; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( valuePointer !=  ( this )  )  {     return valuePointer.getValue (  ) ; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     locale = parent.getLocale (  ) ; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^70^^^^^55^77^[Delete]^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return parent;^71^^^^^55^77^return pointer;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P1_Replace_Type]^for  (  short  i = 0; i < factories.length; i++ )  {^68^^^^^55^77^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^for  ( int i = 0; i <= factories.length; i++ )  {^68^^^^^55^77^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^for  ( int i = ; i < factories.length; i++ )  {^68^^^^^55^77^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = factories[i].createNodePointer ( name, rootNode, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = factories[i].createNodePointer (  bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = factories[i].createNodePointer ( name,  locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = factories[i].createNodePointer ( name, bean ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = factories[i].createNodePointer ( locale, bean, name ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = bean[i].createNodePointer ( name, factories, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = locale[i].createNodePointer ( name, bean, factories ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^pointer =  null[i].createNodePointer ( name, bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^pointer = new NullPointer ( name, locale ) ;pointer = factories[i].createNodePointer ( name, bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^factories[i].createNodePointer ( parent, name, bean ) ;pointer = factories[i].createNodePointer ( name, bean, locale ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = factories[i].createNodePointer ( name, locale, bean ) ;^69^^^^^55^77^pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^for  ( int i = i; i < factories.length; i++ )  {^68^^^^^55^77^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  |  bean.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Could not allocate a NodePointer for object of not allocat" + bean.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^throw new JXPathException ( "Could not allocate a NodePointer for object of " + rootNode.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.equals (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  >>  bean.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Could not allocate a NodePointer for object of Could not allocate a NodePointer for object" + bean.getClass (  )  ) ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" ;^74^75^76^^^55^77^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^+ bean.equals (  )  ) ;^76^^^^^55^77^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^+ rootNode.getClass (  )  ) ;^76^^^^^55^77^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^76^^^^^55^77^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newNodePointer [RETURN_TYPE] NodePointer   QName name Object bean Locale locale [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^89^^^^^83^100^JXPathContextReferenceImpl.getNodePointerFactories (  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( pointer == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( parent != null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( pointer != true )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( valuePointer != this )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^93^^^^^83^100^if  ( pointer != null )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return pointer;^93^94^95^^^83^100^if  ( pointer != null )  { return pointer; }^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^93^94^95^^^83^100^if  ( pointer != null )  { return pointer; }^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( ivp !=  ( this )  )  {     return ivp.getValuePointer (  ) ; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( valuePointer !=  ( this )  )  {     return valuePointer.getValue (  ) ; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     locale = parent.getLocale (  ) ; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^93^^^^^83^100^[Delete]^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return parent;^94^^^^^83^100^return pointer;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P1_Replace_Type]^for  (  short  i = 0; i < factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^for  ( int i = 0; i > factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^for  ( int i = 5; i < factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer ( parent, name, rootNode ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer (  name, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer ( parent,  bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer ( parent, name ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = parent[i].createNodePointer ( factories, name, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer ( parent, bean, name ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer ( bean, name, parent ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer ( pointer, name, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer ( parent, name, rootNode ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer (  name, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer ( parent,  bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer ( parent, name ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer ( name, parent, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^factories[i].createNodePointer ( parent, bean, name ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^factories[i] .createNodePointer ( name , bean , locale )  ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^pointer = factories[i].createNodePointer ( name, bean, locale ) ;factories[i].createNodePointer ( parent, name, bean ) ;^92^^^^^83^100^factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^for  ( int i = i; i < factories.length; i++ )  {^90^^^^^83^100^for  ( int i = 0; i < factories.length; i++ )  {^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = factories[i].createNodePointer ( name, parent, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^NodePointer pointer = name[i].createNodePointer ( parent, factories, bean ) ;^91^92^^^^83^100^NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  >=  bean.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^throw new JXPathException ( "Could not allocate a NodePointer for object of " + rootNode.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.equals (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Could not allocate a NodePointer for object of "  &  bean.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "ould n" + bean.getClass (  )  ) ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" ;^97^98^99^^^83^100^throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^+ bean.equals (  )  ) ;^99^^^^^83^100^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^+ rootNode.equals (  )  ) ;^99^^^^^83^100^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^99^^^^^83^100^+ bean.getClass (  )  ) ;^[CLASS] NodePointer  [METHOD] newChildNodePointer [RETURN_TYPE] NodePointer   NodePointer parent QName name Object bean [VARIABLES] Locale  locale  NodePointerFactory[]  factories  boolean  attribute  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( namespaceResolver == null || parent != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( namespaceResolver != null && parent != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( namespaceResolver == null && parent == null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( namespaceResolver == null && pointer != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( parent == null && namespaceResolver != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( namespaceResolver == null ) {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  parent != null )  {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( namespaceResolver == true ) {^116^^^^^115^120^if  ( namespaceResolver == null && parent != null )  {^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^namespaceResolver = parent.getNamespaceResolver();^116^117^118^^^115^120^if  ( namespaceResolver == null && parent != null )  { namespaceResolver = parent.getNamespaceResolver (  ) ; }^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^116^117^118^^^115^120^if  ( namespaceResolver == null && parent != null )  { namespaceResolver = parent.getNamespaceResolver (  ) ; }^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( locale )  == null )  {     if  (  ( parent )  != null )  {         locale = parent.getLocale (  ) ;     } }^116^^^^^115^120^[Delete]^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^namespaceResolver = pointer.getNamespaceResolver (  ) ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^namespaceResolver = parent.getImmediateNode (  ) ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^namespaceResolver = parent .setNamespaceResolver ( namespaceResolver )  ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^namespaceResolver  =  namespaceResolver ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^this.namespaceResolver = namespaceResolver;namespaceResolver = parent.getNamespaceResolver (  ) ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^namespaceResolver = pointer.getImmediateNode (  ) ;^117^^^^^115^120^namespaceResolver = parent.getNamespaceResolver (  ) ;^[CLASS] NodePointer  [METHOD] getNamespaceResolver [RETURN_TYPE] NamespaceResolver   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^this.namespaceResolver =  null;^123^^^^^122^124^this.namespaceResolver = namespaceResolver;^[CLASS] NodePointer  [METHOD] setNamespaceResolver [RETURN_TYPE] void   NamespaceResolver namespaceResolver [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^namespaceResolver = parent.getNamespaceResolver (  ) ;this.namespaceResolver = namespaceResolver;^123^^^^^122^124^this.namespaceResolver = namespaceResolver;^[CLASS] NodePointer  [METHOD] setNamespaceResolver [RETURN_TYPE] void   NamespaceResolver namespaceResolver [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer p1 = this;NodePointer pointer = parent;^127^^^^^126^132^NodePointer pointer = parent;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = null;NodePointer pointer = parent;^127^^^^^126^132^NodePointer pointer = parent;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer pointer = parent;^127^^^^^126^132^NodePointer pointer = parent;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer p2 = pointer;NodePointer pointer = parent;^127^^^^^126^132^NodePointer pointer = parent;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer valuePointer = getValuePointer (  ) ;NodePointer pointer = parent;^127^^^^^126^132^NodePointer pointer = parent;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^while  ( pointer != null || pointer.isContainer (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^while  ( pointer == null && pointer.isContainer (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^while  ( parent != null && pointer.isContainer (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^while  ( pointer != null && pointer.setIndex (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^while  ( parent != null && pointer.setIndex (  )  )  {^128^^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^pointer = parent.getImmediateParentPointer (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^pointer = pointer.setIndex (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^pointer =  null.getImmediateParentPointer (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^rootNode = getImmediateNode (  ) ;pointer = pointer.getImmediateParentPointer (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P12_Insert_Condition]^if  ( pointer.getImmediateParentPointer (  )  != null )  { pointer = pointer.getImmediateParentPointer (  ) ; }^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ivp = getImmediateValuePointer (  ) ;pointer = pointer.getImmediateParentPointer (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;pointer = pointer.getImmediateParentPointer (  ) ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^pointer = pointer .getImmediateValuePointer (  )  ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^128^129^^^^126^132^while  ( pointer != null && pointer.isContainer (  )  )  { pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^pointer = parent .getImmediateValuePointer (  )  ;^129^^^^^126^132^pointer = pointer.getImmediateParentPointer (  ) ;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return parent;^131^^^^^126^132^return pointer;^[CLASS] NodePointer  [METHOD] getParent [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return pointer;^135^^^^^134^136^return parent;^[CLASS] NodePointer  [METHOD] getImmediateParentPointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^this.attribute =  null;^142^^^^^141^143^this.attribute = attribute;^[CLASS] NodePointer  [METHOD] setAttribute [RETURN_TYPE] void   boolean attribute [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^return parent != null;^156^^^^^155^157^return parent == null;^[CLASS] NodePointer  [METHOD] isRoot [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return pointer != null;;^156^^^^^155^157^return parent == null;^[CLASS] NodePointer  [METHOD] isRoot [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P12_Insert_Condition]^if  ( parent != null )  { return parent == null; }^156^^^^^155^157^return parent == null;^[CLASS] NodePointer  [METHOD] isRoot [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P12_Insert_Condition]^if  ( parent == null )  { return parent == null; }^156^^^^^155^157^return parent == null;^[CLASS] NodePointer  [METHOD] isRoot [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return !isNode (  ) ;^168^^^^^167^169^return !isContainer (  ) ;^[CLASS] NodePointer  [METHOD] isNode [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P12_Insert_Condition]^if  ( isContainer (  )  )  { return !isContainer (  ) ; }^168^^^^^167^169^return !isContainer (  ) ;^[CLASS] NodePointer  [METHOD] isNode [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^168^^^^^167^169^return !isContainer (  ) ;^[CLASS] NodePointer  [METHOD] isNode [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return true;^176^^^^^175^177^return false;^[CLASS] NodePointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return i;^187^^^^^186^188^return index;^[CLASS] NodePointer  [METHOD] getIndex [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^this.index = i;^191^^^^^190^192^this.index = index;^[CLASS] NodePointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^this.parent = parent;this.index = index;^191^^^^^190^192^this.index = index;^[CLASS] NodePointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^NodePointer valuePointer = getValue (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ivp = getImmediateValuePointer (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer valuePointer = getValuePointer (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer valuePointer = getValuePointer (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P12_Insert_Condition]^if  ( valuePointer != null && valuePointer != this )  { NodePointer valuePointer = getValuePointer (  ) ; }^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return ivp.getValuePointer (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return valuePointer.getValue (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^213^^^^^212^219^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( valuePointer < this )  {^214^^^^^212^219^if  ( valuePointer != this )  {^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( pointer != this )  {^214^^^^^212^219^if  ( valuePointer != this )  {^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^214^^^^^212^219^if  ( valuePointer != this )  {^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return valuePointer.getValue();^214^215^216^^^212^219^if  ( valuePointer != this )  { return valuePointer.getValue (  ) ; }^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^214^215^216^^^212^219^if  ( valuePointer != this )  { return valuePointer.getValue (  ) ; }^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( ivp !=  ( this )  )  {     return ivp.getValuePointer (  ) ; }^214^^^^^212^219^[Delete]^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( valuePointer != null )  &&  ( valuePointer !=  ( this )  )  )  {     return valuePointer.attributeIterator ( qname ) ; }^214^^^^^212^219^[Delete]^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^214^^^^^212^219^[Delete]^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return pointer.getValue (  ) ;^215^^^^^212^219^return valuePointer.getValue (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return valuePointer.setIndex (  ) ;^215^^^^^212^219^return valuePointer.getValue (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return valuePointer .setValue ( rootNode )  ;^215^^^^^212^219^return valuePointer.getValue (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return pointer.setIndex (  ) ;^215^^^^^212^219^return valuePointer.getValue (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^215^^^^^212^219^return valuePointer.getValue (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return getName (  ) ;^218^^^^^212^219^return getNode (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^218^^^^^212^219^return getNode (  ) ;^[CLASS] NodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^NodePointer ivp = getImmediateParentPointer (  ) ;^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;NodePointer ivp = getImmediateValuePointer (  ) ;^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer valuePointer = getValuePointer (  ) ;NodePointer ivp = getImmediateValuePointer (  ) ;^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^pointer = pointer.getImmediateParentPointer (  ) ;NodePointer ivp = getImmediateValuePointer (  ) ;^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return ivp.getValuePointer (  ) ;NodePointer ivp = getImmediateValuePointer (  ) ;^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^rootNode = getImmediateNode (  ) ;NodePointer ivp = getImmediateValuePointer (  ) ;^239^^^^^238^244^NodePointer ivp = getImmediateValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( ivp == this )  {^240^^^^^238^244^if  ( ivp != this )  {^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( valuePointer != this )  {^240^^^^^238^244^if  ( ivp != this )  {^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( r != 0 )  {^240^^^^^238^244^if  ( ivp != this )  {^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return ivp.getValuePointer();^240^241^242^^^238^244^if  ( ivp != this )  { return ivp.getValuePointer (  ) ; }^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^240^241^242^^^238^244^if  ( ivp != this )  { return ivp.getValuePointer (  ) ; }^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( valuePointer !=  ( this )  )  {     return valuePointer.getValue (  ) ; }^240^^^^^238^244^[Delete]^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^240^^^^^238^244^[Delete]^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return valuePointer.getValuePointer (  ) ;^241^^^^^238^244^return ivp.getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return ivp.setIndex (  ) ;^241^^^^^238^244^return ivp.getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return valuePointer.setIndex (  ) ;^241^^^^^238^244^return ivp.getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return ivp .getImmediateValuePointer (  )  ;^241^^^^^238^244^return ivp.getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^241^^^^^238^244^return ivp.getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return null;^243^^^^^238^244^return this;^[CLASS] NodePointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return null;^253^^^^^252^254^return this;^[CLASS] NodePointer  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( i == WHOLE_COLLECTION )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( index == i )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( index >= 0 && index < getLength() )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( index >= 0 )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( index < getLength (  ) )  {^270^^^^^269^276^if  ( index == WHOLE_COLLECTION )  {^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return true;^270^271^272^^^269^276^if  ( index == WHOLE_COLLECTION )  { return true; }^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^270^271^272^^^269^276^if  ( index == WHOLE_COLLECTION )  { return true; }^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  (  ( index )  !=  ( WHOLE_COLLECTION )  )  &&  ( isCollection (  )  )  )  {     buffer.append ( '[' ) .append (  (  ( index )  + 1 )  ) .append ( ']' ) ; }^270^^^^^269^276^[Delete]^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^return index >= 0 || index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^return index == 0 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^return index >= 0 && index <= getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return index >= 5 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return index >= 0 && index < getNode (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return i ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return false;^271^^^^^269^276^return true;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^return index > 0 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return index >= -9 && index < getLength (  ) ;^274^^^^^269^276^return index >= 0 && index < getLength (  ) ;^[CLASS] NodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return getName (  ) ;^297^^^^^296^298^return getNode (  ) ;^[CLASS] NodePointer  [METHOD] getNodeValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^297^^^^^296^298^return getNode (  ) ;^[CLASS] NodePointer  [METHOD] getNodeValue [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return getValuePointer (  ) .getRootNode (  ) ;^306^^^^^305^307^return getValuePointer (  ) .getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return getValuePointer (  )  .getImmediateParentPointer (  )  ;^306^^^^^305^307^return getValuePointer (  ) .getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return getValue (  ) .getImmediateNode (  ) ;^306^^^^^305^307^return getValuePointer (  ) .getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^306^^^^^305^307^return getValuePointer (  ) .getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( rootNode != null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( bean == null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( parent != null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( rootNode == this )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^310^^^^^309^319^if  ( rootNode == null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^if ((parent) != null) {    rootNode = parent.getRootNode();}else {    rootNode = getImmediateNode();};^310^311^312^313^^309^319^if  ( rootNode == null )  { if  ( parent != null )  { rootNode = parent.getRootNode (  ) ; }^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^310^311^312^313^^309^319^if  ( rootNode == null )  { if  ( parent != null )  { rootNode = parent.getRootNode (  ) ; }^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     rootNode = parent.getRootNode (  ) ; }else {     rootNode = getImmediateNode (  ) ; }^310^^^^^309^319^[Delete]^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( locale )  == null )  {     if  (  ( parent )  != null )  {         locale = parent.getLocale (  ) ;     } }^310^^^^^309^319^[Delete]^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( parent == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( valuePointer != null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( parent != false )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^rootNode = parent.getRootNode();^311^312^313^^^309^319^if  ( parent != null )  { rootNode = parent.getRootNode (  ) ; }^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^311^312^313^^^309^319^if  ( parent != null )  { rootNode = parent.getRootNode (  ) ; }^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( rootNode )  == null )  {     if  (  ( parent )  != null )  {         rootNode = parent.getRootNode (  ) ;     }else {         rootNode = getImmediateNode (  ) ;     } }^311^^^^^309^319^[Delete]^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^rootNode = getRootNode (  ) ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^rootNode ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^pointer = pointer.getImmediateParentPointer (  ) ;rootNode = getImmediateNode (  ) ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^rootNode = parent.getRootNode (  ) ;rootNode = getImmediateNode (  ) ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ivp = getImmediateValuePointer (  ) ;rootNode = getImmediateNode (  ) ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return getValuePointer (  ) .getImmediateNode (  ) ;rootNode = getImmediateNode (  ) ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^rootNode = valuePointer.getRootNode (  ) ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^rootNode = parent.getNode (  ) ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^rootNode  = null ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^locale = parent.getLocale (  ) ;rootNode = parent.getRootNode (  ) ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^rootNode = getImmediateNode (  ) ;rootNode = parent.getRootNode (  ) ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^rootNode  =  rootNode ;^312^^^^^309^319^rootNode = parent.getRootNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^rootNode  = null ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( parent != true )  {^311^^^^^309^319^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^rootNode  =  rootNode ;^315^^^^^309^319^rootNode = getImmediateNode (  ) ;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return bean;^318^^^^^309^319^return rootNode;^[CLASS] NodePointer  [METHOD] getRootNode [RETURN_TYPE] Object   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  String  UNKNOWN_NAMESPACE  NodePointer  ivp  parent  pointer  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return getNode (  ) ;^375^^^^^373^376^return isNode (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^375^^^^^373^376^return isNode (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^return getNode (  ) ;^375^^^^^360^390^return isNode (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^373^374^375^376^^358^388^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  { return isNode (  ) ; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^375^^^^^360^390^return isNode (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^if  ( isNode (  )  )  {^348^^^^^333^363^if  ( isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P15_Unwrap_Block]^return false;^348^349^350^^^333^363^if  ( isContainer (  )  )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P16_Remove_Block]^^348^349^350^^^333^363^if  ( isContainer (  )  )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( nodeNameTest.isWildcard (  )  )  {     return true; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^348^^^^^333^363^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P3_Replace_Literal]^return true;^349^^^^^334^364^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P2_Replace_Operator]^if  ( nodeName != null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( testName == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( nodeName == true )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( parent != null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( parent == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( locale == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( bean == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( rootNode == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( namespace == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( prefix == null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( pointer != null )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P15_Unwrap_Block]^return false;^354^355^356^^^339^369^if  ( nodeName == null )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P16_Remove_Block]^^354^355^356^^^339^369^if  ( nodeName == null )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( nodeNameTest.isWildcard (  )  )  {     return true; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^354^^^^^339^369^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P3_Replace_Literal]^return true;^355^^^^^340^370^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( nodePrefix, nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testPrefix, testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings (  nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( nodePrefix, testPrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^if  ( !getPointerByID ( testPrefix, nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( !equalStrings ( testNS, nodeNS )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P15_Unwrap_Block]^java.lang.String testNS = getNamespaceURI(testPrefix); java.lang.String nodeNS = getNamespaceURI(nodePrefix); if (!(org.apache.commons.jxpath.ri.model.NodePointer.equalStrings(testNS, nodeNS))) {    return false;};^360^361^362^363^364^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  { String testNS = getNamespaceURI ( testPrefix ) ; String nodeNS = getNamespaceURI ( nodePrefix ) ; if  ( !equalStrings ( testNS, nodeNS )  )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P16_Remove_Block]^^360^361^362^363^364^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  { String testNS = getNamespaceURI ( testPrefix ) ; String nodeNS = getNamespaceURI ( nodePrefix ) ; if  ( !equalStrings ( testNS, nodeNS )  )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testPrefix, nodeNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testNS, testPrefix )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings (  nodeNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( nodeNS, testNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^if  ( !getPointerByID ( testNS, nodeNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( !getPointerByID ( testNS, testPrefix )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P9_Replace_Statement]^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P15_Unwrap_Block]^return false;^363^364^365^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P16_Remove_Block]^^363^364^365^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  { return false; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P3_Replace_Literal]^return true;^364^^^^^349^379^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P1_Replace_Type]^char testNS = getNamespaceURI ( testPrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^String testNS = getNamespaceURI ( nodePrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^String testNS = isDefaultNamespace ( testPrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^String nodeNS = getNamespaceURI ( nodePrefix ) ;String testNS = getNamespaceURI ( testPrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^String namespace = getNamespaceURI ( prefix ) ;String testNS = getNamespaceURI ( testPrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P1_Replace_Type]^char nodeNS = getNamespaceURI ( nodePrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^String nodeNS = getNamespaceURI ( testPrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^String nodeNS = isDefaultNamespace ( nodePrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^String testNS = getNamespaceURI ( testPrefix ) ;String nodeNS = getNamespaceURI ( nodePrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^String namespace = getNamespaceURI ( prefix ) ;String nodeNS = getNamespaceURI ( nodePrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^String testNS = getNamespaceURI ( testNS ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^361^362^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ; String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^String nodeNS = isDefaultNamespace ( testPrefix ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( ! ( equalStrings ( testNS, nodeNS )  )  )  {     return false; }^363^^^^^348^378^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( nodeNameTest .getNodeName (  )   )  {^367^^^^^352^382^if  ( nodeNameTest.isWildcard (  )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P15_Unwrap_Block]^return true;^367^368^369^^^352^382^if  ( nodeNameTest.isWildcard (  )  )  { return true; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P16_Remove_Block]^^367^368^369^^^352^382^if  ( nodeNameTest.isWildcard (  )  )  { return true; }^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^367^^^^^352^382^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^367^^^^^352^382^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^367^^^^^352^382^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^367^^^^^352^382^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P3_Replace_Literal]^return false;^368^^^^^353^383^return true;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return nodeName.getName (  ) .equals ( testName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^return testName.getName (  )  .equals (  )  ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^return testName .getNode (  )  .equals ( nodeName^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodeNameTest nodeNameTest =  ( NodeNameTest )  test;^351^^^^^336^366^NodeNameTest nodeNameTest =  ( NodeNameTest )  test;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^QName testName = nodeNameTest .isWildcard (  )  ;^352^^^^^337^367^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^QName nodeName = getName (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^352^^^^^337^367^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^QName nodeName = getNode (  ) ;^353^^^^^338^368^QName nodeName = getName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;QName nodeName = getName (  ) ;^353^^^^^338^368^QName nodeName = getName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^Locale loc = getLocale (  ) ;QName nodeName = getName (  ) ;^353^^^^^338^368^QName nodeName = getName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P1_Replace_Type]^char testPrefix = testName.getPrefix (  ) ;^358^^^^^343^373^String testPrefix = testName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^String testPrefix = nodeName.getPrefix (  ) ;^358^^^^^343^373^String testPrefix = testName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^String testPrefix = testName .getName (  )  ;^358^^^^^343^373^String testPrefix = testName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^String nodePrefix = nodeName.getPrefix (  ) ;String testPrefix = testName.getPrefix (  ) ;^358^^^^^343^373^String testPrefix = testName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P1_Replace_Type]^char nodePrefix = nodeName.getPrefix (  ) ;^359^^^^^344^374^String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^String nodePrefix = testName.getPrefix (  ) ;^359^^^^^344^374^String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String nodePrefix = nodeName.getPrefix (  ) ;^359^^^^^344^374^String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^352^353^^^^337^367^QName testName = nodeNameTest.getNodeName (  ) ; QName nodeName = getName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^353^^^^^338^368^QName nodeName = getName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^buffer.append ( getName (  )  ) ;QName nodeName = getName (  ) ;^353^^^^^338^368^QName nodeName = getName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^358^^^^^343^373^String testPrefix = testName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^359^^^^^344^374^String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testNS, nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( !equalStrings ( testPrefix, testNS )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( !getPointerByID ( testNS, nodePrefix )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  ( ! ( equalStrings ( testNS, nodeNS )  )  )  {     return false; }^360^^^^^345^375^[Delete]^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return nodeName.getName (  ) .equals ( nodeName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return testName.getName (  ) .equals ( testName.getName (  )  ) ;^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( nodeName == false )  {^354^^^^^339^369^if  ( nodeName == null )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^String nodeNS = getNamespaceURI ( testNS ) ;^362^^^^^347^377^String nodeNS = getNamespaceURI ( nodePrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^String nodePrefix = nodeName .getName (  )  ;^359^^^^^344^374^String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^String testNS = isDefaultNamespace ( nodePrefix ) ;^361^^^^^346^376^String testNS = getNamespaceURI ( testPrefix ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^352^^^^^337^367^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^358^359^^^^343^373^String testPrefix = testName.getPrefix (  ) ; String nodePrefix = nodeName.getPrefix (  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  (  (  ( NodeTypeTest )  test )  .createNodePointer ( nodeName , rootNode , locale )  == Compiler.NODE_TYPE_NODE )  {^373^374^^^^358^388^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P3_Replace_Literal]^return false;^345^^^^^330^360^return true;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^if  (  (  ( NodeTypeTest )  test )  .createNodePointer ( testName , bean , locale )  == Compiler.NODE_TYPE_NODE )  {^373^374^^^^358^388^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( !getPointerByID ( testPrefix, nodeNS )  )  {^363^^^^^348^378^if  ( !equalStrings ( testNS, nodeNS )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^return nodeName .getNode (  )  .equals ( nodeName^370^^^^^355^385^return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^if  ( !getPointerByID ( testPrefix, testNS )  )  {^360^^^^^345^375^if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^if  (  (  ( NodeTypeTest )  test )  .createNodePointer ( testName , rootNode , locale )  == Compiler.NODE_TYPE_NODE )  {^373^374^^^^358^388^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  {^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P3_Replace_Literal]^return true;^378^^^^^363^393^return false;^[CLASS] NodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Locale  locale  boolean  attribute  NodeNameTest  nodeNameTest  QName  nodeName  testName  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P2_Replace_Operator]^if  ( s1 == null || s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( s1 != null && s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( s1 == null && s2 == null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( testPrefix == null && s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( s1 == null && testPrefix != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( s2 == null && s1 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( s1 == null ) {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  s2 != null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  (  s2 != this )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( p1 == null && p2 == null )  {^382^^^^^381^389^if  ( s1 == null && s2 != null )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return false;^382^383^384^^^381^389^if  ( s1 == null && s2 != null )  { return false; }^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^382^383^384^^^381^389^if  ( s1 == null && s2 != null )  { return false; }^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  (  ( parent )  != null )  &&  ( parent.isContainer (  )  )  )  {     return parent.asPath (  ) ; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 != null )  &&  ( p1.equals ( p2 )  )  )  {     return 0; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^382^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return true;^383^^^^^381^389^return false;^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( s1 != null || !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( s1 == null && !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( testPrefix != null && !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( s1 != null && !s1.equals ( testPrefix )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( s2 != null && !s1.equals ( s1 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( s1 != null ) {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  !s1.equals ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^if  ( s1 != null && !s1.replace ( s2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( p1 != null && p1.equals ( p2 )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return false;^385^386^387^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  { return false; }^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^385^386^387^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  { return false; }^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  (  ( parent )  != null )  &&  ( parent.isContainer (  )  )  )  {     return parent.asPath (  ) ; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 != null )  &&  ( p1.equals ( p2 )  )  )  {     return 0; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^385^^^^^381^389^[Delete]^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return true;^386^^^^^381^389^return false;^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( s1 != null && !s1.equals ( testNS )  )  {^385^^^^^381^389^if  ( s1 != null && !s1.equals ( s2 )  )  {^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return false;^388^^^^^381^389^return true;^[CLASS] NodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^compareTo ( value ) ;^396^^^^^395^398^setValue ( value ) ;^[CLASS] NodePointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^compareTo ( rootNode ) ;^396^^^^^395^398^setValue ( value ) ;^[CLASS] NodePointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^396^^^^^395^398^setValue ( value ) ;^[CLASS] NodePointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return null;^397^^^^^395^398^return this;^[CLASS] NodePointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return null;^416^^^^^415^417^return this;^[CLASS] NodePointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  <<  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ||  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (   instanceof   )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  <  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  <=  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path "  &&  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  ==  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "reaannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + "at operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( i + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + index + "[" +  ( name + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^throw new JXPathException ( "Cannot create an object for path " + isNode (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ^  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  >=  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  &  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ==  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path "  ||  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  >=  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot crea" + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + "operatio operation is not allowed for this type of node" ) ;^431^432^433^^^425^434^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^+ isNode (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^432^433^^^^425^434^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^432^433^^^^425^434^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^+ asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^432^433^^^^425^434^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ^  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  &  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ||  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  >  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  ==  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path "  |  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  <  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "creannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + WHOLE_COLLECTION )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + "ation is not allowed for this t operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( i + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + index + "[" +  ( name + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^throw new JXPathException ( "Cannot create an object for path " + isNode (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  |  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  &&  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  <<  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path "  ||  asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index  |  1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "nnannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + index )  + "]" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "" + ", operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + " al operation is not allowed for this type of node" ) ;^444^445^446^^^442^447^throw new JXPathException ( "Cannot create an object for path " + asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^+ isNode (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^445^446^^^^442^447^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^445^446^^^^442^447^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^+ asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^445^446^^^^442^447^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  |  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  <  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  ^  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path "  &&  asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "n attribute for pa" + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + "wed for this t" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^throw new JXPathException ( "Cannot create an attribute for path " + isNode (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  &  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  ==  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  >=  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot create an attribute for path "  <<  asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an attribute for path but" + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of noden is not a" ) ;^453^454^455^^^452^456^throw new JXPathException ( "Cannot create an attribute for path " + asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^+ isNode (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^454^455^^^^452^456^+ asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^454^455^^^^452^456^+ asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^+ asPath (  )  + "/" + name + "[" +  ( index + 1 )  + "]" + ", operation is not allowed for this type of node" ) ;+ asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^454^455^^^^452^456^+ asPath (  )  + "/@" + name + ", operation is not allowed for this type of node" ) ;^[CLASS] NodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] Locale  locale  boolean  attribute  JXPathContext  context  QName  name  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( locale != null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( parent != null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( locale == this )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^463^^^^^462^469^if  ( locale == null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^if ((parent) != null) {    locale = parent.getLocale();};^463^464^465^466^^462^469^if  ( locale == null )  { if  ( parent != null )  { locale = parent.getLocale (  ) ; }^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^463^464^465^466^^462^469^if  ( locale == null )  { if  ( parent != null )  { locale = parent.getLocale (  ) ; }^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  (  ( namespaceResolver )  == null )  &&  (  ( parent )  != null )  )  {     namespaceResolver = parent.getNamespaceResolver (  ) ; }^463^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     locale = parent.getLocale (  ) ; }^463^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( rootNode )  == null )  {     if  (  ( parent )  != null )  {         rootNode = parent.getRootNode (  ) ;     }else {         rootNode = getImmediateNode (  ) ;     } }^463^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( parent == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( valuePointer != null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( parent != true )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^locale = parent.getLocale();^464^465^466^^^462^469^if  ( parent != null )  { locale = parent.getLocale (  ) ; }^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^464^465^466^^^462^469^if  ( parent != null )  { locale = parent.getLocale (  ) ; }^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^464^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^464^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( locale )  == null )  {     if  (  ( parent )  != null )  {         locale = parent.getLocale (  ) ;     } }^464^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^464^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^464^^^^^462^469^[Delete]^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^locale = valuePointer.getLocale (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^locale = parent.getValue (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^locale  =  locale ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^rootNode = parent.getRootNode (  ) ;locale = parent.getLocale (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^Locale loc = getLocale (  ) ;locale = parent.getLocale (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^locale = pointer2.getLocale (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^locale ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^locale = pointer2 .getValue (  )  ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( valuePointer != this )  {^464^^^^^462^469^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^locale = valuePointer.getValue (  ) ;^465^^^^^462^469^locale = parent.getLocale (  ) ;^[CLASS] NodePointer  [METHOD] getLocale [RETURN_TYPE] Locale   [VARIABLES] Locale  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^Locale loc = getValue (  ) ;^476^^^^^475^479^Locale loc = getLocale (  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^QName nodeName = getName (  ) ;Locale loc = getLocale (  ) ;^476^^^^^475^479^Locale loc = getLocale (  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^476^477^^^^475^479^Locale loc = getLocale (  ) ; String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^locale = parent.getLocale (  ) ;Locale loc = getLocale (  ) ;^476^^^^^475^479^Locale loc = getLocale (  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P1_Replace_Type]^char name = loc.tochar (  ) .replace ( '_', '-' ) ;^477^^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^String name = locale.toString (  ) .replace ( '_', '-' ) ;^477^^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^String name = loc.toString (  )  .equals (  )  ;^477^^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^String name = loc .toString (  )  .replace ( '_', '-' ) ;^477^^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^477^^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^477^478^^^^475^479^String name = loc.toString (  ) .replace ( '_', '-' ) ; return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return testNS.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return name.toUpperCase (  ) .startsWith ( testPrefix.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return lang.toUpperCase (  ) .startsWith ( name.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return name.toUpperCase (  ) .replace ( lang.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return name.equals (  ) .startsWith ( lang.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return name.toUpperCase (  )  .length (  )  ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return name.toUpperCase (  ) .startsWith ( testNS.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return testPrefix.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^478^^^^^475^479^return name.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] NodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] Locale  loc  locale  boolean  attribute  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^NodePointer valuePointer = getValue (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^NodePointer ivp = getImmediateValuePointer (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer valuePointer = getValuePointer (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer valuePointer = getValuePointer (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P12_Insert_Condition]^if  ( valuePointer != null && valuePointer != this )  { NodePointer valuePointer = getValuePointer (  ) ; }^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^return ivp.getValuePointer (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P11_Insert_Donor_Statement]^return valuePointer.getValue (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^511^^^^^506^516^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P2_Replace_Operator]^if  ( valuePointer != null || valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P2_Replace_Operator]^if  ( valuePointer == null && valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P2_Replace_Operator]^if  ( valuePointer != null && valuePointer == this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^if  ( pointer2 != null && valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P6_Replace_Expression]^if  ( valuePointer != null ) {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P6_Replace_Expression]^if  (  valuePointer != this )  {^512^^^^^506^516^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P15_Unwrap_Block]^return valuePointer.childIterator(test, reverse, startWith);^512^513^514^^^506^516^if  ( valuePointer != null && valuePointer != this )  { return valuePointer.childIterator ( test, reverse, startWith ) ; }^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P16_Remove_Block]^^512^513^514^^^506^516^if  ( valuePointer != null && valuePointer != this )  { return valuePointer.childIterator ( test, reverse, startWith ) ; }^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P13_Insert_Block]^if  (  ( valuePointer != null )  &&  ( valuePointer !=  ( this )  )  )  {     return valuePointer.attributeIterator ( qname ) ; }^512^^^^^506^516^[Delete]^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return pointer2.childIterator ( test, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( test, attribute, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( test, reverse, pointer1 ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator (  reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( test,  startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( test, reverse ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return test.childIterator ( valuePointer, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( test, startWith, reverse ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return startWith.childIterator ( test, reverse, valuePointer ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^return valuePointer.compareNodePointers ( test, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^return valuePointer .attributeIterator ( 2 )  ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return startWith.childIterator ( test, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( test, reverse, pointer2 ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P5_Replace_Variable]^return valuePointer.childIterator ( reverse, test, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^return valuePointer.compareNodePointers ( test, attribute, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P14_Delete_Statement]^^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^return pointer1.compareNodePointers ( test, reverse, startWith ) ;^513^^^^^506^516^return valuePointer.childIterator ( test, reverse, startWith ) ;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P8_Replace_Mix]^return true;^515^^^^^506^516^return null;^[CLASS] NodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  NodeTest  test  
[P7_Replace_Invocation]^NodePointer valuePointer = getValue (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ivp = getImmediateValuePointer (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer valuePointer = getValuePointer (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer valuePointer = getValuePointer (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P12_Insert_Condition]^if  ( valuePointer != null && valuePointer != this )  { NodePointer valuePointer = getValuePointer (  ) ; }^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return ivp.getValuePointer (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return valuePointer.getValue (  ) ;NodePointer valuePointer = getValuePointer (  ) ;^524^^^^^523^529^NodePointer valuePointer = getValuePointer (  ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( valuePointer != null || valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( valuePointer == null && valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( valuePointer != null && valuePointer == this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( pointer2 != null && valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( valuePointer != null ) {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( pointer1 != false && valuePointer != this )  {^525^^^^^523^529^if  ( valuePointer != null && valuePointer != this )  {^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return valuePointer.attributeIterator(qname);^525^526^527^^^523^529^if  ( valuePointer != null && valuePointer != this )  { return valuePointer.attributeIterator ( qname ) ; }^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^525^526^527^^^523^529^if  ( valuePointer != null && valuePointer != this )  { return valuePointer.attributeIterator ( qname ) ; }^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  (  ( parent )  != null )  &&  ( parent.isContainer (  )  )  )  {     return parent.asPath (  ) ; }^525^^^^^523^529^[Delete]^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( valuePointer !=  ( this )  )  {     return valuePointer.getValue (  ) ; }^525^^^^^523^529^[Delete]^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( valuePointer != null )  &&  ( valuePointer !=  ( this )  )  )  {     return valuePointer.childIterator ( test, reverse, startWith ) ; }^525^^^^^523^529^[Delete]^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return startWith.attributeIterator ( qname ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return qname.attributeIterator ( valuePointer ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return valuePointer.createAttribute ( qname ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return pointer2.attributeIterator ( qname ) ;^526^^^^^523^529^return valuePointer.attributeIterator ( qname ) ;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return this;^528^^^^^523^529^return null;^[CLASS] NodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName qname [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  QName  qname  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return this;^537^^^^^536^538^return null;^[CLASS] NodePointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return false;^546^^^^^545^547^return null;^[CLASS] NodePointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return this;^553^^^^^552^554^return null;^[CLASS] NodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return false;^560^^^^^559^561^return null;^[CLASS] NodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( prefix != null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( nodePrefix == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( testPrefix == false )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent != null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^568^^^^^567^578^if  ( prefix == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return true;^568^569^570^^^567^578^if  ( prefix == null )  { return true; }^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^568^569^570^^^567^578^if  ( prefix == null )  { return true; }^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     locale = parent.getLocale (  ) ; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeNameTest.isWildcard (  )  )  {     return true; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^568^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return false;^569^^^^^567^578^return true;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P1_Replace_Type]^char namespace = getNamespaceURI ( prefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^String namespace = getNamespaceURI ( s2 ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^String namespace = isDefaultNamespace ( prefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^String namespace = getNamespaceURI ( testPrefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^String testNS = getNamespaceURI ( testPrefix ) ;String namespace = getNamespaceURI ( prefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^String nodeNS = getNamespaceURI ( nodePrefix ) ;String namespace = getNamespaceURI ( prefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^String namespace = getNamespaceURI ( testNS ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^String namespace = isDefaultNamespace ( nodePrefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;String namespace = getNamespaceURI ( prefix ) ;^572^^^^^567^578^String namespace = getNamespaceURI ( prefix ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( namespace != null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( s2 == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( namespace == false )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent != null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( parent == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^573^^^^^567^578^if  ( namespace == null )  {^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return false;^573^574^575^^^567^578^if  ( namespace == null )  { return false; }^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^573^574^575^^^567^578^if  ( namespace == null )  { return false; }^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( nodeNameTest.isWildcard (  )  )  {     return true; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^573^^^^^567^578^[Delete]^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^return true;^574^^^^^567^578^return false;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return s1.equals ( getDefaultNamespaceURI (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return namespace.startsWith ( getDefaultNamespaceURI (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return namespace .getNodeType (  )  ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return namespace.equals ( getNamespaceResolver (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return s2.equals ( getDefaultNamespaceURI (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return testNS.equals ( getDefaultNamespaceURI (  )  ) ;^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^577^^^^^567^578^return namespace.equals ( getDefaultNamespaceURI (  )  ) ;^[CLASS] NodePointer  [METHOD] isDefaultNamespace [RETURN_TYPE] boolean   String prefix [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return false;^581^^^^^580^582^return null;^[CLASS] NodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByID ( s1 ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return id.getPointerByID ( context ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return context.getPointerByKey ( id ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return context .getPointerByID ( id )  ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return context.getPointerByID ( s2 ) ;^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^588^^^^^587^589^return context.getPointerByID ( id ) ;^[CLASS] NodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey ( s1, value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey ( key, nodePrefix ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey (  value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey ( key ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return value.getPointerByKey ( key, context ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey ( value, key ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return context .getPointerByKey ( id , key )  ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return context .getPointerByKey ( key , nodeNS )  ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey ( testNS, value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return context.getPointerByKey ( key, testPrefix ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return key.getPointerByKey ( context, value ) ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return context .getPointerByKey ( lang , s1 )  ;^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^599^^^^^594^600^return context.getPointerByKey ( key, value ) ;^[CLASS] NodePointer  [METHOD] getPointerByKey [RETURN_TYPE] Pointer   JXPathContext context String key String value [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  JXPathContext  context  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( parent != null || parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( parent == null && parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( valuePointer != null && parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( parent != null ) {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^if  ( parent != null && parent.isNode (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( parent != true && parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^return parent.asPath();^608^609^610^^^605^630^if  ( parent != null && parent.isContainer (  )  )  { return parent.asPath (  ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^608^609^610^^^605^630^if  ( parent != null && parent.isContainer (  )  )  { return parent.asPath (  ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( p1 != null )  &&  ( p1.equals ( p2 )  )  )  {     return 0; }^608^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^608^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^608^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( valuePointer != null )  &&  ( valuePointer !=  ( this )  )  )  {     return valuePointer.attributeIterator ( qname ) ; }^608^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^608^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^return valuePointer.asPath (  ) ;^609^^^^^605^630^return parent.asPath (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return parent.isNode (  ) ;^609^^^^^605^630^return parent.asPath (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^609^^^^^605^630^return parent.asPath (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( startWith != null && parent.isContainer (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( valuePointer != null && parent.isNode (  )  )  {^608^^^^^605^630^if  ( parent != null && parent.isContainer (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return startWith.isNode (  ) ;^609^^^^^605^630^return parent.asPath (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( parent == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( pointer2 != null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^if  ( parent != false )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^613^^^^^605^630^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^buffer.append(parent.asPath());^613^614^615^^^605^630^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^613^614^615^^^605^630^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  (  ( parent )  != null )  &&  ( parent.isContainer (  )  )  )  {     return parent.asPath (  ) ; }^613^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  ( attribute )  {     buffer.append ( '@' ) ; }^613^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^613^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     locale = parent.getLocale (  ) ; }^613^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^buffer.append ( startWith.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer.append ( parent.isNode (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^buffer.append ( pointer2.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( parent.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( parent.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( getName (  )  ) ;buffer.append ( parent.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^return parent.asPath (  ) ;buffer.append ( parent.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer.append ( parent .createPath ( 4 , bean )   ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^buffer.append ( pointer2.isNode (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^buffer.append ( valuePointer.asPath (  )  ) ;^614^^^^^605^630^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 && buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( buffer.length (  )  != 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  == '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   ==  1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^if  ( buffer.length (  )  == -9 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^if  ( buffer.length() - 3  == 0 || buffer.charAt ( buffer.length() - 3  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 ) {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^if  ( buffer.append (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^if  ( buffer .StringBuffer (  )   == 0 || buffer.charAt ( buffer^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^if  ( buffer.length (  )  == 0 || buffer .toString (  )   != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^buffer.append('/');^617^618^619^620^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^617^618^619^620^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( UNKNOWN_NAMESPACE )  ;^619^^^^^605^630^buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^619^^^^^605^630^buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( '/' ) ;^619^^^^^605^630^buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( getName (  )  ) ;buffer.append ( '/' ) ;^619^^^^^605^630^buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '/' ) ;^619^^^^^605^630^buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^if  ( buffer.length() + 2  == 0 || buffer.charAt ( buffer.length() + 2  - 1 )  != '/' )  {^617^618^^^^605^630^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )   &&  1 )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length (  )  -  )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() - 9  - 1 )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^|| buffer .toString (  )   != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer.append (  )  - 1 )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^618^619^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 7  - 1 )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer .StringBuffer (  )   - 1 )  != '/' )  {^618^^^^^605^630^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^buffer .append ( nodeNS )  ;^619^^^^^605^630^buffer.append ( '/' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( reverse )  {^621^^^^^605^630^if  ( attribute )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^buffer.append('@');^621^622^623^^^605^630^if  ( attribute )  { buffer.append ( '@' ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^621^622^623^^^605^630^if  ( attribute )  { buffer.append ( '@' ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^621^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^622^^^^^605^630^buffer.append ( '@' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '@' ) ;^622^^^^^605^630^buffer.append ( '@' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( getName (  )  ) ;buffer.append ( '@' ) ;^622^^^^^605^630^buffer.append ( '@' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '@' ) ;^622^^^^^605^630^buffer.append ( '@' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( key )  ;^622^^^^^605^630^buffer.append ( '@' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .toString (  )  ;^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer.append ( getNode (  )  ) ;^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( getName (  )  ) ;^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^QName nodeName = getName (  ) ;buffer.append ( getName (  )  ) ;^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( getName (  )  ) ;^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( getName (  )  ) ;^624^^^^^605^630^buffer.append ( getName (  )  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION || isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( index == WHOLE_COLLECTION && isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( i != WHOLE_COLLECTION && isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( index != i && isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index && isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( index != WHOLE_COLLECTION ) {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  (  isCollection (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P6_Replace_Expression]^if  ( index + 1 )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^if  ( index != WHOLE_COLLECTION && isContainer (  )  )  {^626^^^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P15_Unwrap_Block]^buffer.append('[').append(((index) + 1)).append(']');^626^627^628^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P16_Remove_Block]^^626^627^628^^^605^630^if  ( index != WHOLE_COLLECTION && isCollection (  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return true; }else {     return  (  ( index )  >= 0 )  &&  (  ( index )  <  ( getLength (  )  )  ) ; }^626^^^^^605^630^[Delete]^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  !=  1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index  ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P5_Replace_Variable]^buffer.append ( '[' ) .append ( i + 1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( nodePrefix )^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  ==  1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index + index ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( lang )^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( testPrefix )^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( s1 )^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  >=  1 ) .append ( ']' ) ;^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( nodeNS )^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^buffer .append ( name )^627^^^^^605^630^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P7_Replace_Invocation]^return buffer.charAt (  ) ;^629^^^^^605^630^return buffer.toString (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P8_Replace_Mix]^return buffer .toString (  )  ;^629^^^^^605^630^return buffer.toString (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^629^^^^^605^630^return buffer.toString (  ) ;^[CLASS] NodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  StringBuffer  buffer  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P2_Replace_Operator]^if  ( parent == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P5_Replace_Variable]^if  ( startWith != null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^if  ( parent != false )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( locale == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( bean == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( rootNode == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( namespace == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( prefix == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( nodeName == null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P9_Replace_Statement]^if  ( pointer != null )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P15_Unwrap_Block]^ptr.parent = ((org.apache.commons.jxpath.ri.model.NodePointer) (parent.clone()));^635^636^637^^^632^645^if  ( parent != null )  { ptr.parent =  ( NodePointer )  parent.clone (  ) ; }^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P16_Remove_Block]^^635^636^637^^^632^645^if  ( parent != null )  { ptr.parent =  ( NodePointer )  parent.clone (  ) ; }^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P13_Insert_Block]^if  ( bean == null )  {     pointer = new NullPointer ( name, locale ) ;     return pointer; }^635^^^^^632^645^[Delete]^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P5_Replace_Variable]^ptr.parent =  ( NodePointer )  startWith.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P7_Replace_Invocation]^ptr.parent =  ( NodePointer )  parent.isNode (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P7_Replace_Invocation]^ptr.parent =  ( NodePointer )  parent .getClass (  )  ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^ptr.parent =   ( NodePointer )  parent.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     ptr.parent =  (  ( NodePointer )   ( parent.clone (  )  )  ) ; }^636^^^^^632^645^[Delete]^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^ptr.parent =  ( NodePointer )  valuePointer.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P14_Delete_Statement]^^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;ptr.parent =  ( NodePointer )  parent.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P13_Insert_Block]^if  ( ! ( equalStrings ( testNS, nodeNS )  )  )  {     return false; }^636^^^^^632^645^[Delete]^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^if  ( parent != this )  {^635^^^^^632^645^if  ( parent != null )  {^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^ptr.parent =  ( NodePointer )  ptr.isNode (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P5_Replace_Variable]^return valuePointer;^638^^^^^632^645^return ptr;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P7_Replace_Invocation]^NodePointer ptr =  ( NodePointer )  super.equals (  ) ;^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P11_Insert_Donor_Statement]^NodePointer ivp = getImmediateValuePointer (  ) ;NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P11_Insert_Donor_Statement]^NodePointer valuePointer = getValuePointer (  ) ;NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P14_Delete_Statement]^^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P11_Insert_Donor_Statement]^ptr.parent =  ( NodePointer )  parent.clone (  ) ;NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P5_Replace_Variable]^ptr.parent =  ( NodePointer )  ptr.clone (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^ptr.parent =  ( NodePointer )  valuePointer.isNode (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P7_Replace_Invocation]^NodePointer ptr =  ( NodePointer )  super .getClass (  )  ;^634^^^^^632^645^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^ptr.parent =  ( NodePointer )  startWith.isNode (  ) ;^636^^^^^632^645^ptr.parent =  ( NodePointer )  parent.clone (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P14_Delete_Statement]^^642^^^^^632^645^ex.printStackTrace (  ) ;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P8_Replace_Mix]^return this;^644^^^^^632^645^return null;^[CLASS] NodePointer  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  CloneNotSupportedException  ex  
[P7_Replace_Invocation]^return isNode (  ) ;^648^^^^^647^649^return asPath (  ) ;^[CLASS] NodePointer  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P14_Delete_Statement]^^648^^^^^647^649^return asPath (  ) ;^[CLASS] NodePointer  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  i  index  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  super.clone (  ) ;NodePointer pointer =  ( NodePointer )  object;^653^^^^^651^675^NodePointer pointer =  ( NodePointer )  object;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodeNameTest nodeNameTest =  ( NodeNameTest )  test;NodePointer pointer =  ( NodePointer )  object;^653^^^^^651^675^NodePointer pointer =  ( NodePointer )  object;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = null;NodePointer pointer =  ( NodePointer )  object;^653^^^^^651^675^NodePointer pointer =  ( NodePointer )  object;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer pointer =  ( NodePointer )  object;^653^^^^^651^675^NodePointer pointer =  ( NodePointer )  object;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer p2 = pointer;NodePointer pointer =  ( NodePointer )  object;^653^^^^^651^675^NodePointer pointer =  ( NodePointer )  object;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer valuePointer = getValuePointer (  ) ;NodePointer pointer =  ( NodePointer )  object;^653^^^^^651^675^NodePointer pointer =  ( NodePointer )  object;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P2_Replace_Operator]^if  ( parent != pointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P2_Replace_Operator]^if  ( parent > pointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( parent == startWith.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( ptr == pointer.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( parent == valuePointer )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( pointer == parent.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( parent == pointer )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P6_Replace_Expression]^if  ( parent == null )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^if  ( parent == ptr.parent )  {^654^^^^^651^675^if  ( parent == pointer.parent )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P15_Unwrap_Block]^if ((parent) == null) {    return 0;}; return parent.compareChildNodePointers(this, pointer);^654^655^656^657^^651^675^if  ( parent == pointer.parent )  { if  ( parent == null )  { return 0; }^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P16_Remove_Block]^^654^655^656^657^^651^675^if  ( parent == pointer.parent )  { if  ( parent == null )  { return 0; }^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P2_Replace_Operator]^if  ( parent != null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( valuePointer == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^if  ( parent == this )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( locale == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( bean == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( rootNode == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( namespace == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( prefix == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( nodeName == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P9_Replace_Statement]^if  ( pointer != null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P15_Unwrap_Block]^return 0;^655^656^657^^^651^675^if  ( parent == null )  { return 0; }^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P16_Remove_Block]^^655^656^657^^^651^675^if  ( parent == null )  { return 0; }^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  (  ( p1 != null )  &&  ( p1.equals ( p2 )  )  )  {     return 0; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     locale = parent.getLocale (  ) ; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  ( r != 0 )  {     return r; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^655^^^^^651^675^[Delete]^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P3_Replace_Literal]^return i;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return 1;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return 3;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return parent.compareChildNodePointers ( this, startWith ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return ptr.compareChildNodePointers ( this, pointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return parent.compareChildNodePointers ( this ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return pointer.compareChildNodePointers ( this, parent ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P7_Replace_Invocation]^return parent.NodePointer ( this, pointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return valuePointer.NodePointer ( this, pointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P14_Delete_Statement]^^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^if  ( startWith == null )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^if  ( parent == true )  {^655^^^^^651^675^if  ( parent == null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return 0L;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P3_Replace_Literal]^return -7;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return 0 / 1;^656^^^^^651^675^return 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return parent.NodePointer ( this, valuePointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return parent.compareChildNodePointers ( this, valuePointer ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P7_Replace_Invocation]^return parent .compareNodePointers ( pointer , depth1 , pointer1 , i )  ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^return parent.compareChildNodePointers ( this, ptr ) ;^658^^^^^651^675^return parent.compareChildNodePointers ( this, pointer ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P1_Replace_Type]^long  depth1 = 0;^662^^^^^651^675^int depth1 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P3_Replace_Literal]^int depth1 = 5;^662^^^^^651^675^int depth1 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^int depth2 = 0;int depth1 = 0;^662^^^^^651^675^int depth1 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = null;NodePointer p1 = this;^663^^^^^651^675^NodePointer p1 = this;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer p1 = this;^663^^^^^651^675^NodePointer p1 = this;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer p2 = pointer;NodePointer p1 = this;^663^^^^^651^675^NodePointer p1 = this;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P2_Replace_Operator]^while  ( p1 == null )  {^664^^^^^651^675^while  ( p1 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^while  ( startWith != null )  {^664^^^^^651^675^while  ( p1 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^while  ( pointer2 != null )  {^664^^^^^651^675^while  ( p1 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p1 = ptr;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p1 = p1.parent.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p1 = p1;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^p1 =  ptr.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^p2 = p2.parent;p1 = p1.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p1 = startWith.parent;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p1 = startWith;^666^^^^^651^675^p1 = p1.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P1_Replace_Type]^short  depth2 = 0;^668^^^^^651^675^int depth2 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P3_Replace_Literal]^int depth2 = index;^668^^^^^651^675^int depth2 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^int depth1 = 0;int depth2 = 0;^668^^^^^651^675^int depth2 = 0;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^NodePointer p2 = startWith;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^NodePointer p2 = valuePointer;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer p1 = this;NodePointer p2 = pointer;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = null;NodePointer p2 = pointer;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer =  ( NodePointer )  object;NodePointer p2 = pointer;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent;NodePointer p2 = pointer;^669^^^^^651^675^NodePointer p2 = pointer;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P2_Replace_Operator]^while  ( p2 == null )  {^670^^^^^651^675^while  ( p2 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^while  ( valuePointer != null )  {^670^^^^^651^675^while  ( p2 != null )  {^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p2 = ptr;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p2 = p2.parent.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p2 = p2;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^p2 =  pointer2.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P11_Insert_Donor_Statement]^p1 = p1.parent;p2 = p2.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p2 = ptr.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^p2 = pointer2;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P8_Replace_Mix]^p2 =  valuePointer.parent;^672^^^^^651^675^p2 = p2.parent;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, index, pointer, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth1, ptr, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth1, pointer, index ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this,  pointer, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth1,  depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth1, pointer ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, pointer, depth1, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth2, pointer, depth1 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P7_Replace_Invocation]^return newChildNodePointer ( this, depth1, pointer, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth1, startWith, depth2 ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P5_Replace_Variable]^return compareNodePointers ( this, depth1, depth2, pointer ) ;^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P14_Delete_Statement]^^674^^^^^651^675^return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareTo [RETURN_TYPE] int   Object object [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  
[P2_Replace_Operator]^if  ( depth1 > depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( depthdepth2 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( depthr < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( depth-1 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( depth-8 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( index < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( depth1 < index )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( depth2 < depth1 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( depth2 - 1 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( r != 0 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( depth1 - 1 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( depth1 >> 2 < depth2 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( depth1 == 1 )  {^683^^^^^668^698^if  ( depth1 < depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^int r = compareNodePointers(p1, depth1, p2.parent, (depth2 - 1)); if (r != 0) {    return r;}; return -1;^683^684^685^686^687^668^698^if  ( depth1 < depth2 )  { int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ; if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^683^684^685^686^687^668^698^if  ( depth1 < depth2 )  { int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ; if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^else if  ( depth1 >= depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^else if  ( depth6 > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^else if  ( depthindex > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^else if  ( index > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^else if  ( depth1 > index )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^else if  ( depth1 - 1 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^else if  ( r != 0 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^else {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^int r = compareNodePointers(p1.parent, (depth1 - 1), p2, depth2); if (r != 0) {    return r;}; return 1;^690^691^692^693^694^675^705^else if  ( depth1 > depth2 )  { int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ; if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^690^691^692^693^694^675^705^else if  ( depth1 > depth2 )  { int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ; if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r >= 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != 8 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( i != 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( r != 0 + 4 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( ivp != this )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^return r;^692^693^694^^^677^707^if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^692^693^694^^^677^707^if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^692^^^^^677^707^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^692^^^^^677^707^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^692^^^^^677^707^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^692^^^^^677^707^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^692^^^^^677^707^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^692^^^^^677^707^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return index;^693^^^^^678^708^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return 3;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 1 * 1;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P1_Replace_Type]^short  r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  &&  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( pdepth1.parent, depthdepth1 - depth1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( ptr.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, index - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, ptr, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, index ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( ptr, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1,  depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers (  depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth2 - 1, p2, depth1 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p2, depth1 - 1, p1.parent, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( depth2, depth1 - 1, p2, p1.parent ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  &  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( p1.parent, depth1 , p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, r - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( pointer2, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( depth2.parent, depth1 - 1, p2, p1 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^int r = compareNodePointers ( valuePointer.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^return compareNodePointers ( this, depth1, pointer, depth2 ) ;int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r == 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != depth1 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( index != 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( index != 0 * 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return i;^693^^^^^678^708^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return -4;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 1L;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  ==  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( startWith.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( pWHOLE_COLLECTION.parent, depthWHOLE_COLLECTION - WHOLE_COLLECTION, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, r ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( pointer1, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p2.parent, depth1 - 1, p1, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r > 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != -7 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( i != 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( r != 3 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( ivp != this )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^return r;^685^686^687^^^670^700^if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^685^686^687^^^670^700^if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^685^^^^^670^700^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^685^^^^^670^700^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^685^^^^^670^700^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^685^^^^^670^700^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^685^^^^^670^700^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^685^^^^^670^700^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return index;^686^^^^^671^701^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return i;^686^^^^^671^701^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return --6;^688^^^^^673^703^return -1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return -4;^688^^^^^673^703^return -1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P1_Replace_Type]^short  r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  >=  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( startWith, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, index, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, valuePointer.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, p2.parent, index - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, ptr, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers (  depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1,  p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, p2.parent - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1,  depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( depth1, p1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth2, p2.parent, depth1 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, p2.parent.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, depth2, p2.parent - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^int r = compareNodePointers ( p1, depth1, startWith, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( pointer2, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, r, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, ptr.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, p2.parent, r - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, pointer2, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p2, depth1, p1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, depth1, p2, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^int r = compareNodePointers ( p1, depth1, pointer2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^return compareNodePointers ( this, depth1, pointer, depth2 ) ;int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r == 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != WHOLE_COLLECTION )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( index != 0 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( index != 0 << 4 )  {^685^^^^^670^700^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^else if  ( depthWHOLE_COLLECTION > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^else if  ( depth7 > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^else if  ( depth2 > depth1 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( depth4 > depth2 )  {^690^^^^^675^705^else if  ( depth1 > depth2 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r > 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != -3 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( r != 4 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return r;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 4;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P1_Replace_Type]^long  r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  >  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( pointer2.parent, depth1 - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, pointer2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  <  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( depth1, p1.parent - 1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r <= 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != 2 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( r != 0 << 0 )  {^692^^^^^677^707^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return -depth2;^688^^^^^673^703^return -1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return -1 * 3;^688^^^^^673^703^return -1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return -5;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 2;^695^^^^^680^710^return 1;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P1_Replace_Type]^long  r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  <=  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( ptr, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, valuePointer, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, p2 - 1, depth1, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  <  1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( pWHOLE_COLLECTION, depthWHOLE_COLLECTION, p2.parent, depth2 - WHOLE_COLLECTION ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( valuePointer, depth1, p2.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p2.parent, depth1, p1, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1, p2, depth1.parent, depth2 - 1 ) ;^684^^^^^669^699^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  >>  1, p2, depth2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, depth2, p2 ) ;^691^^^^^676^706^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( p1 == null || p2 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( p1 != null && p2 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( p1 == null && p2 != null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( p1 == null && ptr == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( p2 == null && p1 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( p1 == null ) {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  p2 == null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( p1 == false && p2 == false )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( s1 == null && s2 != null )  {^697^^^^^682^712^if  ( p1 == null && p2 == null )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^return 0;^697^698^699^^^682^712^if  ( p1 == null && p2 == null )  { return 0; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^697^698^699^^^682^712^if  ( p1 == null && p2 == null )  { return 0; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( p1 != null )  &&  ( p1.equals ( p2 )  )  )  {     return 0; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^697^^^^^682^712^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return -7;^698^^^^^683^713^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 1;^698^^^^^683^713^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return -4;^698^^^^^683^713^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 0 * 0;^698^^^^^683^713^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( p1 != null || p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( p1 == null && p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( valuePointer != null && p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( p1 != null && p1.equals ( valuePointer )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( p2 != null && p1.equals ( p1 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( p1 != null ) {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^if  ( p1 != null && p1 .equals (  )   )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( p1 != false && p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( s1 != null && !s1.equals ( s2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^return 0;^701^702^703^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  { return 0; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^701^702^703^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  { return 0; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  (  ( parent )  != null )  &&  ( parent.isContainer (  )  )  )  {     return parent.asPath (  ) ; }^701^^^^^686^716^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( p1 == null )  &&  ( p2 == null )  )  {     return 0; }^701^^^^^686^716^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^701^^^^^686^716^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( s1 == null )  &&  ( s2 != null )  )  {     return false; }^701^^^^^686^716^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.equals ( s2 )  )  )  )  {     return false; }^701^^^^^686^716^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return -8;^702^^^^^687^717^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 4;^702^^^^^687^717^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^return 2;^702^^^^^687^717^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return 1;^702^^^^^687^717^return 0;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( ptr != null && p1.equals ( p2 )  )  {^701^^^^^686^716^if  ( p1 != null && p1.equals ( p2 )  )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( depth1 >= 1 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( depth8 == 8 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( r == 1 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  (  ( "Cannot compare pointers that do not belong to the same tree: '" + p1 )  + "' and '" )  + p2 + "'" )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  ( "Cannot compare pointers that do not belong to the same tree: '" + p1 )  + "' and '" + p2 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( "Cannot compare pointers that do not belong to the same tree: '" + p1 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( depth2 == 2 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( depth1 < depth2 )  {^705^^^^^690^720^if  ( depth1 == 1 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException((((("Cannot compare pointers that do not belong to the same tree: '" + p1) + "' and '") + p2) + "'"));^705^706^707^708^709^690^720^if  ( depth1 == 1 )  { throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^705^706^707^708^709^690^720^if  ( depth1 == 1 )  { throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  |  p1  |  "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  ==  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "compare" + p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and 'nd" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + startWith + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + startWith + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p2 + "' and '" + p1 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + valuePointer + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( depth1 == 1 )  {     throw new JXPathException (  (  (  (  ( "Cannot compare pointers that do not belong to the same tree: '" + p1 )  + "' and '" )  + p2 )  + "'" )  ) ; }^706^^^^^691^721^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  >  p1  >  "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  >>  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: 'long to th" + p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + ptr + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + ptr + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  >=  p1  >=  "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  >  p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: 'ompar" + p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "and and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + valuePointer + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"  <  p1  <  "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '"   instanceof   p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "ointersannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "'  and '" + p2 + "'" ) ;^706^707^708^^^691^721^throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P1_Replace_Type]^short  r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1  <  1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2  <<  1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( pWHOLE_COLLECTION.parent, depthWHOLE_COLLECTION - WHOLE_COLLECTION, p2.parent, depth2 - WHOLE_COLLECTION ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^int r = compareNodePointers ( p1.parent, depth1 , p2.parent, depth2  ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( valuePointer.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, index - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, ptr.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, index - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( pointer2, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers (  depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1,  depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( depth1, p1.parent - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p2.parent, depth1 - 1, p1.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p1.parent, depth1 - 1, depth2, p2.parent - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^int r = compareNodePointers ( p2.parent.parent, depth1 - 1, p1, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^710^711^^^^695^725^int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^compareNodePointers ( p1.parent, depth1  ==  1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2  >  1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^compareNodePointers ( p1.parent, depth1 , p2.parent, depth2  ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( valuePointer.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, r - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1, valuePointer.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, r - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( startWith, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1, pointer1, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1, p2.parent - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers (  depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1,  depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p2.parent.parent, depth1 - 1, p1, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth2 - 1, p2.parent, depth1 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p2.parent, depth1 - 1, p1.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^compareNodePointers ( valuePointer, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^return compareNodePointers ( this, depth1, pointer, depth2 ) ;compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P11_Insert_Donor_Statement]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^711^^^^^696^726^compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( r == 0 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( r != 8 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( index != 0 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( index != 4 )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P9_Replace_Statement]^if  ( ivp != this )  {^712^^^^^697^727^if  ( r != 0 )  {^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^return r;^712^713^714^^^697^727^if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^712^713^714^^^697^727^if  ( r != 0 )  { return r; }^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( nodeName == null )  {     return false; }^712^^^^^697^727^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( namespace == null )  {     return false; }^712^^^^^697^727^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( prefix == null )  {     return true; }^712^^^^^697^727^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( parent )  == null )  {     return 0; }^712^^^^^697^727^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( isContainer (  )  )  {     return false; }^712^^^^^697^727^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^712^^^^^697^727^[Delete]^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return index;^713^^^^^698^728^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return i;^713^^^^^698^728^return r;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return valuePointer.parent.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p1.parent.compareChildNodePointers ( p1, ptr ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return startWith.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p1.parent.compareChildNodePointers (  p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p1.parent.compareChildNodePointers ( p1 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p2.parent.compareChildNodePointers ( p1, p1 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p1.compareChildNodePointers ( p1.parent, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^return p1.parent.newChildNodePointer ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^return p1.parent .compareNodePointers ( parent , i , startWith , WHOLE_COLLECTION )  ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p1.parent.compareChildNodePointers ( p1, pointer2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return valuePointer.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^return p2.compareChildNodePointers ( p1, p1.parent ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^return startWith.parent.compareChildNodePointers ( p1, p2 ) ;^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^716^^^^^701^731^return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[CLASS] NodePointer  [METHOD] compareNodePointers [RETURN_TYPE] int   NodePointer p1 int depth1 NodePointer p2 int depth2 [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^NodePointer ( this, "" ) ;^723^^^^^722^724^printDeep ( this, "" ) ;^[CLASS] NodePointer  [METHOD] printPointerChain [RETURN_TYPE] void   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^723^^^^^722^724^printDeep ( this, "" ) ;^[CLASS] NodePointer  [METHOD] printPointerChain [RETURN_TYPE] void   [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( indent.length (  )  != 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( indent.length (  )  == 9 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( indent.length() + 5  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( prefix.length (  )  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  (  ( "POINTER: " + pointer )  + " ( " )  +  ( pointer.getClass (  ) .getName (  )  )  + " ) " )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  ( "POINTER: " + pointer )  + " ( " + pointer.getClass (  ) .getName (  ) )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( "POINTER: " + pointer + " ( " )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( "POINTER: " + pointer )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  (  (  ( indent + " of " )  + pointer )  + " ( " )  +  ( pointer.getClass (  ) .getName (  )  )  + " ) " )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  (  ( indent + " of " )  + pointer )  + " ( " + pointer.getClass (  ) .getName (  ) )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  (  ( indent + " of " )  + pointer + " ( " )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( indent + " of " + pointer )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( indent + " of " )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^if  ( indent.equals (  )  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^if  ( indent .StringBuffer (  )   == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( nodePrefix.equals (  )  == 0  )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^System.err.println ( indent  >>  " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^System.err.println ( indent + " of  " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^System.err.println ( nodePrefix + " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^System.err.println ( indent + " of " + ptr^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^System.err.println ( pointer + " of " + indent^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^System.err.println ( indent + " of " + pointer2^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^+ pointer.getClass (  )  .getNode (  )  + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^+ pointer.equals (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^+ pointer2.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^+ ptr.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^+ valuePointer.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^System.err.println ( "POINTER: "   instanceof   pointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^System.err.println ( "POINTER: POI" + pointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^System.err.println ( "POINTER: " + valuePointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^System.err.println ( "POINTER: " + pointer2 + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^+ pointer2.getClass (  ) .getName (  ) + " ) " ) ;^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^+ pointer.equals (  ) .getName (  ) + " ) " ) ;^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^+ valuePointer .equals (  )  .getName (  ) + " ) " ) ;^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^+ startWith.getClass (  ) .getName (  ) + " ) " ) ;^732^733^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^if  ( indent.length() + 3  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( s1.length (  )  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( nodePrefix.length (  )  == 0 )  {^727^^^^^726^747^if  ( indent.length (  )  == 0 )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^System.err.println ( "POINTER: "  >>  pointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^System.err.println ( "POOINTER: " + pointer + " ( "^728^729^730^731^^726^747^System.err.println ( "POINTER: " + pointer + " ( "^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^System.err.println ( indent  >=  " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^System.err.println ( indent + " of f" + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^System.err.println ( prefix + " of " + pointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^System.err.println ( indent + " of " + valuePointer^736^737^738^739^^726^747^System.err.println ( indent + " of " + pointer^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^+ ptr.equals (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^+ startWith.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^726^747^+ pointer.getClass (  ) .getName (  ) + " ) " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^if  ( pointer.getImmediateParentPointer (  )  == null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P6_Replace_Expression]^if  ( indent + "  " )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^if  ( pointer.setIndex (  )  != null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^if  ( pointer .getImmediateValuePointer (  )   != null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^if  ( pointer.setIndex (  )  != this )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P15_Unwrap_Block]^org.apache.commons.jxpath.ri.model.NodePointer.printDeep(pointer.getImmediateParentPointer(), (indent + "  "));^744^745^746^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  { printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ; }^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P16_Remove_Block]^^744^745^746^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  { printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ; }^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^printDeep ( pointer.getImmediateParentPointer (  ) , indent  ||  "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P3_Replace_Literal]^printDeep ( pointer.getImmediateParentPointer (  ) , indent + " " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^printDeep ( pointer.getImmediateParentPointer (  ) , testNS + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^printDeep ( pointer.getImmediateParentPointer (  )  + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^printDeep ( indent.getImmediateParentPointer (  ) , pointer + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^getPointerByKey ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^printDeep ( pointer.setIndex (  ) , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^printDeep ( pointer.getImmediateParentPointer (  ) , nodePrefix + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P14_Delete_Statement]^^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P12_Insert_Condition]^if  ( pointer.getImmediateParentPointer (  )  != null )  { printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ; }^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P13_Insert_Block]^if  (  ( pointer.getImmediateParentPointer (  )  )  != null )  {     printDeep ( pointer.getImmediateParentPointer (  ) ,  ( indent + "  " )  ) ; }^745^^^^^726^747^[Delete]^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^printDeep ( ptr.getImmediateParentPointer (  ) , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P8_Replace_Mix]^printDeep ( valuePointer .getImmediateValuePointer (  )  , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^if  ( pointer2.getImmediateParentPointer (  )  != null )  {^744^^^^^726^747^if  ( pointer.getImmediateParentPointer (  )  != null )  {^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P2_Replace_Operator]^printDeep ( pointer.getImmediateParentPointer (  ) , indent  >=  "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^printDeep ( pointer.getImmediateParentPointer (  ) , prefix + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P7_Replace_Invocation]^printDeep ( pointer .getImmediateValuePointer (  )  , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
[P5_Replace_Variable]^printDeep ( pointer2.getImmediateParentPointer (  ) , indent + "  " ) ;^745^^^^^726^747^printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[CLASS] NodePointer  [METHOD] printDeep [RETURN_TYPE] void   NodePointer pointer String indent [VARIABLES] Locale  loc  locale  boolean  attribute  reverse  NamespaceResolver  namespaceResolver  Object  bean  object  rootNode  value  String  UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  NodePointer  ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  int  WHOLE_COLLECTION  depth1  depth2  i  index  r  
