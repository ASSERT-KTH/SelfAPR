[P1_Replace_Type]^private  long  position = 0;^39^^^^^34^44^private int position = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P3_Replace_Literal]^private int position = 4;^39^^^^^34^44^private int position = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P8_Replace_Mix]^private int position  = null ;^39^^^^^34^44^private int position = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P1_Replace_Type]^private  short  index = 0;^40^^^^^35^45^private int index = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P3_Replace_Literal]^private int index = 9;^40^^^^^35^45^private int index = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P8_Replace_Mix]^private int index = 4;^40^^^^^35^45^private int index = 0;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P1_Replace_Type]^private  Set  children;^41^^^^^36^46^private List children;^[CLASS] JDOMNodeIterator   [VARIABLES] 
[P5_Replace_Variable]^this.parent = startWith;^48^^^^^44^65^this.parent = parent;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.nodeTest = nodeTest;this.parent = parent;^48^^^^^44^65^this.parent = parent;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( startWith == null )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^if  ( parent != null )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( startWith != true )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( child == null )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( child != null )  {^49^^^^^44^65^if  ( startWith != null )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^this.child = startWith.getNode();^49^50^51^^^44^65^if  ( startWith != null )  { this.child = startWith.getNode (  ) ; }^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^49^50^51^^^44^65^if  ( startWith != null )  { this.child = startWith.getNode (  ) ; }^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^this.child = parent.getNode (  ) ;^50^^^^^44^65^this.child = startWith.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^50^^^^^44^65^this.child = startWith.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^Object node = parent.getNode (  ) ;this.child = startWith.getNode (  ) ;^50^^^^^44^65^this.child = startWith.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^Object node = startWith.getNode (  ) ;^53^^^^^44^65^Object node = parent.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^53^^^^^44^65^Object node = parent.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.child = startWith.getNode (  ) ;Object node = parent.getNode (  ) ;^53^^^^^44^65^Object node = parent.getNode (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( node  <  Document )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( node  <=  Document )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^if  ( child instanceof Document )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( node instanceof Element )  {^54^^^^^44^65^if  ( node instanceof Document )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^this.children = ((org.jdom.Document) (node)).getContent();^54^55^56^^^44^65^if  ( node instanceof Document )  { this.children =  (  ( Document )  node ) .getContent (  ) ; }^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^54^55^56^^^44^65^if  ( node instanceof Document )  { this.children =  (  ( Document )  node ) .getContent (  ) ; }^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( node instanceof Element )  {     this.children =  (  ( Element )   ( node )  ) .getContent (  ) ; }else {     this.children = EMPTY_LIST; }^54^^^^^44^65^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^else if  ( node  !=  Element )  {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^else if  ( child instanceof Element )  {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^this.children = ((org.jdom.Element) (node)).getContent();^57^58^59^^^44^65^else if  ( node instanceof Element )  { this.children =  (  ( Element )  node ) .getContent (  ) ; }^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^57^58^59^^^44^65^else if  ( node instanceof Element )  { this.children =  (  ( Element )  node ) .getContent (  ) ; }^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^this.children ;^61^^^^^44^65^this.children = Collections.EMPTY_LIST;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^this.children =   (  ( Element )  node ) .getContent (  ) ;^58^^^^^44^65^this.children =  (  ( Element )  node ) .getContent (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.children =  (  ( Document )  node ) .getContent (  ) ;this.children =  (  ( Element )  node ) .getContent (  ) ;^58^^^^^44^65^this.children =  (  ( Element )  node ) .getContent (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^58^^^^^44^65^this.children =  (  ( Element )  node ) .getContent (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^this.children =   (  ( Document )  node ) .getContent (  ) ;^55^^^^^44^65^this.children =  (  ( Document )  node ) .getContent (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.children =  (  ( Element )  node ) .getContent (  ) ;this.children =  (  ( Document )  node ) .getContent (  ) ;^55^^^^^44^65^this.children =  (  ( Document )  node ) .getContent (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^55^^^^^44^65^this.children =  (  ( Document )  node ) .getContent (  ) ;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^else if  ( node  >=  Element )  {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^else {^57^^^^^44^65^else if  ( node instanceof Element )  {^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^this.nodeTest =  null;^63^^^^^44^65^this.nodeTest = nodeTest;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.reverse = reverse;this.nodeTest = nodeTest;^63^^^^^44^65^this.nodeTest = nodeTest;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.parent = parent;this.nodeTest = nodeTest;^63^^^^^44^65^this.nodeTest = nodeTest;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^this.reverse =  null;^64^^^^^44^65^this.reverse = reverse;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^this.nodeTest = nodeTest;this.reverse = reverse;^64^^^^^44^65^this.reverse = reverse;^[CLASS] JDOMNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   NodePointer parent NodeTest nodeTest boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( child != null )  {^68^^^^^67^76^if  ( child == null )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child == true )  {^68^^^^^67^76^if  ( child == null )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( startWith != null )  {^68^^^^^67^76^if  ( child == null )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^if (!(setPosition(1))) {    return null;}; position = 0;^68^69^70^71^^67^76^if  ( child == null )  { if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^68^69^70^71^^67^76^if  ( child == null )  { if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( !setPosition ( index )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( !setPosition ( 4 )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !previous (  )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( position == 1 )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !next (  )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return null;^69^70^71^^^67^76^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^69^70^71^^^67^76^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( previous (  )  )  )  {     return false; }^69^^^^^67^76^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( testChild (  )  )  {     return true; }^69^^^^^67^76^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( next (  )  )  )  {     return false; }^69^^^^^67^76^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^return this;^70^^^^^67^76^return null;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^position = index;^72^^^^^67^76^position = 0;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^position = 0L;^72^^^^^67^76^position = 0;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( !setPosition ( -6 )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( !setPosition ( position )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( !setPosition ( 2 )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^position = 2;^72^^^^^67^76^position = 0;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^position = 0 % 2;^72^^^^^67^76^position = 0;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^return false;^70^^^^^67^76^return null;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( !setPosition ( 5 )  )  {^69^^^^^67^76^if  ( !setPosition ( 1 )  )  {^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return new JDOMNodePointer ( startWith, child ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return new JDOMNodePointer ( parent, node ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return new JDOMNodePointer (  child ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return new JDOMNodePointer ( parent ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return new JDOMNodePointer ( child, parent ) ;^75^^^^^67^76^return new JDOMNodePointer ( parent, child ) ;^[CLASS] JDOMNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return index;^79^^^^^78^80^return position;^[CLASS] JDOMNodeIterator  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^while  ( this.position == position )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( this.position < index )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( index < position )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( position < this.position )  {^83^^^^^82^94^while  ( this.position < position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^if  ( !testChild (  )  )  {^84^^^^^82^94^if  ( !next (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !previous (  )  )  {^84^^^^^82^94^if  ( !next (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^84^^^^^82^94^if  ( !next (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( testChild (  )  )  {^84^^^^^82^94^if  ( !next (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return false;^84^85^86^^^82^94^if  ( !next (  )  )  { return false; }^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^84^85^86^^^82^94^if  ( !next (  )  )  { return false; }^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( previous (  )  )  )  {     return false; }^84^^^^^82^94^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( testChild (  )  )  {     return true; }^84^^^^^82^94^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^84^^^^^82^94^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return true;^85^^^^^82^94^return false;^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^while  ( this.position >= position )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( this.position > index )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( index > position )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( position > this.position )  {^88^^^^^82^94^while  ( this.position > position )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^if  ( !next (  )  )  {^89^^^^^82^94^if  ( !previous (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^89^^^^^82^94^if  ( !previous (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( testChild (  )  )  {^89^^^^^82^94^if  ( !previous (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return false;^89^90^91^^^82^94^if  ( !previous (  )  )  { return false; }^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^89^90^91^^^82^94^if  ( !previous (  )  )  { return false; }^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( testChild (  )  )  {     return true; }^89^^^^^82^94^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^89^^^^^82^94^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( next (  )  )  )  {     return false; }^89^^^^^82^94^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return true;^90^^^^^82^94^return false;^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return false;^93^^^^^82^94^return true;^[CLASS] JDOMNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^while  ( --index > 0 )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^while  ( --index >= -1 )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^while  ( --position >= 0 )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^if  ( next (  )  )  {^107^^^^^102^121^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !previous (  )  )  {^107^^^^^102^121^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !next (  )  )  {^107^^^^^102^121^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return true;^107^108^109^^^102^121^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^107^108^109^^^102^121^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( previous (  )  )  )  {     return false; }^107^^^^^102^121^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^107^^^^^102^121^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( next (  )  )  )  {     return false; }^107^^^^^102^121^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return false;^108^^^^^102^121^return true;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = children.get ( position ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = index.get ( children ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children.size ( index ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  = null ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  + 1;child = children.get ( index ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  - 1;child = children.get ( index ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( index < children.size() )  {^104^^^^^102^121^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^while ((--(index)) >= 0) {    child = children.get(index);    if (testChild()) {        return true;    }} ;^104^105^106^107^108^102^121^if  ( !reverse )  { while  ( --index >= 0 )  { child = children.get ( index ) ; if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^104^105^106^107^108^102^121^if  ( !reverse )  { while  ( --index >= 0 )  { child = children.get ( index ) ; if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^if  ( next (  )  )  {^115^^^^^102^121^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !previous (  )  )  {^115^^^^^102^121^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !next (  )  )  {^115^^^^^102^121^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return true;^115^116^117^^^102^121^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^115^116^117^^^102^121^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( previous (  )  )  )  {     return false; }^115^^^^^102^121^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^115^^^^^102^121^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( next (  )  )  )  {     return false; }^115^^^^^102^121^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return false;^116^^^^^102^121^return true;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^for  ( ; index <= children.size (  ) ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() + 3 ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^for  ( ; position < children.size (  ) ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^for  ( ; children < index.size (  ) ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^for  ( ; index < children .indexOf ( node )  ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = children.get ( position ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = index.get ( children ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children.size ( index ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  =  child ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  + 1;child = children.get ( index ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  - 1;child = children.get ( index ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child = children.size ( position ) ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() + 0 ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^113^114^115^116^117^102^121^for  ( ; index < children.size (  ) ; index++ )  { child = children.get ( index ) ; if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^while  ( --index >= index )  {^105^^^^^102^121^while  ( --index >= 0 )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children .indexOf ( child )  ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() - 8 ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^for  ( ; index < children .indexOf ( child )  ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children .indexOf ( child )  ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child = children .indexOf ( node )  ;^114^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  =  child ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child = children.size ( position ) ;^106^^^^^102^121^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() - 4 ; index++ )  {^113^^^^^102^121^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return true;^120^^^^^102^121^return false;^[CLASS] JDOMNodeIterator  [METHOD] previous [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( child != null )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.indexOf(child) + 1 )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( index < children.size() )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( position == 1 )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.size() - 1 )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.indexOf(child) - 1 )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( index >= 0 )  {^125^^^^^110^140^if  ( !reverse )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^if ((position) == 1) {    index = 0;    if ((child) != null) {        index = (children.indexOf(child)) + 1;    }}else {    (index)++;}; for (; (index) < (children.size()); (index)++) {    child = children.get(index);    if (testChild()) {        return true;    }}; return false;^125^126^127^128^129^110^140^if  ( !reverse )  { if  ( position == 1 )  { index = 0; if  ( child != null )  { index = children.indexOf ( child )  + 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^125^126^127^128^129^110^140^if  ( !reverse )  { if  ( position == 1 )  { index = 0; if  ( child != null )  { index = children.indexOf ( child )  + 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( position >= 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == 0 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == index )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == position )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^if  ( index == 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.size() - 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( child != null )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.indexOf(child) - 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( position == 2 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^index = (children.size()) - 1; if ((child) != null) {    index = (children.indexOf(child)) - 1;};^144^145^146^147^148^129^159^if  ( position == 1 )  { index = children.size (  )  - 1; if  ( child != null )  { index = children.indexOf ( child )  - 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^144^145^146^147^148^129^159^if  ( position == 1 )  { index = children.size (  )  - 1; if  ( child != null )  { index = children.indexOf ( child )  - 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( child == null )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^if  ( node != null )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.indexOf(child) - 1 )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child != false )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( startWith != null )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^index = (children.indexOf(child)) - 1;^146^147^148^^^131^161^if  ( child != null )  { index = children.indexOf ( child )  - 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^146^147^148^^^131^161^if  ( child != null )  { index = children.indexOf ( child )  - 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( child )  != null )  {     index =  ( children.indexOf ( child )  )  + 1; }^146^^^^^131^161^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   >=  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.indexOf ( child )  - index;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^index = noderen.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^index = child.indexOf ( children )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^index = childrenren.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children.size ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  - 2;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  + 1;index = children.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.size (  )  - 1;index = children.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^child = children.get ( index ) ;index = children.indexOf ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( child )  != null )  {     index =  ( children.indexOf ( child )  )  + 1; }^147^^^^^132^162^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( child )  != null )  {     index =  ( children.indexOf ( child )  )  - 1; }^147^^^^^132^162^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children .get ( index )   - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = noderen.size ( child )  - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.size (  )   &  1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size (  )  - position;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() + 9  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.size (  )  - 0 ;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  + 1;index = children.size (  )  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  - 1;index = children.size (  )  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   &&  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.indexOf ( child )  ;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  - 1L;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() - 5  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children .get ( position )   - 1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   >>  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  - 4;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^if  ( next (  )  )  {^155^^^^^140^170^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !previous (  )  )  {^155^^^^^140^170^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !next (  )  )  {^155^^^^^140^170^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return true;^155^156^157^^^140^170^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^155^156^157^^^140^170^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( previous (  )  )  )  {     return false; }^155^^^^^140^170^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^155^^^^^140^170^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( next (  )  )  )  {     return false; }^155^^^^^140^170^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return false;^156^^^^^141^171^return true;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^for  ( ; index < 0; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index >= position; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^for  ( ; position >= 0; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = children.get ( position ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = index.get ( children ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children.size ( index ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  =  child ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  + 1;child = children.get ( index ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  - 1;child = children.get ( index ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.size (  )   ||  1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() + 2  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   ^  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.indexOf ( child )  - position;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  - 1 + 4;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children .indexOf ( child )  ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return true;^159^^^^^144^174^return false;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() + 5  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children .indexOf ( child )   - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children .indexOf ( node )  ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( position <= 1 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position ==  )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == index )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^if  ( index == 1 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( child != null )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.indexOf(child) + 1 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( position == 2 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^index = 0; if ((child) != null) {    index = (children.indexOf(child)) + 1;};^126^127^128^129^130^111^141^if  ( position == 1 )  { index = 0; if  ( child != null )  { index = children.indexOf ( child )  + 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^126^127^128^129^130^111^141^if  ( position == 1 )  { index = 0; if  ( child != null )  { index = children.indexOf ( child )  + 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( position )  == 1 )  {     index =  ( children.size (  )  )  - 1;     if  (  ( child )  != null )  {         index =  ( children.indexOf ( child )  )  - 1;     } }else {      ( index ) --; }^126^^^^^111^141^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( child == null )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^if  ( node != null )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P6_Replace_Expression]^if  ( children.indexOf(child) + 1 )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child != this )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( startWith != null )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^index = (children.indexOf(child)) + 1;^128^129^130^^^113^143^if  ( child != null )  { index = children.indexOf ( child )  + 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^128^129^130^^^113^143^if  ( child != null )  { index = children.indexOf ( child )  + 1; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( child )  != null )  {     index =  ( children.indexOf ( child )  )  - 1; }^128^^^^^113^143^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )  |  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.indexOf ( child )  + position;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^index = noderen.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^index = child.indexOf ( children )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^index = childrenren.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children.size ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children .get ( position )   + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 1 - 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.size (  )  - 1;index = children.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  - 1;index = children.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^child = children.get ( index ) ;index = children.indexOf ( child )  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( child )  != null )  {     index =  ( children.indexOf ( child )  )  + 1; }^129^^^^^114^144^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  (  ( child )  != null )  {     index =  ( children.indexOf ( child )  )  - 1; }^129^^^^^114^144^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = -6;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = 4;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )  !=  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 1 % 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = noderen .get ( position )   + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child != false )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )  ^  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.indexOf ( child )  + index;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^index = children .get ( index )   + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 4;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^if  ( next (  )  )  {^137^^^^^122^152^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !previous (  )  )  {^137^^^^^122^152^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P9_Replace_Statement]^if  ( !next (  )  )  {^137^^^^^122^152^if  ( testChild (  )  )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P15_Unwrap_Block]^return true;^137^138^139^^^122^152^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P16_Remove_Block]^^137^138^139^^^122^152^if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( previous (  )  )  )  {     return false; }^137^^^^^122^152^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^137^^^^^122^152^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P13_Insert_Block]^if  ( ! ( next (  )  )  )  {     return false; }^137^^^^^122^152^[Delete]^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return false;^138^^^^^123^153^return true;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^for  ( ; index > children.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() - 1 ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^for  ( ; position < children.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^for  ( ; children < index.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^for  ( ; index < children .indexOf ( child )  ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^for  ( ; position < children .indexOf ( node )  ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = children.get ( position ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^child = index.get ( children ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children.size ( index ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  =  child ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  + 1;child = children.get ( index ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P11_Insert_Donor_Statement]^index = children.indexOf ( child )  - 1;child = children.get ( index ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child = children.size ( position ) ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = position;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = 2;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )  ||  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.indexOf ( child )  ;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 2;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  = null ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^return true;^141^^^^^126^156^return false;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() + 9 ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^135^136^137^138^139^120^150^for  ( ; index < children.size (  ) ; index++ )  { child = children.get ( index ) ; if  ( testChild (  )  )  { return true; }^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children .indexOf ( child )  ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( position >= 1 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == 4 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == -2 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( position == 0 )  {^126^^^^^111^141^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 1 - 3;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = 3;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 3;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child != true )  {^128^^^^^113^143^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )  >=  + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  + 1L;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^if  ( position != 1 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == -7 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^if  ( position == -8 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( position == 1 % 2 )  {^144^^^^^129^159^if  ( position == 1 )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child != true )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   >  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children.indexOf ( child )  - 0;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() - 1  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   <<  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() - 6  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = children .indexOf ( node )   - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^if  ( child != this )  {^146^^^^^131^161^if  ( child != null )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^for  ( ; index <= children.size (  ) ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index < children.size() - 8 ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^for  ( ; index < children .indexOf ( node )  ; index++ )  {^135^^^^^120^150^for  ( ; index < children.size (  ) ; index++ )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P7_Replace_Invocation]^child = children .indexOf ( node )  ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^for  ( ; index > 0; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^for  ( ; index >= -7; index-- )  {^153^^^^^138^168^for  ( ; index >= 0; index-- )  {^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = 8;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^index = 0 * 0;^127^^^^^112^142^index = 0;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   instanceof   + 1;^129^^^^^114^144^index = children.indexOf ( child )  + 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child ;^136^^^^^121^151^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size (  )  ;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P3_Replace_Literal]^index = children.size() - 3  - 1;^145^^^^^130^160^index = children.size (  )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P2_Replace_Operator]^index = children.indexOf ( child )   !=  1;^147^^^^^132^162^index = children.indexOf ( child )  - 1;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child  = null ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^child = children.size ( position ) ;^154^^^^^139^169^child = children.get ( index ) ;^[CLASS] JDOMNodeIterator  [METHOD] next [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode ( parent, node, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode (  child, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode ( parent,  nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode ( parent, child ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode ( nodeTest, child, parent ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode ( parent, nodeTest, child ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P8_Replace_Mix]^return JDOMNodePointer.testNode ( startWith, child, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P5_Replace_Variable]^return JDOMNodePointer.testNode ( child, parent, nodeTest ) ;^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
[P14_Delete_Statement]^^164^^^^^163^165^return JDOMNodePointer.testNode ( parent, child, nodeTest ) ;^[CLASS] JDOMNodeIterator  [METHOD] testChild [RETURN_TYPE] boolean   [VARIABLES] boolean  reverse  List  children  Object  child  node  NodePointer  parent  startWith  NodeTest  nodeTest  int  index  position  
