[P3_Replace_Literal]^private boolean setStarted = true;^35^^^^^30^40^private boolean setStarted = false;^[CLASS] PrecedingOrFollowingContext   [VARIABLES] 
[P8_Replace_Mix]^private boolean setStarted  = null ;^35^^^^^30^40^private boolean setStarted = false;^[CLASS] PrecedingOrFollowingContext   [VARIABLES] 
[P3_Replace_Literal]^private boolean started = true;^36^^^^^31^41^private boolean started = false;^[CLASS] PrecedingOrFollowingContext   [VARIABLES] 
[P14_Delete_Statement]^^48^49^^^^43^51^super ( parentContext ) ; this.nodeTest = nodeTest;^[CLASS] PrecedingOrFollowingContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean)   EvalContext parentContext NodeTest nodeTest boolean reverse [VARIABLES] EvalContext  parentContext  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^this.nodeTest =  null;^49^^^^^43^51^this.nodeTest = nodeTest;^[CLASS] PrecedingOrFollowingContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean)   EvalContext parentContext NodeTest nodeTest boolean reverse [VARIABLES] EvalContext  parentContext  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^this.reverse = reverse;this.nodeTest = nodeTest;^49^^^^^43^51^this.nodeTest = nodeTest;^[CLASS] PrecedingOrFollowingContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean)   EvalContext parentContext NodeTest nodeTest boolean reverse [VARIABLES] EvalContext  parentContext  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^this.reverse = started;^50^^^^^43^51^this.reverse = reverse;^[CLASS] PrecedingOrFollowingContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean)   EvalContext parentContext NodeTest nodeTest boolean reverse [VARIABLES] EvalContext  parentContext  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^this.nodeTest = nodeTest;this.reverse = reverse;^50^^^^^43^51^this.reverse = reverse;^[CLASS] PrecedingOrFollowingContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean)   EvalContext parentContext NodeTest nodeTest boolean reverse [VARIABLES] EvalContext  parentContext  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^return currentRootLocation;^54^^^^^53^55^return currentNodePointer;^[CLASS] PrecedingOrFollowingContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return reverse ? -3 : 3;^58^^^^^57^59^return reverse ? -1 : 1;^[CLASS] PrecedingOrFollowingContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return reverse ? --7 : -7;^58^^^^^57^59^return reverse ? -1 : 1;^[CLASS] PrecedingOrFollowingContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^return started ? -1 : 1;^58^^^^^57^59^return reverse ? -1 : 1;^[CLASS] PrecedingOrFollowingContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^return reverse ? -0 : 0;^58^^^^^57^59^return reverse ? -1 : 1;^[CLASS] PrecedingOrFollowingContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^62^^^^^61^65^super.reset (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^reset (  ) ;super.reset (  ) ;^62^^^^^61^65^super.reset (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^stack  =  stack ;^63^^^^^61^65^stack = new Stack (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^setStarted = true;^64^^^^^61^65^setStarted = false;^[CLASS] PrecedingOrFollowingContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^setStarted = true;setStarted = false;^64^^^^^61^65^setStarted = false;^[CLASS] PrecedingOrFollowingContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( position <= this.position )  {^68^^^^^67^78^if  ( position < this.position )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P15_Unwrap_Block]^reset();^68^69^70^^^67^78^if  ( position < this.position )  { reset (  ) ; }^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P16_Remove_Block]^^68^69^70^^^67^78^if  ( position < this.position )  { reset (  ) ; }^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P7_Replace_Invocation]^nextNode (  ) ;^69^^^^^67^78^reset (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P14_Delete_Statement]^^69^^^^^67^78^reset (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^super.reset (  ) ;reset (  ) ;^69^^^^^67^78^reset (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P2_Replace_Operator]^while  ( this.position == position )  {^72^^^^^67^78^while  ( this.position < position )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( !reset (  )  )  {^73^^^^^67^78^if  ( !nextNode (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P15_Unwrap_Block]^return false;^73^74^75^^^67^78^if  ( !nextNode (  )  )  { return false; }^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P16_Remove_Block]^^73^74^75^^^67^78^if  ( !nextNode (  )  )  { return false; }^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P3_Replace_Literal]^return true;^74^^^^^67^78^return false;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P3_Replace_Literal]^return false;^77^^^^^67^78^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  NodeTest  nodeTest  int  position  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( !started )  {^81^^^^^66^96^if  ( !setStarted )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( !reverse )  {^81^^^^^66^96^if  ( !setStarted )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( parent == null )  {^85^^^^^70^100^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent != this )  {^85^^^^^70^100^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P15_Unwrap_Block]^stack.push(parent.childIterator(null, reverse, currentRootLocation));^85^86^87^88^89^70^100^if  ( parent != null )  {  stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P16_Remove_Block]^^85^86^87^88^89^70^100^if  ( parent != null )  {  stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentNodePointer.childIterator ( null, reverse, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, started, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, reverse, currentNodePointer )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null,  currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, reverse )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentRootLocation.childIterator ( null, reverse, parent )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( reverse.childIterator ( null, parent, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^parent.childIterator ( null, reverse, currentRootLocation )  ) ;stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, started, currentRootLocation )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, reverse, currentNodePointer )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null,  currentRootLocation )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, reverse )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, currentRootLocation, reverse )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;parent.childIterator ( null, reverse, currentRootLocation )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^setStarted = false;^82^^^^^67^97^setStarted = true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^setStarted = false;setStarted = true;^82^^^^^67^97^setStarted = true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentRootLocation ;^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentNodePointer = it.getNodePointer (  ) ;currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentRootLocation = currentRootLocation.getParent (  ) ;currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^NodePointer parent = currentNodePointer.getParent (  ) ;^84^^^^^69^99^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^NodePointer parent = currentRootLocation.isRoot (  ) ;^84^^^^^69^99^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^currentRootLocation = 3.getCurrentNodePointer (  ) ;^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentRootLocation = parentContext .getCurrentNodePointer (  )  ;^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^83^84^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ; NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^NodePointer parent = parent.getParent (  ) ;^84^^^^^69^99^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^84^^^^^69^99^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack .peek (  )  ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( currentNodePointer != null )  {^85^^^^^70^100^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, currentRootLocation, reverse )  ) ;^87^88^^^^72^102^stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, reverse, parent )  ) ;^88^^^^^73^103^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentRootLocation  =  currentRootLocation ;^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^83^^^^^68^98^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^while  ( false )  {^92^^^^^77^107^while  ( true )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( getCurrentPosition (  )  + 1 )  {^112^^^^^97^127^if  ( !reverse )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( it.getPosition (  )  + 1 )  {^112^^^^^97^127^if  ( !reverse )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( reverse )  {^112^^^^^97^127^if  ( !reverse )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( !setStarted )  {^112^^^^^97^127^if  ( !reverse )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   ==  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  >>  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ^  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^if  ( it.setPosition ( it.getPosition (  )   )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( getCurrentPosition (  )  + 1 )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 1 << 2 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P13_Insert_Block]^if  ( it.setPosition (  (  ( it.getPosition (  )  )  + 1 )  )  )  {     currentNodePointer = it.getNodePointer (  ) ;     if  ( ! ( currentNodePointer.isLeaf (  )  )  )  {         stack.push ( currentNodePointer.childIterator ( null, reverse, null )  ) ;     }     if  ( currentNodePointer.testNode ( nodeTest )  )  {         super.setPosition (  (  ( getCurrentPosition (  )  )  + 1 )  ) ;         return true;     } }else {     stack.pop (  ) ; }^136^^^^^121^151^[Delete]^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( stack.isEmpty (  )  )  {^152^^^^^136^160^if  ( !stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentNodePointer.getParent ( nodeTest )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( !currentNodePointer.isLeaf (  )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P15_Unwrap_Block]^super.setPosition(((getCurrentPosition()) + 1)); return true;^155^156^157^158^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P16_Remove_Block]^^155^156^157^158^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return false;^157^^^^^136^160^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super.setPosition ( reset (  )  + 1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; }^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^it =  ( PropertyIterator )  nameStack.peek (  ) ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^it =  ( PropertyIterator )  stack.pop (  ) ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it  =  it ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentNodePointer =  null.getNodePointer (  ) ;^154^^^^^136^160^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;currentNodePointer = it.getNodePointer (  ) ;^154^^^^^136^160^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( currentNodePointer.testNode ( nodeTest )  )  { currentNodePointer = it.getNodePointer (  ) ; }^154^^^^^136^160^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it =  ( PropertyIterator )  nameStack.pop (  ) ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^153^154^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ; currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentNodePointer = it .getPosition (  )  ;^154^^^^^136^160^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^154^^^^^136^160^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( parent.testNode ( nodeTest )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^156^157^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentNodePointer .isRoot (  )   )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^156^157^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack.peek (  ) ;^151^^^^^136^160^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^151^^^^^136^160^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( !currentNodePointer.isRoot (  )  )  {^138^^^^^123^153^if  ( !currentNodePointer.isLeaf (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( currentNodePointer.testNode ( nodeTest )  )  {^138^^^^^123^153^if  ( !currentNodePointer.isLeaf (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^else if  ( currentNodePointer.getParent ( nodeTest )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^else if  ( currentNodePointer .isRoot (  )   )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( currentNodePointer.testNode ( nodeTest )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P15_Unwrap_Block]^super.setPosition(((getCurrentPosition()) + 1)); return true;^145^146^147^148^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P16_Remove_Block]^^145^146^147^148^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return false;^147^^^^^132^162^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super.setPosition ( reset (  )  + 1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; }^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^else if  ( parent.testNode ( nodeTest )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^else if  ( nodeTest.testNode ( currentNodePointer )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^146^147^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^146^147^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, reverse,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentNodePointer.childIterator ( null, started,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentNodePointer.childIterator ( null,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( reverse.childIterator ( null, currentNodePointer,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P13_Insert_Block]^if  ( ! ( currentNodePointer.isLeaf (  )  )  )  {     stack.push ( currentNodePointer.childIterator ( null, reverse, null )  ) ; }^139^^^^^124^154^[Delete]^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^currentNodePointer.childIterator ( null, started, null )  ) ;^140^141^142^143^^125^155^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^currentNodePointer.childIterator ( null,  null )  ) ;^140^141^142^143^^125^155^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^else {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentNodePointer =  null.getNodePointer (  ) ;^137^^^^^122^152^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;currentNodePointer = it.getNodePointer (  ) ;^137^^^^^122^152^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( currentNodePointer.testNode ( nodeTest )  )  { currentNodePointer = it.getNodePointer (  ) ; }^137^^^^^122^152^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentNodePointer = it .getPosition (  )  ;^137^^^^^122^152^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^137^^^^^122^152^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^else if  ( parent.getParent ( nodeTest )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( currentNodePointer.getParent ( nodeTest )  )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^else if  ( parent .isRoot (  )   )  {^145^^^^^130^160^else if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( stack.isEmpty (  )  )  {^152^^^^^137^167^if  ( !stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentNodePointer.getParent ( nodeTest )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentNodePointer .isRoot (  )   )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( !currentNodePointer.isLeaf (  )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P15_Unwrap_Block]^super.setPosition(((getCurrentPosition()) + 1)); return true;^155^156^157^158^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P16_Remove_Block]^^155^156^157^158^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return false;^157^^^^^142^172^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super.setPosition ( reset (  )  + 1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^156^157^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; }^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^it =  ( PropertyIterator )  nameStack.peek (  ) ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^it =  ( PropertyIterator )  stack.pop (  ) ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it  =  it ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentNodePointer = it .getPosition (  )  ;^154^^^^^139^169^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentNodePointer =  null.getNodePointer (  ) ;^154^^^^^139^169^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;currentNodePointer = it.getNodePointer (  ) ;^154^^^^^139^169^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( currentNodePointer.testNode ( nodeTest )  )  { currentNodePointer = it.getNodePointer (  ) ; }^154^^^^^139^169^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^153^154^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ; currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^154^^^^^139^169^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( parent.testNode ( nodeTest )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^156^157^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super .setPosition ( 2 )  ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^NodeIterator it =  ( NodeIterator )  stack.pop (  ) ;^135^^^^^120^150^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^NodeIterator it =  ( NodeIterator )  nameStack.pop (  ) ;^135^^^^^120^150^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^NodeIterator it =  ( NodeIterator )  nameStack.peek (  ) ;^135^^^^^120^150^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^135^^^^^120^150^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   >>  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack.peek (  ) ;^151^^^^^136^166^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^151^^^^^136^166^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^it =  ( PropertyIterator )  stack .push ( null )  ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it =  ( PropertyIterator )  nameStack.pop (  ) ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )    instanceof   1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  >>  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^if  ( it.setPosition ( it.getPosition (  )   )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( getCurrentPosition (  )  + 1 )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 1 - 0 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack.peek (  ) ;^131^^^^^114^132^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^131^^^^^114^132^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( !currentNodePointer.isRoot (  )  )  {^116^^^^^101^131^if  ( !currentNodePointer.isLeaf (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( currentNodePointer.testNode ( nodeTest )  )  {^116^^^^^101^131^if  ( !currentNodePointer.isLeaf (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, reverse,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentNodePointer.childIterator ( null, started,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentNodePointer.childIterator ( null,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack .peek (  )  ( currentNodePointer.childIterator ( null, reverse,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P13_Insert_Block]^if  ( ! ( currentNodePointer.isLeaf (  )  )  )  {     stack.push ( currentNodePointer.childIterator ( null, reverse, null )  ) ; }^117^^^^^102^132^[Delete]^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^currentNodePointer.childIterator ( null, started, null )  ) ;^118^119^120^121^^103^133^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^currentNodePointer.childIterator ( null,  null )  ) ;^118^119^120^121^^103^133^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentNodePointer.getParent ( nodeTest )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( !currentNodePointer.isLeaf (  )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P15_Unwrap_Block]^super.setPosition(((getCurrentPosition()) + 1)); return true;^123^124^125^126^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P16_Remove_Block]^^123^124^125^126^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return false;^125^^^^^110^140^return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )   ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super.setPosition ( reset (  )  + 1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; }^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^124^125^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentNodePointer =  null.getNodePointer (  ) ;^115^^^^^100^130^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;currentNodePointer = it.getNodePointer (  ) ;^115^^^^^100^130^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( currentNodePointer.testNode ( nodeTest )  )  { currentNodePointer = it.getNodePointer (  ) ; }^115^^^^^100^130^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentNodePointer = it .getPosition (  )  ;^115^^^^^100^130^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^115^^^^^100^130^currentNodePointer = it.getNodePointer (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( parent.testNode ( nodeTest )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( nodeTest.testNode ( currentNodePointer )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  { super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true; }^124^125^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ; return true;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( reverse.childIterator ( null, currentNodePointer,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^stack .peek (  )  ( currentNodePointer.childIterator ( null, started,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^super .setPosition ( null )  ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^NodeIterator it =  ( NodeIterator )  nameStack.peek (  ) ;^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^NodeIterator it =  ( NodeIterator )  stack.pop (  ) ;^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   >=  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack.peek (  ) ;^131^^^^^116^146^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^131^^^^^116^146^stack.pop (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   &&  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if   instanceof   ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 4 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentNodePointer .childIterator ( 1 , reverse , currentRootLocation )   ) ;^118^119^120^121^^103^133^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentNodePointer .isRoot (  )   )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent .isRoot (  )   )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   >=  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  >=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ||  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^if  ( it.setPosition ( it.getPosition (  )  + 2 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^if  ( it.setPosition ( it.getPosition (  )  + 0 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^if  ( it.setPosition ( it.getPosition (  )  +  )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 4 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super .setPosition ( this )  ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^super .setPosition ( null )  ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack .peek (  )  ( currentNodePointer.childIterator ( null, reverse,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it  = null ;^153^^^^^138^168^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^NodeIterator it =  ( NodeIterator )  nameStack.pop (  ) ;^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentNodePointer .childIterator ( 4 , started , currentRootLocation )   ) ;^118^119^120^121^^103^133^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   ||  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <=  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( nameStack.isEmpty (  )  )  {^93^^^^^78^108^if  ( stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( currentRootLocation == null )  {^93^^^^^78^108^if  ( stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( parent != null )  {^93^^^^^78^108^if  ( stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P9_Replace_Statement]^if  ( !stack.isEmpty (  )  )  {^93^^^^^78^108^if  ( stack.isEmpty (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( currentRootLocation == null && currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( currentRootLocation != null || currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( parent == null || currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  ( currentRootLocation == null ) {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P6_Replace_Expression]^if  (  currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( currentRootLocation == null || currentRootLocation.isLeaf (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( currentRootLocation == this ) {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P15_Unwrap_Block]^break;^96^97^98^99^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  { break; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P16_Remove_Block]^^96^97^98^99^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  { break; }^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( parent == null )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( currentNodePointer != null )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent != this )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentRootLocation.childIterator ( null, reverse,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null, started,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( parent.childIterator ( null,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P13_Insert_Block]^if  ( parent != null )  {     stack.push ( parent.childIterator ( null, reverse, currentRootLocation )  ) ; }^103^^^^^88^118^[Delete]^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, started, currentRootLocation )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, reverse, parent )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null,  currentRootLocation )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, reverse )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^parent.childIterator ( null, currentRootLocation, reverse )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentRootLocation = currentRootLocation.isRoot (  ) ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentRootLocation ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P11_Insert_Donor_Statement]^currentRootLocation = parentContext.getCurrentNodePointer (  ) ;currentRootLocation = currentRootLocation.getParent (  ) ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P12_Insert_Condition]^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  { currentRootLocation = currentRootLocation.getParent (  ) ; }^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P13_Insert_Block]^if  (  (  ( currentRootLocation )  == null )  ||  ( currentRootLocation.isRoot (  )  )  )  {     break; }^94^^^^^79^109^[Delete]^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^NodePointer parent = currentNodePointer.getParent (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^NodePointer parent = currentRootLocation.isRoot (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentRootLocation = parent.isRoot (  ) ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^|| parent.isRoot (  )  )  {^97^^^^^82^112^|| currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^|| currentRootLocation.isLeaf (  )  )  {^97^^^^^82^112^|| currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^97^98^^^^82^112^|| currentRootLocation.isRoot (  )  )  { break;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( currentNodePointer.childIterator ( null, reverse,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^stack.push ( reverse.childIterator ( null, parent,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack .peek (  )  ( parent.childIterator ( null, reverse,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^parent.childIterator ( null, reverse, currentNodePointer )  ) ;^104^105^106^107^^89^119^parent.childIterator ( null, reverse, currentRootLocation )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( currentRootLocation == true || currentRootLocation.isRoot (  )  )  {^96^97^^^^81^111^if  ( currentRootLocation == null || currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^stack .peek (  )  ( parent.childIterator ( null, started,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  &  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^super .setPosition ( 0 )  ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^stack .peek (  )  ( currentNodePointer.childIterator ( null, started,^139^140^141^142^^124^154^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ^  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  + null ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^super .setPosition ( null )  ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super .setPosition ( 0 )  ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   |  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( it.setPosition ( it .setPosition ( null )   + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  <<  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 2 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^currentNodePointer .childIterator ( null , reverse , currentNodePointer )   ) ;^118^119^120^121^^103^133^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  + this ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >=  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^NodeIterator it =  ( NodeIterator )  stack .push ( null )  ;^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent.getParent ( nodeTest )  )  {^123^^^^^108^138^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ||  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   >  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  <=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 1L )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super .setPosition ( 4 )  ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )    instanceof   1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  >  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent.getParent ( nodeTest )  )  {^155^^^^^136^160^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super .setPosition ( 4 )  ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   !=  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^super .setPosition ( 1 )  ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^currentRootLocation = parent.getParent (  ) ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^|| parent.isLeaf (  )  )  {^97^^^^^82^112^|| currentRootLocation.isRoot (  )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^NodePointer parent = parent.getParent (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P14_Delete_Statement]^^111^112^113^^^96^126^while  ( !stack.isEmpty (  )  )  { if  ( !reverse )  { NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it .setPosition ( null )   )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentNodePointer .childIterator ( 3 , reverse , parent )   ) ;^140^141^142^143^^125^155^currentNodePointer.childIterator ( null, reverse, null )  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   <<  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  &&  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  +  ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^super .setPosition ( 0 )  ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   >>  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   &  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it .setPosition ( 0 )   + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   ||  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^if  ( it.setPosition ( it .setPosition ( 1 )   + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 1 >> 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )    instanceof   1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^super .setPosition ( 0 )  ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   ==  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ^  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 0 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 1L )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   |  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   &&  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   ==  1 ) ;^156^^^^^136^160^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^super.setPosition ( getCurrentPosition (  )   <<  1 ) ;^156^^^^^141^171^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent.getParent ( nodeTest )  )  {^155^^^^^140^170^if  ( currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^NodeIterator it =  ( NodeIterator )  stack .push ( this )  ;^113^^^^^98^128^NodeIterator it =  ( NodeIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   &  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack.push ( currentNodePointer .childIterator ( 0 , started , currentNodePointer )  ( null, reverse,^117^118^119^120^^102^132^stack.push ( currentNodePointer.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  + null ) ;^124^^^^^109^139^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   !=  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P5_Replace_Variable]^if  ( currentRootLocation != null )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( currentNodePointer != true )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^NodePointer parent = currentNodePointer.isRoot (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( parent != true )  {^102^^^^^87^117^if  ( parent != null )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P7_Replace_Invocation]^stack.push ( parent .childIterator ( this , setStarted , currentRootLocation )  ( null, reverse,^103^104^105^106^^88^118^stack.push ( parent.childIterator ( null, reverse,^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   &&  1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^it  = null ;^153^^^^^136^160^it =  ( PropertyIterator )  stack.peek (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  + 4 ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  >=  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 3 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  ( it.setPosition ( it.getPosition (  )   <  1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P2_Replace_Operator]^if  &&  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^114^^^^^99^129^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it.getPosition (  )  + 1 - 0 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^super.setPosition ( getCurrentPosition (  )  + this ) ;^146^^^^^131^161^super.setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^currentRootLocation  =  currentRootLocation ;^94^^^^^79^109^currentRootLocation = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^NodePointer parent = parent.isRoot (  ) ;^101^^^^^86^116^NodePointer parent = currentRootLocation.getParent (  ) ;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P8_Replace_Mix]^if  ( it.setPosition ( it .setPosition ( 1 )   + 1 )  )  {^136^^^^^121^151^if  ( it.setPosition ( it.getPosition (  )  + 1 )  )  {^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
[P3_Replace_Literal]^return true;^164^^^^^149^179^return false;^[CLASS] PrecedingOrFollowingContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  it  boolean  reverse  setStarted  started  NodePointer  currentNodePointer  currentRootLocation  parent  NodeTest  nodeTest  Stack  nameStack  stack  
