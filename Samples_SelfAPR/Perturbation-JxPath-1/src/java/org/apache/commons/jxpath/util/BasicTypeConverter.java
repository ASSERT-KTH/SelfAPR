[P1_Replace_Type]^private  Set  values;^437^^^^^432^442^private List values;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [VARIABLES] 
[P8_Replace_Mix]^private  LinkedHashSet  values;^437^^^^^432^442^private List values;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [VARIABLES] 
[P1_Replace_Type]^private  Set  pointers;^438^^^^^433^443^private List pointers;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer   [VARIABLES] 
[P5_Replace_Variable]^this.values = pointers;^441^^^^^440^442^this.values = values;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] <init> [RETURN_TYPE] List)   List values [VARIABLES] List  pointers  values  Object  bean  boolean  
[P5_Replace_Variable]^this.bean = bean;^468^^^^^467^469^this.bean = object;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] <init> [RETURN_TYPE] Object)   Object object [VARIABLES] List  pointers  values  Object  bean  object  boolean  
[P8_Replace_Mix]^this.bean =  null;^468^^^^^467^469^this.bean = object;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] <init> [RETURN_TYPE] Object)   Object object [VARIABLES] List  pointers  values  Object  bean  object  boolean  
[P2_Replace_Operator]^if  ( object != null )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( value == null )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( value == true )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( pointers == null )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( bean == null )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( value != null )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( converter != null )  {^49^^^^^34^64^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^49^50^51^^^34^64^if  ( object == null )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^49^50^51^^^34^64^if  ( object == null )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^49^^^^^34^64^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^50^^^^^35^65^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType != Object.class )  {^53^^^^^38^68^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == Object.fromType )  {^53^^^^^38^68^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^53^54^55^^^38^68^if  ( toType == Object.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^53^54^55^^^38^68^if  ( toType == Object.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new HashSet (  ) ; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new ArrayList (  ) ; }^53^^^^^38^68^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^54^^^^^39^69^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Class fromType = value.getClass (  ) ;^57^^^^^42^72^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Class fromType = object.equals (  ) ;^57^^^^^42^72^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( toType == Object.class )  { Class fromType = object.getClass (  ) ; }^57^^^^^42^72^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Class fromType = object .equals ( value )  ;^57^^^^^42^72^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^57^^^^^42^72^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( cType.equals ( toType )  )  {^58^^^^^43^73^if  ( fromType.equals ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType.equals ( cType )  )  {^58^^^^^43^73^if  ( fromType.equals ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType.equals ( fromType )  )  {^58^^^^^43^73^if  ( fromType.equals ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( fromType.isArray (  )  )  {^58^^^^^43^73^if  ( fromType.equals ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^58^59^60^^^43^73^if  ( fromType.equals ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^58^59^60^^^43^73^if  ( fromType.equals ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( ! ( canConvert ( value, cType )  )  )  {     return false; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^58^^^^^43^73^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^59^^^^^44^74^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( cType.isAssignableFrom ( fromType )  )  {^62^^^^^47^77^if  ( toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType.isAssignableFrom ( cType )  )  {^62^^^^^47^77^if  ( toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isAssignableFrom ( toType )  )  {^62^^^^^47^77^if  ( toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( toType .isInterface (  )   )  {^62^^^^^47^77^if  ( toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^62^63^64^^^47^77^if  ( toType.isAssignableFrom ( fromType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^62^63^64^^^47^77^if  ( toType.isAssignableFrom ( fromType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( fromType.equals ( toType )  )  ||  ( toType.isAssignableFrom ( fromType )  )  )  {     return object; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^63^^^^^48^78^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^62^^^^^47^77^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType != String.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType == String.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == String.fromType )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == Object.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == double.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( type == Set.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == byte.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == float.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == int.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == short.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == char.class )  {^66^^^^^51^81^if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^66^67^68^^^51^81^if  ( toType == String.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^66^67^68^^^51^81^if  ( toType == String.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new HashSet (  ) ; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new ArrayList (  ) ; }^66^^^^^51^81^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^67^^^^^52^82^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^while  ( it .next (  )   )  {^133^^^^^118^148^while  ( it.hasNext (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( object, cType )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( value, toType )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert (  cType )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( value )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( cType, value )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( !convert ( value, cType )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( !convert ( value, toType )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return false;^135^136^137^^^120^150^if  ( !canConvert ( value, cType )  )  { return false; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^135^136^137^^^120^150^if  ( !canConvert ( value, cType )  )  { return false; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^135^^^^^120^150^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^135^^^^^120^150^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return true;^136^^^^^121^151^return false;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = it .hasNext (  )  ;^134^^^^^119^149^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, i ) ;Object value = it.next (  ) ;^134^^^^^119^149^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, 0 ) ;Object value = it.next (  ) ;^134^^^^^119^149^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^134^^^^^119^149^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^value = it.next (  ) ;Object value = it.next (  ) ;^134^^^^^119^149^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <=  Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  !=  Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >>  Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <<  Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ==  Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( value instanceof Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( object lengthnstanceof Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( i objectnstanceof Boolean )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType == boolean.class || isAssignableFrom(toType) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType == boolean.class )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Number )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Character )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType == char.class )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof String )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( (((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( ((((toType == class) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( (((toType == class) || (toType == class)) || (toType == class) || toType == class) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( ((toType == class) || (toType == class) || toType == class) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( (toType == class || toType == class) )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType == class )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( i < length )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( getLength(object) > 0 )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Collection )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( Collection object)).size( > 0 )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof NodeSet )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Pointer )  {^70^^^^^55^85^if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^if ((toType == (boolean.class)) || (java.lang.Number.class.isAssignableFrom(toType))) {    return true;};^70^71^72^73^74^55^85^if  ( object instanceof Boolean )  { if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^70^71^72^73^74^55^85^if  ( object instanceof Boolean )  { if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( !convert ( object, cType )  )  {^135^^^^^120^150^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else lengthf  ( object instanceof Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((toType == class) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (((toType == class) || (toType == class)) || (toType == class) || toType == class) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((toType == class) || (toType == class) || toType == class) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (toType == class || toType == class) )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( i < length )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( getLength(object) > 0 )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Collection )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( Collection object)).size( > 0 )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof NodeSet )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( value instanceof Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^if ((toType.isPrimitive()) || (java.lang.Number.class.isAssignableFrom(toType))) {    return true;};^76^77^78^79^80^61^91^else if  ( object instanceof Number )  { if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^76^77^78^79^80^61^91^else if  ( object instanceof Number )  { if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else lengthf  ( object instanceof Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((toType == class) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (((toType == class) || (toType == class)) || (toType == class) || toType == class) )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((toType == class) || (toType == class) || toType == class) )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (toType == class || toType == class) )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( i < length )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( getLength(object) > 0 )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Collection )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( Collection object)).size( > 0 )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof NodeSet )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^if (toType == (char.class)) {    return true;};^82^83^84^85^^67^97^else if  ( object instanceof Character )  { if  ( toType == char.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^82^83^84^85^^67^97^else if  ( object instanceof Character )  { if  ( toType == char.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else lengthf  ( object instanceof String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (((((toType == class) || (toType == class)) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((((toType == class) || (toType == class)) || (toType == class)) || (toType == class) || toType == class) )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (((toType == class) || (toType == class)) || (toType == class) || toType == class) )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( ((toType == class) || (toType == class) || toType == class) )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( (toType == class || toType == class) )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( i < length )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( getLength(object) > 0 )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Collection )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( Collection object)).size( > 0 )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof NodeSet )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^if (toType.isPrimitive()) {    return true;}; if ((((((((toType == (java.lang.Boolean.class)) || (toType == (java.lang.Character.class))) || (toType == (java.lang.Byte.class))) || (toType == (java.lang.Short.class))) || (toType == (java.lang.Integer.class))) || (toType == (java.lang.Long.class))) || (toType == (java.lang.Float.class))) || (toType == (java.lang.Double.class))) {    return true;};^87^88^89^90^^72^102^else if  ( object instanceof String )  { if  ( toType.isPrimitive (  )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^87^88^89^90^^72^102^else if  ( object instanceof String )  { if  ( toType.isPrimitive (  )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( toType.isArray (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else lengthf  ( fromType.isArray (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( getLength(object) > 0 )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Collection )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( Collection object)).size( > 0 )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof NodeSet )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^else if  ( fromType.isAssignableFrom (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^else if  ( fromType .isInterface (  )   )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isArray (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( Collection object)).size( > 0 )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof NodeSet )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( value instanceof Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return canConvert(((org.apache.commons.jxpath.NodeSet) (object)).getValues(), toType);^161^162^163^^^146^176^else if  ( object instanceof NodeSet )  { return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^161^162^163^^^146^176^else if  ( object instanceof NodeSet )  { return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( value instanceof Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return canConvert(((org.apache.commons.jxpath.Pointer) (object)).getValue(), toType);^164^165^166^^^149^179^else if  ( object instanceof Pointer )  { return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^164^165^166^^^149^179^else if  ( object instanceof Pointer )  { return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^164^^^^^149^179^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  (  ( Pointer )  object ) .getValue (  )  ) ;^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^165^^^^^150^180^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return canConvert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^165^^^^^150^180^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return canConvert (  (  ( Pointer )  object )  .getValues (  )  , toType ) ;^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  (  ( NodeSet )  object ) .getValues (  )  ) ;^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return canConvert (  (  ( NodeSet )  object )  .getValue (  )  , toType ) ;^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^162^^^^^147^177^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return canConvert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^162^^^^^147^177^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isArray (  )  )  {^130^^^^^115^145^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^130^^^^^115^145^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  )  )  {^130^^^^^115^145^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( Collection.class.isAssignableFrom ( fromType )  )  {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^else if  ( Collection.class .isInterface (  )   )  {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return canCreateCollection(toType);^141^142^143^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^141^142^143^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  (  (  ( Collection )  object ) .size (  )  >= 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > length )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 1 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 0  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  (  (  ( Collection )  bean ) .size (  )  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  (  (  ( Collection )  object ) .add (  )  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  (  (  ( Collection )  object ) .size (  )  > 0  )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value; if (object instanceof java.util.List) {    value = ((java.util.List) (object)).get(0);}else {    java.util.Iterator it = ((java.util.Collection) (object)).iterator();    value = it.next();}; return canConvert(value, toType);^145^146^147^148^149^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^145^146^147^148^149^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( "", fromType ) ;^157^^^^^141^159^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( "", toType ) ;^157^^^^^141^159^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( "", toType ) ; }^157^^^^^141^159^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^157^^^^^141^159^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( value instanceof List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( object instanceof NodeSet )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^value = ((java.util.List) (object)).get(0);^147^148^149^^^141^159^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^147^148^149^^^141^159^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  null.next (  ) ;^152^^^^^141^159^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ; }^151^152^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^value = it .hasNext (  )  ;^152^^^^^141^159^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^152^^^^^141^159^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;value = it.next (  ) ;^152^^^^^141^159^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( length ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { value =  (  ( List )  object ) .get ( 0 ) ; }^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^value =  (  (  Set  )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( i ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^double value =  (  ( Number )  object ) .doubleValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return new Character (  (  ( String )  object ) .charAt ( 0 )  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( object, toType ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value, fromType ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  toType ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( toType, value ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( value, toType ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( value, toType ) ; }^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^151^^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >=  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^151^152^^^^141^159^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 9 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 3  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  (  (  ( Collection )  object )  .iterator (  )   > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^value =  (  (  ArrayList  )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( object, toType ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( "", fromType ) ;^157^^^^^141^159^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canCreateCollection ( fromType ) ;^142^^^^^127^157^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return allocateCollection ( toType ) ;^142^^^^^127^157^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return allocateCollection ( fromType ) ;^142^^^^^127^157^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^142^^^^^127^157^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  (  (  ( Collection )  object ) .size (  )  >= 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > i )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > length )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 5  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  (  (  ( Collection )  bean ) .size (  )  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  (  (  ( Collection )  object ) .add (  )  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  (  (  ( Collection )  object )  .iterator (  )   > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  (  (  ( Collection )  object ) .size (  )  > 0  )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value; if (object instanceof java.util.List) {    value = ((java.util.List) (object)).get(0);}else {    java.util.Iterator it = ((java.util.Collection) (object)).iterator();    value = it.next();}; return canConvert(value, toType);^145^146^147^148^149^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^145^146^147^148^149^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( "", fromType ) ;^157^^^^^145^158^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( "", toType ) ;^157^^^^^145^158^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( "", toType ) ; }^157^^^^^145^158^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^157^^^^^145^158^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <=  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( value instanceof List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( object instanceof NodeSet )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^value = ((java.util.List) (object)).get(0);^147^148^149^^^132^162^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^147^148^149^^^132^162^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^value = it .hasNext (  )  ;^152^^^^^147^153^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  null.next (  ) ;^152^^^^^147^153^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^151^152^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^152^^^^^147^153^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;value = it.next (  ) ;^152^^^^^147^153^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 7 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { value =  (  ( List )  object ) .get ( 0 ) ; }^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^value =  (  (  Set  )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 6 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^double value =  (  ( Number )  object ) .doubleValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return new Character (  (  ( String )  object ) .charAt ( 0 )  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  null.next (  ) ;^152^^^^^137^167^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value, fromType ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  toType ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( toType, value ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( value, toType ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( value, toType ) ; }^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object )  .get ( length )  ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^151^^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ; }^151^152^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^152^^^^^137^167^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;value = it.next (  ) ;^152^^^^^137^167^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( object, toType ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ==  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( i ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^value =  (  (  ArrayList  )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -7 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -6 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( "", fromType ) ;^157^^^^^142^172^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( "", toType ) ;^157^^^^^142^172^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( "", toType ) ; }^157^^^^^142^172^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 8  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value = it .hasNext (  )  ;^152^^^^^137^167^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^157^^^^^142^172^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^139^^^^^124^154^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Class cType = fromType.getComponentType (  ) ;^131^^^^^116^146^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Class cType = toType.isAssignableFrom (  ) ;^131^^^^^116^146^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^131^^^^^116^146^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^132^^^^^117^147^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^133^134^^^^118^148^while  ( it.hasNext (  )  )  { Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -3 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 4  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  &  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^value =  (  (  LinkedHashSet  )  object ) .get ( 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -7 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 8 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ==  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 2  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -5 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 1  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  &&  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^151^^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -5 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^151^152^^^^136^166^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <<  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 5 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^value =  (  (  LinkedHashSet  )  object ) .get ( 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( "", fromType ) ;^157^^^^^142^172^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Class cType = toType .getModifiers (  )  ;^131^^^^^116^146^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isInterface (  )   )  {^130^^^^^115^145^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^131^132^^^^116^146^Class cType = toType.getComponentType (  ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 4  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > i )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 4  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -8 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get (  ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( value, fromType ) ;^154^^^^^141^159^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <<  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0L ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 9  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 1  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  &  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ; }^151^152^^^^147^153^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >>  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get (  ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 8  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  (  (  ( Collection )  object ) .size (  )  < 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 9 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 2  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 3  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 9 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 7  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( "", fromType ) ;^157^^^^^145^158^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0L ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( object, toType ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >=  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return canConvert (  (  ( Pointer )  object )  .getValues (  )  , fromType ) ;^165^^^^^150^180^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Class cType = fromType .getModifiers (  )  ;^131^^^^^116^146^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  )  )  {^130^^^^^115^145^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isArray (  )  )  {^104^^^^^89^119^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( getLength(object) > 0 )  {^104^^^^^89^119^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  )  )  {^104^^^^^89^119^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else if  ( Collection.class.isAssignableFrom ( fromType )  )  {^115^^^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return canCreateCollection(toType);^115^116^117^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^115^116^117^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  { return canCreateCollection ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( Array.getLength ( object )  >= 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > i )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 9 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( Array.getLength ( bean )  > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array.newInstanceLength ( object )  > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( length )   {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value = java.lang.reflect.Array.get(object, 0); return canConvert(value, toType);^119^120^121^122^^115^126^if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^119^120^121^122^^115^126^if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( "", toType ) ;^124^^^^^115^126^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( "", fromType ) ;^124^^^^^115^126^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( "", toType ) ; }^124^^^^^115^126^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( "", fromType ) ;^124^^^^^115^126^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^124^^^^^115^126^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( object, toType ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value, fromType ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  toType ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( toType, value ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( value, toType ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( value, toType ) ; }^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 9 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( bean, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array.newInstance ( object, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length = Array.getLength ( object ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = convertStringToPrimitive ( object, toType ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, i ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, i ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( value, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array .get ( length )  ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^collection.add ( Array.get ( object, i )  ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -1 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( Array.getLength ( value )  > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^120^121^^^^115^126^Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canCreateCollection ( fromType ) ;^116^^^^^101^131^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return allocateCollection ( toType ) ;^116^^^^^101^131^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^116^^^^^101^131^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( Array.getLength ( object )  >= 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -7 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > length )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( Array.getLength ( bean )  > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array.newInstanceLength ( object )  > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( length )   {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value = java.lang.reflect.Array.get(object, 0); return canConvert(value, toType);^119^120^121^122^^104^134^if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^119^120^121^122^^104^134^if  ( Array.getLength ( object )  > 0 )  { Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( "", fromType ) ;^124^^^^^119^125^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( "", toType ) ;^124^^^^^119^125^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( "", toType ) ; }^124^^^^^119^125^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^124^^^^^119^125^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( object, toType ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value, fromType ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert (  toType ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( value ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( toType, value ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( value, toType ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( value, toType ) ; }^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, length ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( bean, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array.newInstance ( object, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length = Array.getLength ( object ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = convertStringToPrimitive ( object, toType ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, i ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -8 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( value, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^collection.add ( Array.get ( object, i )  ) ;Object value = Array.get ( object, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return canConvert ( "", fromType ) ;^124^^^^^109^139^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^return convert ( "", toType ) ;^124^^^^^109^139^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return canConvert ( "", toType ) ; }^124^^^^^109^139^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, i ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array .get ( i )  ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( Array.getLength ( value )  > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array .get ( length )  ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^120^121^^^^105^135^Object value = Array.get ( object, 0 ) ; return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( "", fromType ) ;^124^^^^^109^139^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^124^^^^^109^139^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( object, cType )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( value, toType )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert (  cType )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( value )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( !canConvert ( cType, value )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( !convert ( value, cType )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return false;^109^110^111^^^94^124^if  ( !canConvert ( value, cType )  )  { return false; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^109^110^111^^^94^124^if  ( !canConvert ( value, cType )  )  { return false; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^109^^^^^94^124^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^109^^^^^94^124^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return true;^110^^^^^95^125^return false;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^for  (  short  i = 0; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^for  ( int i = 0; i <= length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = length; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < i; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( bean, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( object, length ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get (  i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( object ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( i, object ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array.newInstance ( object, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( object, length ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^collection.add ( Array.get ( object, i )  ) ;Object value = Array.get ( object, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^int length = Array.getLength ( object ) ;Object value = Array.get ( object, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;Object value = Array.get ( object, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = convertStringToPrimitive ( object, toType ) ;Object value = Array.get ( object, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, 0 ) ;Object value = Array.get ( object, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^113^^^^^98^128^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Class cType = fromType.getComponentType (  ) ;^105^^^^^90^120^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Class cType = toType.isAssignableFrom (  ) ;^105^^^^^90^120^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Class cType = fromType .getModifiers (  )  ;^105^^^^^90^120^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^short  length = Array.getLength ( object ) ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^int length = Array.getLength ( value ) ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, i ) ;int length = Array.getLength ( object ) ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, 0 ) ;int length = Array.getLength ( object ) ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P12_Insert_Condition]^if  ( Array.getLength ( object )  > 0 )  { int length = Array.getLength ( object ) ; }^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -8; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^105^106^^^^90^120^Class cType = toType.getComponentType (  ) ; int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^Object value = Array.get ( value, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( !convert ( value, toType )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^115^^^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( value , i )   > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 * 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -3 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( bean, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 7 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( value, fromType ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -9 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object,  ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array .get ( i )  ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return allocateCollection ( fromType ) ;^116^^^^^101^131^return canCreateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > i )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -6 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( "", fromType ) ;^124^^^^^119^125^return canConvert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -2 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -1 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( object, toType ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^for  (  long  i = 0; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^for  ( int i = 0; i > length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 6; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Class cType = toType .getModifiers (  )  ;^105^^^^^90^120^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P1_Replace_Type]^long  length = Array.getLength ( object ) ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 9; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 6 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^int length = Array .get ( value , i )  ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( value, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object,  ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isInterface (  )   )  {^104^^^^^89^119^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  )  )  {^104^^^^^89^119^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^115^^^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( bean , i )   > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 << 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 2 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( Array.getLength ( object )  == 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -9 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  >  )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( object , length )   > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 3 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -6; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^Object value = Array .get ( length )  ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^int length = Array .get ( object , i )  ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 5; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^105^^^^^90^120^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^else if  ( Collection.class .isInterface (  )   )  {^115^^^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > length )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 0 / 3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, length ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( value, 0 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( bean , length )   > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 4 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 9 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 0 - 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 8 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( value, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 1  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -9 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 6  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 9  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  (  (  ( Collection )  object ) .size (  )  == 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  |  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 5 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  (  (  ( Collection )  object ) .size (  )  < 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -4 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 7  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ||  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 3  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class.isAssignableFrom ( fromType )  )  {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 3 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 6  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ||  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 5  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 7 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 0  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Class cType = fromType.isAssignableFrom (  ) ;^131^^^^^116^146^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 9  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  &&  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 6 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 8  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 9  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( value, fromType ) ;^154^^^^^139^169^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -8 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 3; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = i; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -3 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType .isInterface (  )   )  {^104^^^^^89^119^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 2  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isPrimitive (  )  )  {^88^^^^^73^103^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  )  )  {^88^^^^^73^103^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isArray (  )   )  {^88^^^^^73^103^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^88^89^90^^^73^103^if  ( toType.isPrimitive (  )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^88^89^90^^^73^103^if  ( toType.isPrimitive (  )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return convertNullToPrimitive ( toType ) ; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^88^^^^^73^103^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^89^^^^^74^104^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType == Boolean.class && toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType <= Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType < Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType >= Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType != Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == Boolean.toType || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == Boolean.fromType || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^99^^^^^91^100^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^99^^^^^84^114^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( value instanceof NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -7 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 8  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >>  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 2  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 6  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ^  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -2 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -7 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 4  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType .isInterface (  )   )  {^130^^^^^115^145^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -6 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -8 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 9 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 8 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 8 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -5 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 3  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 8 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 1 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( bean , i )   > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 % 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 7; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -7 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -4 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( object, toType ) ;^121^^^^^115^126^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 2 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( value , i )   > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0L )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return convert ( value, fromType ) ;^121^^^^^106^136^return canConvert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Class cType = fromType.isAssignableFrom (  ) ;^105^^^^^90^120^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 4 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( i )   {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -2 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 9 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( bean, 0 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^int length = Array .get ( object , length )  ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 5 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -5 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 5 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 6 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 6 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -9 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -9 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 7 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 3 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -6 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  (  (  ( Collection )  bean ) .add (  )  > 0  )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 7 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 7  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 2 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 5 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -5 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 5 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -6 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 1  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 6  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  ^  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^for  ( int i = 0; i == length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType .isArray (  )   )  {^88^^^^^73^103^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType != char.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType == char.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == fromType )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( char.class == toType )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == Object.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == double.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( type == Set.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == byte.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == float.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == String.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == int.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == short.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^83^84^85^^^68^98^if  ( toType == char.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^83^84^85^^^68^98^if  ( toType == char.class )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return new Character ( ' ' ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( long.class )  )  {     return new Long ( 0L ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( int.class )  )  {     return new Integer ( 0 ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return FALSE; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( float.class )  )  {     return new Float ( 0.0F ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( short.class )  )  {     return new Short (  (  ( short )   ( 0 )  )  ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( byte.class )  )  {     return new Byte (  (  ( byte )   ( 0 )  )  ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new HashSet (  ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( double.class )  )  {     return new Double ( 0.0 ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new ArrayList (  ) ; }^83^^^^^68^98^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^84^^^^^69^99^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType >= char.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( value instanceof String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^else fromTypef  ( i.isArray (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( toType.isArray (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  <=  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  !=  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -9 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  (  (  ( Collection )  bean ) .add (  )  > 0  )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -2 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 7  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  >  )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 7 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( object , length )   > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( bean )  > 0L )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( value , length )   > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( !convert ( object, cType )  )  {^109^^^^^94^124^if  ( !canConvert ( value, cType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^int length = Array .get ( bean , length )  ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^int length = Array .get ( bean , i )  ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 6 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 7 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 0 % 1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 7 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 2 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( Array.getLength ( object )  < 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -5 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( i )   {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 2 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -4 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -3; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  >  )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -8 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class .isInterface (  )   )  {^141^^^^^126^156^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  (  (  ( Collection )  object ) .size (  )  == 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 4 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  !=  List )  {^147^^^^^141^159^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 1 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 5  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  >  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 4 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 6 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  >  )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  )  )  {^88^^^^^73^103^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 0  > 0 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object  |  List )  {^147^^^^^132^162^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -4 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 2 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() + 0  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( Array.getLength ( object )  == 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( value , length )   > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^Object value = Array.newInstance ( bean, i ) ;^108^^^^^93^123^Object value = Array.get ( object, i ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -6 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 3 ) ;^120^^^^^115^126^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 5 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, 1 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( object , i )   > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 2; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -5 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -9 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  NodeSet )  {^161^^^^^146^176^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -2; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array .get ( bean , length )   > 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType.isPrimitive (  ) && Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType.isPrimitive (  ) ) {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  (  Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  ) || Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^77^78^79^80^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^77^78^79^80^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^77^^^^^62^92^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return allocateNumber ( toType, value ) ; }^77^^^^^62^92^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^77^^^^^62^92^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^77^^^^^62^92^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( fromType.equals ( toType )  )  ||  ( toType.isAssignableFrom ( fromType )  )  )  {     return object; }^77^^^^^62^92^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^79^^^^^77^80^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^79^^^^^64^94^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^|| Number.class.isAssignableFrom ( fromType )  )  {^78^^^^^63^93^|| Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^78^79^^^^63^93^|| Number.class.isAssignableFrom ( toType )  )  { return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isPrimitive (  ) ) {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^lengthf  ( object instanceof Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return canConvert (  (  ( NodeSet )  object )  .getValue (  )  , fromType ) ;^162^^^^^147^177^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 8 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > 6 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -1 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size() - 5  > 0 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class .isInterface (  )   )  {^115^^^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 8 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -5 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -2 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -5; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -7 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^int length = Array .get ( value , length )  ;^106^^^^^91^121^int length = Array.getLength ( object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 8 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 / 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = ; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType > Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^91^92^93^94^^76^106^if  ( toType == Boolean.class || toType == Character.class || toType == Byte.class || toType == Short.class^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array .get ( value , i )   > 0 + 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 << 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -4; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( Array .get ( object , i )   > 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -1 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 0L )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Pointer )  {^164^^^^^149^179^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 2 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -3 )  {^145^^^^^130^160^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else if  ( toType.isAssignableFrom (  )  )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 / 0 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 1 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0L )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 + 4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array .get ( bean , length )   > 0 + 2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -8 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 - 0 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isArray (  )  || Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^|| Number.class .isInterface (  )   )  {^78^^^^^63^93^|| Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType == boolean.class && Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType <= boolean.class || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( fromType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == toType || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == boolean.fromType || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( boolean.class == toType || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  ( toType == boolean.class ) {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P6_Replace_Expression]^if  (  Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( toType == fromType ) {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P9_Replace_Statement]^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P15_Unwrap_Block]^return true;^71^72^73^74^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P16_Remove_Block]^^71^72^73^74^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  { return true; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return allocateNumber ( toType, value ) ; }^71^^^^^56^86^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^71^^^^^56^86^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^71^^^^^56^86^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^71^^^^^56^86^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P13_Insert_Block]^if  (  ( fromType.equals ( toType )  )  ||  ( toType.isAssignableFrom ( fromType )  )  )  {     return object; }^71^^^^^56^86^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^73^^^^^71^74^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^return false;^73^^^^^58^88^return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^|| Number.class.isAssignableFrom ( fromType )  )  {^72^^^^^57^87^|| Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^|| Number.class .isInterface (  )   )  {^72^^^^^57^87^|| Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^72^73^^^^57^87^|| Number.class.isAssignableFrom ( toType )  )  { return true;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType != boolean.class || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^if  ( toType == fromType || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( toType == boolean.toType || Number.class.isAssignableFrom ( toType )  )  {^71^72^^^^56^86^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Number )  {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^else {^76^^^^^61^91^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 1 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( bean )  > 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^Object value = Array.get ( object, -6 ) ;^120^^^^^105^135^Object value = Array.get ( object, 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 / 2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > 5 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 1; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class.isAssignableFrom ( fromType )  )  {^115^^^^^100^130^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 0 * 2 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -8 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 / 4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType .isInterface (  )   )  {^102^^^^^87^117^else if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >> 2 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( Array.getLength ( object )  < 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 * 4 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 * 1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Collection )  {^128^^^^^113^143^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  (  (  ( Collection )  object ) .size (  )  > -8 )  {^145^^^^^141^159^if  (  (  ( Collection )  object ) .size (  )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( toType < char.class )  {^83^^^^^68^98^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 * 0 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 - 3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 0 + 4 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 8; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 4 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -9 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( object )  > 0 + 3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -7; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^if  ( Array.getLength ( object )  > -7 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 % 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isPrimitive (  ) || Number.class .isInterface (  )   )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Character )  {^82^^^^^67^97^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  String )  {^87^^^^^72^102^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 0 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array .get ( bean , i )   > 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.newInstanceLength ( bean )  > 2 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 >>> 3 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array .get ( object , i )   > 1 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 % 1 )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 >> 2 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 3 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = 4; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 0L )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 >>> 4 ) ;^148^^^^^141^159^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 << 3 ) ;^148^^^^^133^163^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P3_Replace_Literal]^for  ( int i = -1; i < length; i++ )  {^107^^^^^92^122^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 0L )  {^119^^^^^115^126^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( object )  > 0 >>> 3 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( Array.getLength ( bean )  > 2 )  {^119^^^^^104^134^if  ( Array.getLength ( object )  > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^if  ( fromType .isArray (  )  || Number.class.isAssignableFrom ( toType )  )  {^77^78^^^^62^92^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^return ConvertUtils.lookup ( toType )  == null;^167^^^^^152^182^return ConvertUtils.lookup ( toType )  != null;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P5_Replace_Variable]^return ConvertUtils.lookup ( fromType )  != null;^167^^^^^152^182^return ConvertUtils.lookup ( toType )  != null;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P8_Replace_Mix]^return ConvertUtils.lookup ( toType )  ;^167^^^^^152^182^return ConvertUtils.lookup ( toType )  != null;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P14_Delete_Statement]^^167^^^^^152^182^return ConvertUtils.lookup ( toType )  != null;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] canConvert [RETURN_TYPE] boolean   Object object Class toType [VARIABLES] Iterator  it  List  pointers  values  Object  bean  object  value  Class  cType  fromType  toType  boolean  int  i  length  
[P2_Replace_Operator]^if  ( object != null )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( value == null )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object == true )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( pointers == null )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( bean == null )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( value != null )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( converter != null )  {^176^^^^^161^191^if  ( object == null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^if (toType.isPrimitive()) {    return convertNullToPrimitive(toType);}; return null;^176^177^178^179^^161^191^if  ( object == null )  { if  ( toType.isPrimitive (  )  )  { return convertNullToPrimitive ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^176^177^178^179^^161^191^if  ( object == null )  { if  ( toType.isPrimitive (  )  )  { return convertNullToPrimitive ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return convertNullToPrimitive ( toType ) ; }^176^^^^^161^191^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isPrimitive (  )  )  {^177^^^^^162^192^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  )  )  {^177^^^^^162^192^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isArray (  )   )  {^177^^^^^162^192^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return convertNullToPrimitive(toType);^177^178^179^^^162^192^if  ( toType.isPrimitive (  )  )  { return convertNullToPrimitive ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^177^178^179^^^162^192^if  ( toType.isPrimitive (  )  )  { return convertNullToPrimitive ( toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     if  ( toType.isPrimitive (  )  )  {         return convertNullToPrimitive ( toType ) ;     }     return null; }^177^^^^^162^192^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^177^^^^^162^192^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convertNullToPrimitive ( fromType ) ;^178^^^^^163^193^return convertNullToPrimitive ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canCreateCollection ( toType ) ;^178^^^^^163^193^return convertNullToPrimitive ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return convertNullToPrimitive ( toType ) ; }^178^^^^^163^193^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^178^^^^^163^193^return convertNullToPrimitive ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return true;^180^^^^^165^195^return null;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  )  )  {^177^^^^^162^192^if  ( toType.isPrimitive (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canCreateCollection ( fromType ) ;^178^^^^^163^193^return convertNullToPrimitive ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType != Object.class )  {^183^^^^^168^198^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType == Object.class )  {^183^^^^^168^198^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == Object.fromType )  {^183^^^^^168^198^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof NodeSet )  {^183^^^^^168^198^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Pointer )  {^183^^^^^168^198^if  ( toType == Object.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^if (object instanceof org.apache.commons.jxpath.NodeSet) {    return convert(((org.apache.commons.jxpath.NodeSet) (object)).getValues(), toType);}else    if (object instanceof org.apache.commons.jxpath.Pointer) {        return convert(((org.apache.commons.jxpath.Pointer) (object)).getValue(), toType);    }; return object;^183^184^185^186^^168^198^if  ( toType == Object.class )  { if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^183^184^185^186^^168^198^if  ( toType == Object.class )  { if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  >=  NodeSet )  {^184^^^^^169^199^if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( value instanceof NodeSet )  {^184^^^^^169^199^if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Pointer )  {^184^^^^^169^199^if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( object instanceof List )  {^184^^^^^169^199^if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return convert(((org.apache.commons.jxpath.NodeSet) (object)).getValues(), toType);^184^185^186^^^169^199^if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^184^185^186^^^169^199^if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof NodeSet )  {     return canConvert (  (  ( NodeSet )   ( object )  ) .getValues (  ) , toType ) ; }else     if  ( object instanceof Pointer )  {         return canConvert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ;     }^184^^^^^169^199^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     if  ( object instanceof NodeSet )  {         return convert (  (  ( NodeSet )   ( object )  ) .getValues (  ) , toType ) ;     }else         if  ( object instanceof Pointer )  {             return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ;         }          return object; }^184^^^^^169^199^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Pointer )  {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( value instanceof Pointer )  {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return convert(((org.apache.commons.jxpath.Pointer) (object)).getValue(), toType);^187^188^189^^^172^202^else if  ( object instanceof Pointer )  { return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^187^188^189^^^172^202^else if  ( object instanceof Pointer )  { return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return canConvert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^187^^^^^172^202^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( Pointer )  object ) .getValue (  )  ) ;^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^188^^^^^173^203^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return canConvert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^188^^^^^173^203^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return convert (  (  ( Pointer )  object )  .getValues (  )  , toType ) ;^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^185^^^^^170^200^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( NodeSet )  object ) .getValues (  )  ) ;^185^^^^^170^200^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^185^^^^^170^200^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return convert (  (  ( NodeSet )  object )  .getValue (  )  , toType ) ;^185^^^^^170^200^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^185^^^^^170^200^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^185^^^^^170^200^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^185^^^^^170^200^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Pointer )  {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value;^190^^^^^175^205^return object;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  <<  NodeSet )  {^184^^^^^169^199^if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Pointer )  {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( value instanceof Pointer )  {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Pointer )  {^187^^^^^172^202^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return convert (  (  ( Pointer )  object )  .getValues (  )  , fromType ) ;^188^^^^^173^203^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Class fromType = value.getClass (  ) ;^193^^^^^178^208^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Class fromType = object.equals (  ) ;^193^^^^^178^208^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Class fromType = object .equals ( bean )  ;^193^^^^^178^208^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  ( toType == Object.class )  { Class fromType = object.getClass (  ) ; }^193^^^^^178^208^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^193^^^^^178^208^Class fromType = object.getClass (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( fromType.equals ( toType )  && toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( cType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType.equals ( fromType )  || toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType.equals ( fromType )  || toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( fromType.equals ( toType )  ) {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  (  toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( fromType.equals ( toType )  || toType .isInterface (  )   )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.equals ( cType )  || toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return object;^194^195^196^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^194^195^196^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^194^^^^^179^209^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^194^^^^^179^209^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^194^^^^^179^209^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value;^195^^^^^180^210^return object;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( fromType .getClass (  )   || toType.isAssignableFrom ( fromType )  )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^194^^^^^179^209^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.equals ( cType )  || toType .isInterface (  )   )  {^194^^^^^179^209^if  ( fromType.equals ( toType )  || toType.isAssignableFrom ( fromType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType.isArray (  )  )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( i < length )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( length > 0 )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Collection )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof NodeSet )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Pointer )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType == class )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Boolean )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType == boolean.class )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Number )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType == boolean.class || toType == class )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( value == 0.0 )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof Character )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType == char.class )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof String )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( value != null )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( fromType.isAssignableFrom (  )  )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( fromType .isInterface (  )   )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( fromType.equals ( toType )  )  {^198^^^^^183^213^if  ( fromType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Collection )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Collection )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Collection )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Collection )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Collection )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Collection )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( i < length )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( length > 0 )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof NodeSet )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Boolean )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Number )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class || toType == class )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value == 0.0 )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^227^^^^^212^242^else if  ( object instanceof Collection )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( bean instanceof NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Pointer )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Boolean )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Number )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class || toType == class )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value == 0.0 )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return convert(((org.apache.commons.jxpath.NodeSet) (object)).getValues(), toType);^261^262^263^^^246^276^else if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^261^262^263^^^246^276^else if  ( object instanceof NodeSet )  { return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( bean instanceof Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Boolean )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Number )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class || toType == class )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value == 0.0 )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return convert(((org.apache.commons.jxpath.Pointer) (object)).getValue(), toType);^264^265^266^^^249^279^else if  ( object instanceof Pointer )  { return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^264^265^266^^^249^279^else if  ( object instanceof Pointer )  { return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( toType <= String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( toType != String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( toType < String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( fromType == String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( toType == String.toType )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( toType == String.fromType )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Boolean )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Number )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class || toType == class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value == 0.0 )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return object.toString();^267^268^269^^^252^282^else if  ( toType == String.class )  { return object.toString (  ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^267^268^269^^^252^282^else if  ( toType == String.class )  { return object.toString (  ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( bean instanceof Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Number )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class || toType == class )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value == 0.0 )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^if (toType == (boolean.class)) {    return object;}; boolean value = ((java.lang.Boolean) (object)).booleanValue(); return allocateNumber(toType, (value ? 1 : 0));^270^271^272^273^^255^285^else if  ( object instanceof Boolean )  { if  ( toType == boolean.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^270^271^272^273^^255^285^else if  ( object instanceof Boolean )  { if  ( toType == boolean.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( bean instanceof Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class || toType == class )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == boolean.class )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == class )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value == 0.0 )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType.isPrimitive() || isAssignableFrom(toType) )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof Character )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( bean instanceof Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^double value = ((java.lang.Number) (object)).doubleValue(); if ((toType == (boolean.class)) || (toType == (java.lang.Boolean.class))) {    return value == 0.0 ? java.lang.Boolean.FALSE : java.lang.Boolean.TRUE;}; if ((toType.isPrimitive()) || (java.lang.Number.class.isAssignableFrom(toType))) {    return allocateNumber(toType, value);};^277^278^279^280^281^262^292^else if  ( object instanceof Number )  { double value =  (  ( Number )  object ) .doubleValue (  ) ; if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^277^278^279^280^281^262^292^else if  ( object instanceof Number )  { double value =  (  ( Number )  object ) .doubleValue (  ) ; if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( bean instanceof Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( toType == char.class )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof String )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( bean instanceof Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^if (toType == (char.class)) {    return object;};^287^288^289^290^^272^302^else if  ( object instanceof Character )  { if  ( toType == char.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^287^288^289^290^^272^302^else if  ( object instanceof Character )  { if  ( toType == char.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof String )  {     Object value = convertStringToPrimitive ( object, toType ) ;     if  ( value != null )  {         return value;     } }^287^^^^^272^302^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( bean instanceof String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( value != null )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value = convertStringToPrimitive(object, toType); if (value != null) {    return value;};^292^293^294^295^296^277^307^else if  ( object instanceof String )  { Object value = convertStringToPrimitive ( object, toType ) ; if  ( value != null )  { return value; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^292^293^294^295^296^277^307^else if  ( object instanceof String )  { Object value = convertStringToPrimitive ( object, toType ) ; if  ( value != null )  { return value; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( value == null )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( object != null )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( value != true )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( pointers == null )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( object == null )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( bean == null )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( converter != null )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return value;^294^295^296^^^279^309^if  ( value != null )  { return value; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^294^295^296^^^279^309^if  ( value != null )  { return value; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( ! ( canConvert ( value, cType )  )  )  {     return false; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^294^^^^^279^309^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return object;^295^^^^^280^310^return value;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object value = convertStringToPrimitive ( bean, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object value = convertStringToPrimitive ( object, fromType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object value = convertStringToPrimitive (  toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object value = convertStringToPrimitive ( object ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object value = convertStringToPrimitive ( toType, object ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Object value = convert ( object, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, i ) ;Object value = convertStringToPrimitive ( object, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, 0 ) ;Object value = convertStringToPrimitive ( object, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object value = convertStringToPrimitive ( value, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return convertNullToPrimitive ( toType ) ;Object value = convertStringToPrimitive ( object, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object != this )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Object value = convert ( object, fromType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType <= char.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == fromType )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( char.class == toType )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType == char.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == Object.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == double.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( type == Set.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == byte.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == float.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == String.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == int.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == short.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return object;^288^289^290^^^273^303^if  ( toType == char.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^288^289^290^^^273^303^if  ( toType == char.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return new Character ( ' ' ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( long.class )  )  {     return new Long ( 0L ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( int.class )  )  {     return new Integer ( 0 ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return FALSE; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( float.class )  )  {     return new Float ( 0.0F ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( short.class )  )  {     return new Short (  (  ( short )   ( 0 )  )  ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( byte.class )  )  {     return new Byte (  (  ( byte )   ( 0 )  )  ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return object; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new HashSet (  ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( double.class )  )  {     return new Double ( 0.0 ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new ArrayList (  ) ; }^288^^^^^273^303^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value;^289^^^^^274^304^return object;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType != char.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( value != false )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType == boolean.class && toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType <= boolean.class || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType != boolean.class || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == fromType || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == boolean.fromType || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( boolean.class == toType || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType == boolean.class ) {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  (  toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType == class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( value == 0.0 )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( type == Float.class || type == float.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == float.class || toType == Float.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( type == Long.class || type == long.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == int.class || toType == Integer.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == byte.class || toType == Byte.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == long.class || toType == Long.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == short.class || toType == Short.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( type == Double.class || type == double.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return value == 0.0 ? java.lang.Boolean.FALSE : java.lang.Boolean.TRUE;^279^280^281^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^279^280^281^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  { return value == 0.0 ? Boolean.FALSE : Boolean.TRUE; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( type ==  ( class )  )  ||  ( type ==  ( double.class )  )  )  {     return new Double ( value ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( byte.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Byte (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( long.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Long (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( int.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Integer (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( float.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Float (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( toType ==  ( class )  )  )  {     return valueOf (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( double.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Double (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( type ==  ( class )  )  ||  ( type ==  ( float.class )  )  )  {     return new Float (  (  ( float )   ( value )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( char.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Character (  (  ( String )   ( object )  ) .charAt ( 0 )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( short.class )  )  ||  ( toType ==  ( class )  )  )  {     return new Short (  (  ( String )   ( object )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( type ==  ( class )  )  ||  ( type ==  ( long.class )  )  )  {     return new Long (  (  ( long )   ( value )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( type ==  ( class )  )  ||  ( type ==  ( byte.class )  )  )  {     return new Byte (  (  ( byte )   ( value )  )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^return value != 0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^return value ( Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  ||  0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType.isPrimitive (  ) && Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( toType.isPrimitive (  ) ) {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  (  Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  ) || Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == boolean.class || Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return allocateNumber(toType, value);^282^283^284^285^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return allocateNumber ( toType, value ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^282^283^284^285^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  { return allocateNumber ( toType, value ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType ==  ( boolean.class )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^282^^^^^267^297^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  (  ( toType.isPrimitive (  )  )  ||  ( isAssignableFrom ( toType )  )  )  {     return true; }^282^^^^^267^297^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( fromType, value ) ;^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber (  value ) ;^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( toType ) ;^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( value, toType ) ;^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return convert ( toType, value ) ;^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( fromType, value ) ;^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber (  value ) ;^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( toType ) ;^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( value, toType ) ;^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return convert ( toType, value ) ;^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^int value =  (  ( Number )  object ) .doubleValue (  ) ;^278^^^^^263^293^double value =  (  ( Number )  object ) .doubleValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;double value =  (  ( Number )  object ) .doubleValue (  ) ;^278^^^^^263^293^double value =  (  ( Number )  object ) .doubleValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;double value =  (  ( Number )  object ) .doubleValue (  ) ;^278^^^^^263^293^double value =  (  ( Number )  object ) .doubleValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^278^^^^^263^293^double value =  (  ( Number )  object ) .doubleValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;double value =  (  ( Number )  object ) .doubleValue (  ) ;^278^^^^^263^293^double value =  (  ( Number )  object ) .doubleValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^|| Number.class.isAssignableFrom ( fromType )  )  {^283^^^^^268^298^|| Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^283^284^^^^268^298^|| Number.class.isAssignableFrom ( toType )  )  { return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType > boolean.class || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType >= boolean.class || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType == boolean.class || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == toType || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == boolean.toType || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^return value <= 0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return   Boolean.FALSE ;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isPrimitive (  ) || Number.class .isInterface (  )   )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isPrimitive (  ) || Number.class .isInterface (  )   )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( bean instanceof String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType == toType )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType >= char.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Object value = convert ( bean, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Object value = convert ( value, toType ) ;^293^^^^^278^308^Object value = convertStringToPrimitive ( object, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType != boolean.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType == boolean.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == fromType )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( boolean.class == toType )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( toType == Object.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^return object;^271^272^273^^^256^286^if  ( toType == boolean.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^271^272^273^^^256^286^if  ( toType == boolean.class )  { return object; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return new Character ( ' ' ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( long.class )  )  {     return new Long ( 0L ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return object; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object == null )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( value != null )  {     return value; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isPrimitive (  )  )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( int.class )  )  {     return new Integer ( 0 ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( char.class )  )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( boolean.class )  )  {     return FALSE; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( float.class )  )  {     return new Float ( 0.0F ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( short.class )  )  {     return new Short (  (  ( short )   ( 0 )  )  ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType.isAssignableFrom ( fromType )  )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( fromType.equals ( toType )  )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( byte.class )  )  {     return new Byte (  (  ( byte )   ( 0 )  )  ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new HashSet (  ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( class )  )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return true; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( toType ==  ( double.class )  )  {     return new Double ( 0.0 ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return new ArrayList (  ) ; }^271^^^^^256^286^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value;^272^^^^^257^287^return object;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ?  : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : length ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber (  value ? 1 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( toType ? 1 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( value, toType ? 1 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 1 * 2 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^boolean value =  (  ( Boolean )  object ) .valueOf (  ) ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^double value =  (  ( Number )  object ) .doubleValue (  ) ;boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^274^275^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ; return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? i : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return allocateNumber ( fromType, value ? 1 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType >= boolean.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( toType == toType )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( value != this )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType < char.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^return value >= 0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  !=  0.0d ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isPrimitive (  ) ) {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^float value =  (  ( Number )  object ) .doubleValue (  ) ;^278^^^^^263^293^double value =  (  ( Number )  object ) .doubleValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isArray (  )  || Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^|| Number.class .isInterface (  )   )  {^283^^^^^268^298^|| Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  (  Number.class .isInterface (  )   )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object != false )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -3 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 2 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^return value > 0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 9 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : i ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value.toString (  ) ;^268^^^^^253^283^return object.toString (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return object.equals (  ) ;^268^^^^^253^283^return object.toString (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^268^^^^^253^283^return object.toString (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType < boolean.class || toType == Boolean.class )  {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  &&  0.0 ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType == boolean.class ) {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return convert ( fromType, value ) ;^284^^^^^269^299^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType < boolean.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( fromType, value ? 2 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType <= boolean.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return convert ( fromType, value ) ;^284^^^^^282^285^return allocateNumber ( toType, value ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  ) || Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType > char.class )  {^288^^^^^273^303^if  ( toType == char.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return object .Object (  )  ;^268^^^^^253^283^return object.toString (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? -6 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : 6 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 3 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? length : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : 7 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( Pointer )  object ) .getValue (  )  ) ;^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^265^^^^^250^280^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return canConvert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^265^^^^^250^280^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert (  (  ( Pointer )  object ) .getValue (  ) , fromType ) ;^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return convert (  (  ( Pointer )  object )  .getValues (  )  , toType ) ;^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( toType >= String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( toType > String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value == 0.0 ? Boolean.4 : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  ||  0.0D ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value == 0.0 ? Boolean.this : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType.isAssignableFrom (  ) ) {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 6 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 4 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return value == NaN ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType == fromType ) {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 1L : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? -8 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -4 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType .isArray (  )  || Number.class.isAssignableFrom ( toType )  )  {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType == toType ) {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( fromType, value ? 0 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType == boolean.toType ) {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <<  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object != true )  {^294^^^^^279^309^if  ( value != null )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 :  ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^262^^^^^247^277^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  (  ( NodeSet )  object ) .getValues (  )  ) ;^262^^^^^247^277^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^262^^^^^247^277^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P13_Insert_Block]^if  ( object instanceof Pointer )  {     return convert (  (  ( Pointer )   ( object )  ) .getValue (  ) , toType ) ; }^262^^^^^247^277^[Delete]^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return convert (  (  ( NodeSet )  object )  .getValue (  )  , toType ) ;^262^^^^^247^277^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^262^^^^^247^277^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( bean instanceof Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  |  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  ) ) {^282^283^^^^267^297^if  ( toType.isPrimitive (  ) || Number.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  !=  0.0 ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 5 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( toType > boolean.class )  {^271^^^^^256^286^if  ( toType == boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : 8 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value .Object (  )  ;^268^^^^^253^283^return object.toString (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ^  String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >=  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? -1 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( fromType, value ? 3 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  !=  3.0d ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^boolean value =  (  ( Boolean )  object )  .valueOf ( 1 )  ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 10 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -5 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType == String.class )  {^267^^^^^252^282^else if  ( toType == String.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof String )  {^292^^^^^277^307^else if  ( object instanceof String )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( toType == boolean.fromType ) {^279^^^^^264^294^if  ( toType == boolean.class || toType == Boolean.class )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value == 0.0 ? Boolean.2 : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -7 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( fromType, value ? 1L : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  Number )  {^277^^^^^262^292^else if  ( object instanceof Number )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  !=  4.0d ? Boolean.FALSE : Boolean.TRUE;;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 1 * 0 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : 4 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value.equals (  ) ;^268^^^^^253^283^return object.toString (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value == 0.0 ? Boolean.0 : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  ||  1.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Character )  {^287^^^^^272^302^else if  ( object instanceof Character )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 0 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -8 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 1 >> 2 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( fromType.isArray (  )  )  {^229^^^^^214^244^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( length > 0 )  {^229^^^^^214^244^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^229^^^^^214^244^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType.isAssignableFrom (  )  )  {^229^^^^^214^244^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^else if  ( Collection.class.isAssignableFrom ( fromType )  )  {^239^^^^^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^else if  ( object instanceof List )  {^239^^^^^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class .isInterface (  )   )  {^239^^^^^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^java.util.Collection collection = allocateCollection(toType); collection.addAll(((java.util.Collection) (object))); return unmodifiableCollection(collection);^239^240^241^242^243^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  { Collection collection = allocateCollection ( toType ) ; collection.addAll (  ( Collection )  object ) ; return unmodifiableCollection ( collection ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^239^240^241^242^243^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  { Collection collection = allocateCollection ( toType ) ; collection.addAll (  ( Collection )  object ) ; return unmodifiableCollection ( collection ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( length == 0 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > length )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length >  )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( i > 0 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( length > 0  )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value; if (object instanceof java.util.List) {    value = ((java.util.List) (object)).get(0);}else {    java.util.Iterator it = ((java.util.Collection) (object)).iterator();    value = it.next();}; return convert(value, toType);^245^246^247^248^249^239^259^if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^245^246^247^248^249^239^259^if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert ( "", toType ) ;^257^^^^^239^259^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( "", fromType ) ;^257^^^^^239^259^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^257^^^^^239^259^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  >>  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( value instanceof List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( object instanceof NodeSet )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^value = ((java.util.List) (object)).get(0);^247^248^249^^^239^259^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^247^248^249^^^239^259^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  null.next (  ) ;^252^^^^^239^259^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^251^252^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value = it .hasNext (  )  ;^252^^^^^239^259^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^252^^^^^239^259^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;value = it.next (  ) ;^252^^^^^239^259^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^value =  (  ( List )  object )  .get ( i )  ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 2 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { value =  (  ( List )  object ) .get ( 0 ) ; }^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^value =  (  (  LinkedHashSet  )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^value =  (  ( List )  object )  .get ( length )  ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^double value =  (  ( Number )  object ) .doubleValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return new Character (  (  ( String )  object ) .charAt ( 0 )  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( object, toType ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( value, fromType ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  toType ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( value ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( toType, value ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert ( value, toType ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return convert ( value, toType ) ; }^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^value =  (  (  ArrayList  )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 6 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert ( object, toType ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  >=  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ; }^251^252^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -7 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^value =  (  (  Set  )  object ) .get ( 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 3 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^251^^^^^239^259^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return allocateCollection ( collection ) ;^242^^^^^227^257^return unmodifiableCollection ( collection ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Collection collection = allocateCollection ( fromType ) ;^240^^^^^225^255^Collection collection = allocateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Collection collection = canCreateCollection ( toType ) ;^240^^^^^225^255^Collection collection = allocateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Collection collection = canCreateCollection ( fromType ) ;^240^^^^^225^255^Collection collection = allocateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^240^241^^^^225^255^Collection collection = allocateCollection ( toType ) ; collection.addAll (  ( Collection )  object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^collection.addAll (  ( Collection )  object ) ;Collection collection = allocateCollection ( toType ) ;^240^^^^^225^255^Collection collection = allocateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return canCreateCollection ( toType ) ;Collection collection = allocateCollection ( toType ) ;^240^^^^^225^255^Collection collection = allocateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^241^242^^^^226^256^collection.addAll (  ( Collection )  object ) ; return unmodifiableCollection ( collection ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^collection.add ( Array.get ( object, i )  ) ;collection.addAll (  ( Collection )  object ) ;^241^^^^^226^256^collection.addAll (  ( Collection )  object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;collection.addAll (  ( Collection )  object ) ;^241^^^^^226^256^collection.addAll (  ( Collection )  object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Collection collection = allocateCollection ( toType ) ;collection.addAll (  ( Collection )  object ) ;^241^^^^^226^256^collection.addAll (  ( Collection )  object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^242^243^^^^227^257^return unmodifiableCollection ( collection ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( length >= 0 )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > length )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( i > 0 )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P6_Replace_Expression]^if  ( object instanceof List )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( length > 0  )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^java.lang.Object value; if (object instanceof java.util.List) {    value = ((java.util.List) (object)).get(0);}else {    java.util.Iterator it = ((java.util.Collection) (object)).iterator();    value = it.next();}; return convert(value, toType);^245^246^247^248^249^230^260^if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^245^246^247^248^249^230^260^if  ( length > 0 )  { Object value; if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( "", fromType ) ;^257^^^^^245^258^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert ( "", toType ) ;^257^^^^^245^258^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert ( "", fromType ) ;^257^^^^^245^258^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^257^^^^^245^258^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  ^  List )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^if  ( value instanceof List )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P9_Replace_Statement]^if  ( object instanceof NodeSet )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P15_Unwrap_Block]^value = ((java.util.List) (object)).get(0);^247^248^249^^^232^262^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P16_Remove_Block]^^247^248^249^^^232^262^if  ( object instanceof List )  { value =  (  ( List )  object ) .get ( 0 ) ; }^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  null.next (  ) ;^252^^^^^247^253^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^251^252^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value = it .hasNext (  )  ;^252^^^^^247^253^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^252^^^^^247^253^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;value = it.next (  ) ;^252^^^^^247^253^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -9 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 4 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { value =  (  ( List )  object ) .get ( 0 ) ; }^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^value =  (  (  ArrayList  )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( i ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^value =  (  ( List )  object )  .get ( length )  ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^double value =  (  ( Number )  object ) .doubleValue (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return new Character (  (  ( String )  object ) .charAt ( 0 )  ) ;value =  (  ( List )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get (  ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  null.next (  ) ;^252^^^^^237^267^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( object, toType ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( value, fromType ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert (  toType ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( value ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( toType, value ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert ( value, toType ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { return convert ( value, toType ) ; }^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ; }^251^252^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^value =  (  (  Set  )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -1 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^251^252^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^value = it .hasNext (  )  ;^252^^^^^237^267^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^252^^^^^237^267^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = it.next (  ) ;value = it.next (  ) ;^252^^^^^237^267^value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  &&  List )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^251^^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 2 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^value =  (  (  LinkedHashSet  )  object ) .get ( 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 1 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0L ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return convert ( "", fromType ) ;^257^^^^^242^272^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^return canConvert ( "", toType ) ;^257^^^^^242^272^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^240^^^^^225^255^Collection collection = allocateCollection ( toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^241^^^^^226^256^collection.addAll (  ( Collection )  object ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert ( object, toType ) ;^254^^^^^239^269^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^257^^^^^242^272^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^for  (  long  i = 0; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^for  ( int i = 0; i == length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^for  ( int i = ; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < i; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, i ) ;Object value = it.next (  ) ;^234^^^^^219^249^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Object value = Array.get ( object, 0 ) ;Object value = it.next (  ) ;^234^^^^^219^249^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^234^^^^^219^249^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value = it.next (  ) ;Object value = it.next (  ) ;^234^^^^^219^249^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, length, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, i, convert ( object, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, i, convert ( value, toType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set (  i, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array,  convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, i, convert (  cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, i, convert ( value )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( i, array, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, value, convert ( i, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( cType, i, convert ( value, array )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Array.set ( array, i, canConvert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Array.set ( value, i, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return canConvert ( value, toType ) ;Array.set ( array, i, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return convert ( value, toType ) ;Array.set ( array, i, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  ( !canConvert ( value, cType )  )  { Array.set ( array, i, convert ( value, cType )  ) ; }^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, i, convert ( cType, value )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value;^237^^^^^222^252^return array;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Class cType = fromType.getComponentType (  ) ;^230^^^^^215^245^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Class cType = toType.isAssignableFrom (  ) ;^230^^^^^215^245^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Class cType = toType .getModifiers (  )  ;^230^^^^^215^245^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Class cType = fromType.isAssignableFrom (  ) ;^230^^^^^215^245^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object array = Array.newInstance ( cType, i ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object array = Array.newInstance (  length ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object array = Array.newInstance ( cType ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Object array = Array.newInstance ( length, cType ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Object array = Array.get ( cType, length ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Object array = Array.newInstance ( toType, length ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object ) .add (  ) ;^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^int length =  (  ( Collection )  object ) .size (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; }^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^for  (  short  i = 0; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^for  ( int i = length; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Object value = it .hasNext (  )  ;^234^^^^^219^249^Object value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^230^^^^^215^245^Class cType = toType.getComponentType (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Object array = Array .newInstance (  )  ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^231^232^^^^216^246^Object array = Array.newInstance ( cType, length ) ; Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^value =  (  ( List )  object ) .get ( 0 ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^return  ( Collection )  type.newInstance (  ) ;Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^232^^^^^217^247^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^234^235^^^^219^249^Object value = it.next (  ) ; Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( object, i, convert ( value, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( value, i, convert ( array, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Array.set ( array, i, canConvert ( object, cType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^else if  ( Collection.class .isInterface (  )   )  {^239^^^^^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class.isAssignableFrom ( toType )  )  {^239^^^^^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( length < 0 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > -9 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > i )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert ( "", fromType ) ;^257^^^^^239^259^return convert ( "", toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  &  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 4 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 7 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert ( value, fromType ) ;^254^^^^^239^259^return convert ( value, toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  >  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -8 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0L ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 1 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > i )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  >  List )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ; }^251^252^^^^247^253^Iterator it =  (  ( Collection )  object ) .iterator (  ) ; value = it.next (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -2 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 1 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 3 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -8 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 + 0 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 9 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Iterator it =  (  ( Collection )  object )  .size (  )  ;^251^^^^^236^266^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  <=  List )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^for  ( int i = 0; i <= length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^for  ( int i = -4; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^Array.set ( array, cType, convert ( value, i )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Array .get ( value , i )  ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Array .get ( array , length )  ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P1_Replace_Type]^short  length =  (  ( Collection )  object ) .size (  ) ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^int length =  (  ( Collection )  object ) .size() - 5 ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^int length =  (  ( Collection )  object ) .add (  ) ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;int length =  (  ( Collection )  object ) .size (  ) ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^double value =  (  ( Number )  object ) .doubleValue (  ) ;int length =  (  ( Collection )  object ) .size (  ) ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P11_Insert_Donor_Statement]^Iterator it =  (  ( Collection )  object ) .iterator (  ) ;int length =  (  ( Collection )  object ) .size (  ) ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P12_Insert_Condition]^if  (  (  ( Collection )  object ) .size (  )  > 0 )  { int length =  (  ( Collection )  object ) .size (  ) ; }^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^int length =  (  ( Collection )  object ) .size() - 8 ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^int length =  (  ( Collection )  object )  .iterator (  )  ;^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^228^^^^^213^243^int length =  (  ( Collection )  object ) .size (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^if  ( toType .isInterface (  )   )  {^229^^^^^214^244^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( fromType.isAssignableFrom (  )  )  {^229^^^^^214^244^if  ( toType.isArray (  )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P14_Delete_Statement]^^230^231^^^^215^245^Class cType = toType.getComponentType (  ) ; Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Array .get ( object , length )  ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( 5 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( Collection.class.isAssignableFrom ( fromType )  )  {^239^^^^^224^254^else if  ( Collection.class.isAssignableFrom ( toType )  )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( length >= 0 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > -2 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  !=  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -2 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  ==  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -1 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -5 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( length == 0 )  {^245^^^^^230^260^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  ==  List )  {^247^^^^^232^262^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 * 3 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Array.set ( array, i, canConvert ( value, toType )  ) ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^for  ( int i = -8; i < length; i++ )  {^233^^^^^218^248^for  ( int i = 0; i < length; i++ )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^Object array = Array.get ( cType, i ) ;^231^^^^^216^246^Object array = Array.newInstance ( cType, length ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P7_Replace_Invocation]^Array .get ( bean , length )  ;^235^^^^^220^250^Array.set ( array, i, convert ( value, cType )  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^if  ( length > 5 )  {^245^^^^^239^259^if  ( length > 0 )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^if  ( object  |  List )  {^247^^^^^239^259^if  ( object instanceof List )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -9 ) ;^248^^^^^239^259^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^value =  (  ( List )  object ) .get ( 0 - 2 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^value =  (  ( List )  object ) .get ( -6 ) ;^248^^^^^233^263^value =  (  ( List )  object ) .get ( 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  !=  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  NodeSet )  {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^else {^261^^^^^246^276^else if  ( object instanceof NodeSet )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ==  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  >>  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^if  ( object instanceof Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  ||  Boolean )  {^270^^^^^255^285^else if  ( object instanceof Boolean )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -2 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value == 0.0 ? Boolean.1 : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P5_Replace_Variable]^return value == 0.0 ? Boolean.null : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 1 / 0 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return true ;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return value  &&  2.0d ? Boolean.FALSE : Boolean.TRUE;^280^^^^^265^295^return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return allocateNumber ( toType, value ? 1 >>> 1 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? -7 : 0 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P3_Replace_Literal]^return allocateNumber ( toType, value ? 1 : -1 ) ;^275^^^^^260^290^return allocateNumber ( toType, value ? 1 : 0 ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^boolean value =  (  ( Boolean )  object )  .valueOf ( 4 )  ;^274^^^^^259^289^boolean value =  (  ( Boolean )  object ) .booleanValue (  ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return convert (  (  ( Pointer )  object )  .getValues (  )  , fromType ) ;^265^^^^^250^280^return convert (  (  ( Pointer )  object ) .getValue (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P8_Replace_Mix]^return canConvert (  (  ( NodeSet )  object ) .getValues (  ) , fromType ) ;^262^^^^^247^277^return convert (  (  ( NodeSet )  object ) .getValues (  ) , toType ) ;^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  &&  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
[P2_Replace_Operator]^else if  ( object  <=  Pointer )  {^264^^^^^249^279^else if  ( object instanceof Pointer )  {^[CLASS] BasicTypeConverter ValueNodeSet ValuePointer  [METHOD] convert [RETURN_TYPE] Object   Object object Class toType [VARIABLES] boolean  value  double  value  Iterator  it  Collection  collection  Converter  converter  List  pointers  values  Object  array  bean  object  value  Class  cType  fromType  toType  int  i  length  
