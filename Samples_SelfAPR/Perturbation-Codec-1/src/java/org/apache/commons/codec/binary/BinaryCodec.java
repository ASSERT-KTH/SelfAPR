[P3_Replace_Literal]^private static final char[] EMPTY_CHAR_ARRAY = new char[-2];^41^^^^^36^46^private static final char[] EMPTY_CHAR_ARRAY = new char[0];^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static  char[] EMPTY_CHAR_ARRAY = new char[0];^41^^^^^36^46^private static final char[] EMPTY_CHAR_ARRAY = new char[0];^[CLASS] BinaryCodec   [VARIABLES] 
[P3_Replace_Literal]^private static final byte[] EMPTY_BYTE_ARRAY = new byte[-6];^44^^^^^39^49^private static final byte[] EMPTY_BYTE_ARRAY = new byte[0];^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final byte[] EMPTY_BYTE_ARRAY = new byte[0L];^44^^^^^39^49^private static final byte[] EMPTY_BYTE_ARRAY = new byte[0];^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_0 = 1;^47^^^^^42^52^private static final int BIT_0 = 1;^[CLASS] BinaryCodec   [VARIABLES] 
[P3_Replace_Literal]^private static final int BIT_0 = 10;^47^^^^^42^52^private static final int BIT_0 = 1;^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final int BIT_0 = 3;^47^^^^^42^52^private static final int BIT_0 = 1;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_1 = 0x02;^50^^^^^45^55^private static final int BIT_1 = 0x02;^[CLASS] BinaryCodec   [VARIABLES] 
[P3_Replace_Literal]^private static final int BIT_1 = 0x04;^50^^^^^45^55^private static final int BIT_1 = 0x02;^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final int BIT_1 = 0x02 + 3;^50^^^^^45^55^private static final int BIT_1 = 0x02;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_2 = 0x04;^53^^^^^48^58^private static final int BIT_2 = 0x04;^[CLASS] BinaryCodec   [VARIABLES] 
[P3_Replace_Literal]^private static final int BIT_2 = 0x011;^53^^^^^48^58^private static final int BIT_2 = 0x04;^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final int BIT_2  = null ;^53^^^^^48^58^private static final int BIT_2 = 0x04;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  long  BIT_3 = 0x08;^56^^^^^51^61^private static final int BIT_3 = 0x08;^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final int BIT_3 = 0x04;^56^^^^^51^61^private static final int BIT_3 = 0x08;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_4 = 0x10;^59^^^^^54^64^private static final int BIT_4 = 0x10;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_5 = 0x20;^62^^^^^57^67^private static final int BIT_5 = 0x20;^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final  long  BIT_5 = 0x20;^62^^^^^57^67^private static final int BIT_5 = 0x20;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_6 = 0x40;^65^^^^^60^70^private static final int BIT_6 = 0x40;^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static final int BIT_6  = null ;^65^^^^^60^70^private static final int BIT_6 = 0x40;^[CLASS] BinaryCodec   [VARIABLES] 
[P1_Replace_Type]^private static final  short  BIT_7 = 0x80;^68^^^^^63^73^private static final int BIT_7 = 0x80;^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, null, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = { BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0,  BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1,  BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2,  BIT_4, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3,  BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4,  BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5,  BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_6, BIT_2, BIT_3, BIT_4, BIT_5, BIT_1, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_4, BIT_3, BIT_2, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_3, BIT_2, BIT_1, BIT_4, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_4, BIT_2, BIT_3, BIT_1, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_5, BIT_3, BIT_4, BIT_2, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_7, BIT_6};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P5_Replace_Variable]^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_7, BIT_5, BIT_6, BIT_4};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P8_Replace_Mix]^private static  int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^70^^^^^65^75^private static final int[] BITS = {BIT_0, BIT_1, BIT_2, BIT_3, BIT_4, BIT_5, BIT_6, BIT_7};^[CLASS] BinaryCodec   [VARIABLES] 
[P7_Replace_Invocation]^return toAsciiChars ( raw ) ;^81^^^^^80^82^return toAsciiBytes ( raw ) ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P8_Replace_Mix]^return toAsciiChars ( EMPTY_BYTE_ARRAY ) ;^81^^^^^80^82^return toAsciiBytes ( raw ) ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^81^^^^^80^82^return toAsciiBytes ( raw ) ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ! ( raw  |  byte[] )  )  {^95^^^^^94^99^if  ( ! ( raw instanceof byte[] )  )  {^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof byte[] )  {^95^^^^^94^99^if  ( ! ( raw instanceof byte[] )  )  {^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P15_Unwrap_Block]^throw new org.apache.commons.codec.EncoderException("argument not a byte array");^95^96^97^^^94^99^if  ( ! ( raw instanceof byte[] )  )  { throw new EncoderException  (" ")  ; }^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P16_Remove_Block]^^95^96^97^^^94^99^if  ( ! ( raw instanceof byte[] )  )  { throw new EncoderException  (" ")  ; }^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^95^^^^^94^99^[Delete]^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^95^^^^^94^99^[Delete]^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P4_Replace_Constructor]^throw throw  new DecoderException ( "argument not a byte array" )   ;^96^^^^^94^99^throw new EncoderException  (" ")  ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ! ( raw instanceof byte[] )  )  {     throw new EncoderException ( "argument not a byte array" ) ; }^96^^^^^94^99^[Delete]^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P11_Insert_Donor_Statement]^throw new DecoderException  (" ")  ;throw new EncoderException  (" ")  ;^96^^^^^94^99^throw new EncoderException  (" ")  ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P7_Replace_Invocation]^return toAsciiBytes (  ( byte[] )  raw ) ;^98^^^^^94^99^return toAsciiChars (  ( byte[] )  raw ) ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^98^^^^^94^99^return toAsciiChars (  ( byte[] )  raw ) ;^[CLASS] BinaryCodec  [METHOD] encode [RETURN_TYPE] Object   Object raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  raw  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ascii != null )  {^112^^^^^111^125^if  ( ascii == null )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P8_Replace_Mix]^if  ( ascii == false )  {^112^^^^^111^125^if  ( ascii == null )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;^112^113^114^^^111^125^if  ( ascii == null )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P16_Remove_Block]^^112^113^114^^^111^125^if  ( ascii == null )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ! ( raw instanceof byte[] )  )  {     throw new EncoderException ( "argument not a byte array" ) ; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^112^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P5_Replace_Variable]^return raw;^113^^^^^111^125^return EMPTY_BYTE_ARRAY;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^113^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^113^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^113^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^113^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ascii  ||  byte[] )  {^115^^^^^111^125^if  ( ascii instanceof byte[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof char[] )  {^115^^^^^111^125^if  ( ascii instanceof byte[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ! ( raw instanceof byte[] )  )  {^115^^^^^111^125^if  ( ascii instanceof byte[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof String )  {^115^^^^^111^125^if  ( ascii instanceof byte[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[]) (ascii)));^115^116^117^^^111^125^if  ( ascii instanceof byte[] )  { return fromAscii (  ( byte[] )  ascii ) ; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P16_Remove_Block]^^115^116^117^^^111^125^if  ( ascii instanceof byte[] )  { return fromAscii (  ( byte[] )  ascii ) ; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ! ( raw instanceof byte[] )  )  {     throw new EncoderException ( "argument not a byte array" ) ; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^115^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^116^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^116^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^116^^^^^111^125^return fromAscii (  ( byte[] )  ascii ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ascii  ||  char[] )  {^118^^^^^111^125^if  ( ascii instanceof char[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof byte[] )  {^118^^^^^111^125^if  ( ascii instanceof char[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof String )  {^118^^^^^111^125^if  ( ascii instanceof char[] )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[]) (ascii)));^118^119^120^^^111^125^if  ( ascii instanceof char[] )  { return fromAscii (  ( char[] )  ascii ) ; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P16_Remove_Block]^^118^119^120^^^111^125^if  ( ascii instanceof char[] )  { return fromAscii (  ( char[] )  ascii ) ; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^118^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^119^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^119^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^119^^^^^111^125^return fromAscii (  ( char[] )  ascii ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ascii  <=  String )  {^121^^^^^111^125^if  ( ascii instanceof String )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof char[] )  {^121^^^^^111^125^if  ( ascii instanceof String )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P9_Replace_Statement]^if  ( ascii instanceof byte[] )  {^121^^^^^111^125^if  ( ascii instanceof String )  {^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String) (ascii)).toCharArray());^121^122^123^^^111^125^if  ( ascii instanceof String )  { return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P16_Remove_Block]^^121^122^123^^^111^125^if  ( ascii instanceof String )  { return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ; }^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^121^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^121^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^121^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^121^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^121^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^121^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P7_Replace_Invocation]^return fromAscii (  (  ( String )  ascii ) .String (  )  ) ;^122^^^^^111^125^return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^122^^^^^111^125^[Delete]^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^122^^^^^111^125^return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P1_Replace_Type]^return fromAscii (  (  ( char )  ascii ) .toCharArray (  )  ) ;^122^^^^^111^125^return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P7_Replace_Invocation]^return fromAscii (  (  ( String )  ascii )  .String ( EMPTY_CHAR_ARRAY )   ) ;^122^^^^^111^125^return fromAscii (  (  ( String )  ascii ) .toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P4_Replace_Constructor]^throw throw  new EncoderException ( "argument not a byte array" )   ;^124^^^^^111^125^throw new DecoderException  (" ")  ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P11_Insert_Donor_Statement]^throw new EncoderException  (" ")  ;throw new DecoderException  (" ")  ;^124^^^^^111^125^throw new DecoderException  (" ")  ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] Object   Object ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  raw  int[]  BITS  Object  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P5_Replace_Variable]^return fromAscii ( raw ) ;^136^^^^^135^137^return fromAscii ( ascii ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^136^^^^^135^137^return fromAscii ( ascii ) ;^[CLASS] BinaryCodec  [METHOD] decode [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ascii != null )  {^148^^^^^147^152^if  ( ascii == null )  {^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P8_Replace_Mix]^if  ( ascii == this )  {^148^^^^^147^152^if  ( ascii == null )  {^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;^148^149^150^^^147^152^if  ( ascii == null )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P16_Remove_Block]^^148^149^150^^^147^152^if  ( ascii == null )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ! ( raw instanceof byte[] )  )  {     throw new EncoderException ( "argument not a byte array" ) ; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^148^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P5_Replace_Variable]^return raw;^149^^^^^147^152^return EMPTY_BYTE_ARRAY;^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^149^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^149^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^149^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^149^^^^^147^152^[Delete]^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P7_Replace_Invocation]^return fromAscii ( ascii.String (  )  ) ;^151^^^^^147^152^return fromAscii ( ascii.toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P7_Replace_Invocation]^return fromAscii ( ascii .String ( EMPTY_CHAR_ARRAY )   ) ;^151^^^^^147^152^return fromAscii ( ascii.toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P14_Delete_Statement]^^151^^^^^147^152^return fromAscii ( ascii.toCharArray (  )  ) ;^[CLASS] BinaryCodec  [METHOD] toByteArray [RETURN_TYPE] byte[]   String ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  raw  int[]  BITS  String  ascii  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  char[]  EMPTY_CHAR_ARRAY  
[P2_Replace_Operator]^if  ( ascii == null && ascii.length == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii != null || ascii.length == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii == null || ascii.length != 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^if  ( ascii == null || ascii.length == BIT_4 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii == null || BIT_5 == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii.length == null || ascii == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( ascii == null ) {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  (  ascii.length == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  ( ascii == true || ii == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P9_Replace_Statement]^if  ( raw == null || raw.length == 0 )  {^167^^^^^166^184^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;^167^168^169^^^166^184^if  ( ascii == null || ascii.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P16_Remove_Block]^^167^168^169^^^166^184^if  ( ascii == null || ascii.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^167^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^return raw;^168^^^^^166^184^return EMPTY_BYTE_ARRAY;^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^168^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^168^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^168^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^168^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^byte[] l_raw = new byte[ascii.length  <  3];^171^^^^^166^184^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^byte[] l_raw = new byte[ascii.length >> 4];^171^^^^^166^184^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^byte[] l_raw = new byte[ii >> 3];^171^^^^^166^184^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^byte[] l_raw = new byte[BIT_6 >> 3];^171^^^^^166^184^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^char[] l_ascii = new char[raw.length << 3];byte[] l_raw = new byte[ascii.length >> 3];^171^^^^^166^184^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^byte[] l_ascii = new byte[raw.length << 3];byte[] l_raw = new byte[ascii.length >> 3];^171^^^^^166^184^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj - bits] <= '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  |  bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[bits - bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[jj - ii] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( bits[jj - ascii] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( jj - bits )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  ( ascii[jj - BIT_7] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P15_Unwrap_Block]^l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];^178^179^180^^^166^184^if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P16_Remove_Block]^^178^179^180^^^166^184^if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^178^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^178^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^178^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^178^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^178^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^178^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_raw[ii] | =  l_raw[ii] |;^179^^^^^166^184^l_raw[ii] |= BITS[bits];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^179^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^179^^^^^166^184^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  short  ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length   instanceof   1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length - 1; ii <= l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length  >  1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj = 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = jj, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = ascii.length ; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= BIT_0 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 5, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int jj = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, BIT_6 = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = BIT_5 - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length - 1; ii < jj; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.BIT_7 - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0 = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ascii = 0, jj = ii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ascii.length = 0, jj = ii - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_raw - 1; ii < ascii.length.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int jj = 0, ii = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, ascii.length = jj - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, l_raw.length = ascii.length - 1; ii < jj; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = EMPTY_CHAR_ARRAY.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  <=  bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( EMPTY_CHAR_ARRAY[jj - bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[BIT_6 - bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[jj - BIT_6] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_raw[ii] | = null ;^179^^^^^166^184^l_raw[ii] |= BITS[bits];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  short  bits = 0; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int bits = 0; bits == BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = 3; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int BIT_5 = 0; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj - bits] > '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  >=  bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[BIT_5 - bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  long  bits = 0; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = 9; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = -2; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int BITS = 0; bits < bits.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int BIT_7 = 0; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  <  bits] == '1' )  {^178^^^^^166^184^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_raw[ii] |;^179^^^^^166^184^l_raw[ii] |= BITS[bits];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 4 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 0  )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = BIT_0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length  &  1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii - 1; ii < l_raw.length; ii++, jj -= 8 )  {^176^^^^^166^184^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = -8; bits < BITS.length; ++bits )  {^177^^^^^166^184^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^return raw;^183^^^^^166^184^return l_raw;^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   char[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii == null && ascii.length == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii != null || ascii.length == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii == null || ascii.length != 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^if  ( ascii == null || ascii.length == ii )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( raw == null || ascii.length == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii == null || jj == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( ascii == null ) {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  (  ascii.length == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  ( ascii == false || ascii.length == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P9_Replace_Statement]^if  ( raw == null || raw.length == 0 )  {^194^^^^^193^211^if  ( ascii == null || ascii.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;^194^195^196^^^193^211^if  ( ascii == null || ascii.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P16_Remove_Block]^^194^195^196^^^193^211^if  ( ascii == null || ascii.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^194^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^return raw;^195^^^^^193^211^return EMPTY_BYTE_ARRAY;^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^195^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^195^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^195^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^195^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^byte[] l_raw = new byte[ascii.length  <  3];^198^^^^^193^211^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^byte[] l_raw = new byte[ascii.length >> BIT_3];^198^^^^^193^211^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^byte[] l_raw = new byte[BIT_5 >> 3];^198^^^^^193^211^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^byte[] l_raw = new byte[BIT_7 >> 3];^198^^^^^193^211^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^char[] l_ascii = new char[raw.length << 3];byte[] l_raw = new byte[ascii.length >> 3];^198^^^^^193^211^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^byte[] l_ascii = new byte[raw.length << 3];byte[] l_raw = new byte[ascii.length >> 3];^198^^^^^193^211^byte[] l_raw = new byte[ascii.length >> 3];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj - bits] <= '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  |  bits] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( raw[jj - bits] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[BIT_6 - bits] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( jj - bits )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  ( ascii[jj - BIT_6] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P15_Unwrap_Block]^l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.BITS[bits];^205^206^207^^^193^211^if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P16_Remove_Block]^^205^206^207^^^193^211^if  ( ascii[jj - bits] == '1' )  { l_raw[ii] |= BITS[bits]; }^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^205^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^205^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^205^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^205^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^205^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^205^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_raw[ii] |;^206^^^^^193^211^l_raw[ii] |= BITS[bits];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^206^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^206^^^^^193^211^[Delete]^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  short  ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length  ==  1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length - 1; ii > l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length - 1; ii <= l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length  <<  1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj += 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = -2, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = ascii.length ; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= jj )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = -1, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = raw.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int BIT_5 = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, bits = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = BIT_7 - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length - 1; ii < BIT_6; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.BIT_5 - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0 = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ascii = 0, jj = ii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int l_raw.length = 0, jj = ascii.length - 1; ii < ii; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_raw.length - 1; ii < ascii.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, l_raw.length = ascii.length - 1; ii < jj; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj - bits] >= '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  &&  bits] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[BIT_5 - bits] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( bits[jj - ascii] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  short  bits = 0; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int bits = 0; bits > BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = BIT_0; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int BIT_6 = 0; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int jj = 0; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj - bits] > '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( ascii[jj  !=  bits] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( ascii[jj - BIT_5] == '1' )  {^205^^^^^193^211^if  ( ascii[jj - bits] == '1' )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_raw[ii] | = null ;^206^^^^^193^211^l_raw[ii] |= BITS[bits];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = ii; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = BIT_2; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_raw[ii] | =  l_raw[ii] |;^206^^^^^193^211^l_raw[ii] |= BITS[bits];^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj = 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= -1 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 0  )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = -5, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = ascii.length  &  1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = bits - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = BIT_5 - 1; ii < l_raw.length; ii++, jj -= 8 )  {^203^^^^^193^211^for  ( int ii = 0, jj = ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  long  bits = 0; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = BIT_6; bits < BITS.length; ++bits )  {^204^^^^^193^211^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^return raw;^210^^^^^193^211^return l_raw;^[CLASS] BinaryCodec  [METHOD] fromAscii [RETURN_TYPE] byte[]   byte[] ascii [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( raw == null && raw.length == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( raw != null || raw.length == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( raw == null || raw.length != 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^if  ( raw == null || raw.length == BIT_7 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( l_raw == null || raw.length == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( raw == null || BIT_7 == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  ( raw.length == null || raw == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( raw == null ) {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  (  raw.length == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P9_Replace_Statement]^if  ( ascii == null || ascii.length == 0 )  {^223^^^^^222^242^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY;^223^224^225^^^222^242^if  ( raw == null || raw.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P16_Remove_Block]^^223^224^225^^^222^242^if  ( raw == null || raw.length == 0 )  { return EMPTY_BYTE_ARRAY; }^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^223^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^return raw;^224^^^^^222^242^return EMPTY_BYTE_ARRAY;^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^224^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^224^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^224^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^224^^^^^222^242^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^byte[] l_ascii = new byte[raw.length   instanceof   3];^227^^^^^222^242^byte[] l_ascii = new byte[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^byte[] l_ascii = new byte[raw.length << 8];^227^^^^^222^242^byte[] l_ascii = new byte[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^byte[] l_ascii = new byte[BIT_5 << 3];^227^^^^^222^242^byte[] l_ascii = new byte[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^byte[] l_raw = new byte[ascii.length >> 3];byte[] l_ascii = new byte[raw.length << 3];^227^^^^^222^242^byte[] l_ascii = new byte[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^char[] l_ascii = new char[raw.length << 3];byte[] l_ascii = new byte[raw.length << 3];^227^^^^^222^242^byte[] l_ascii = new byte[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  (  ( raw[ii] & BITS[bits] )  != 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]  <<  BITS[bits] )  == 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^if  (  ( raw[ii] & BITS[bits] )  == -1 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  (  ( l_ascii[ii] & BITS[bits] )  == 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  (  ( BITS[ii] & raw[bits] )  == 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( (raw[ii] & BITS[bits]) )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P6_Replace_Expression]^if  ( jj - bits )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  (  ( raw[ii] & BITS[bits] )  == 0 + 3 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P15_Unwrap_Block]^l_ascii[(jj - bits)] = '0';^234^235^236^237^238^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1'; }^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P16_Remove_Block]^^234^235^236^237^238^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1'; }^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  <  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[BIT_5 - bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_6] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  =  l_ascii[jj - bits] ;^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^l_ascii[jj - bits] = '0';l_ascii[jj - bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P12_Insert_Condition]^if  ( ascii[jj - bits] == '1' )  { l_ascii[jj - bits] = '1'; }^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  ^  bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[bits - bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_6] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  =  l_ascii[jj - bits] ;^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P11_Insert_Donor_Statement]^l_ascii[jj - bits] = '1';l_ascii[jj - bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P12_Insert_Condition]^if  ( ascii[jj - bits] == '1' )  { l_ascii[jj - bits] = '0'; }^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  short  ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  >=  1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii > raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii <= raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  ^  1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  &  1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj += 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 6, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length - ii; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = jj, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = -8, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = raw.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int bits = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, BIT_6 = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = BIT_5 - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < BIT_5; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.BIT_5 - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0 = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = raw.length - 1; ii < l_ascii.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int raw.length = 0, jj = l_ascii.length - 1; ii < ii; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, l_ascii.length = jj - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int l_ascii.length = 0, jj = ii - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  (  ( raw[ii] & BITS[bits] )  > 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]  >=  BITS[bits] )  == 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^if  (  ( raw[ii] & BITS[bits] )  == 6 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^if  (  ( l_raw[ii] & BITS[bits] )  == 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  (  ( raw[ii] & BITS[bits] )  == 1 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  ||  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[BIT_6 - bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  = null ;^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj   instanceof   bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[BIT_7 - bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_7] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  = null ;^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  short  bits = 0; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int bits = 0; bits > BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = -5; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = ; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int BITS = 0; bits < bits.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int BIT_5 = 0; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^if  (  ( raw[ii] & BITS[bits] )  == BIT_5 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^if  (  ( l_raw[ii] & BITS[bits] )  == 4 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  ^  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[ii - bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_5] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  <<  bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[BIT_5 - bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - ii] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  ==  bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_7] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  |  bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  >  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_ascii[jj - bits] ;^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P1_Replace_Type]^for  (  long  bits = 0; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = -6; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int bits = 0; bits == BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = 3; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]  ==  BITS[bits] )  == 0 )  {^234^^^^^222^242^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  |  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[BIT_7 - bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  ||  bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[ii - bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^l_ascii[jj - bits] ;^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  >>  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[jj - ii] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj = 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 3 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 0  )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^l_ascii[BIT_6 - bits] = '0';^235^^^^^222^242^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^l_ascii[jj  &&  bits] = '1';^237^^^^^222^242^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = bits, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  >>  1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length - BIT_4; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = bits - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length.length - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = BIT_7 - 1; ii < raw.length; ii++, jj -= 8 )  {^232^^^^^222^242^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P3_Replace_Literal]^for  ( int bits = jj; bits < BITS.length; ++bits )  {^233^^^^^222^242^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P5_Replace_Variable]^return l_raw;^241^^^^^222^242^return l_ascii;^[CLASS] BinaryCodec  [METHOD] toAsciiBytes [RETURN_TYPE] byte[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  
[P2_Replace_Operator]^if  ( raw == null && raw.length == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  ( raw != null || raw.length == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  ( raw == null || raw.length != 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^if  ( raw == null || raw.length ==  )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^if  ( raw == null || BIT_6 == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^if  ( raw.length == null || raw == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P6_Replace_Expression]^if  ( raw == null ) {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P6_Replace_Expression]^if  (  raw.length == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^if  ( raw == true || raw.length == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P9_Replace_Statement]^if  ( ascii == null || ascii.length == 0 )  {^253^^^^^252^272^if  ( raw == null || raw.length == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P15_Unwrap_Block]^return org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY;^253^254^255^^^252^272^if  ( raw == null || raw.length == 0 )  { return EMPTY_CHAR_ARRAY; }^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P16_Remove_Block]^^253^254^255^^^252^272^if  ( raw == null || raw.length == 0 )  { return EMPTY_CHAR_ARRAY; }^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  ( ascii instanceof byte[] )  {     return fromAscii (  (  ( byte[] )   ( ascii )  )  ) ; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  ( ascii instanceof String )  {     return fromAscii (  (  ( String )   ( ascii )  ) .toCharArray (  )  ) ; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  ( ascii instanceof char[] )  {     return fromAscii (  (  ( char[] )   ( ascii )  )  ) ; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  (  ( ascii[ ( jj - bits ) ] )  == '1' )  {     l_raw[ii] |= BITS[bits]; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^253^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^return l_ascii;^254^^^^^252^272^return EMPTY_CHAR_ARRAY;^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  (  ( ascii == null )  ||  (  ( ascii.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^254^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_CHAR_ARRAY; }^254^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  ( ascii == null )  {     return EMPTY_BYTE_ARRAY; }^254^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P13_Insert_Block]^if  (  ( raw == null )  ||  (  ( raw.length )  == 0 )  )  {     return EMPTY_BYTE_ARRAY; }^254^^^^^252^272^[Delete]^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^char[] l_ascii = new char[raw.length   instanceof   3];^257^^^^^252^272^char[] l_ascii = new char[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^char[] l_ascii = new char[raw.length << 12];^257^^^^^252^272^char[] l_ascii = new char[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^char[] l_ascii = new char[BIT_6 << 3];^257^^^^^252^272^char[] l_ascii = new char[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P11_Insert_Donor_Statement]^byte[] l_raw = new byte[ascii.length >> 3];char[] l_ascii = new char[raw.length << 3];^257^^^^^252^272^char[] l_ascii = new char[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P11_Insert_Donor_Statement]^byte[] l_ascii = new byte[raw.length << 3];char[] l_ascii = new char[raw.length << 3];^257^^^^^252^272^char[] l_ascii = new char[raw.length << 3];^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  (  ( raw[ii] & BITS[bits] )  != 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]  ^  BITS[bits] )  == 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^if  (  ( l_raw[ii] & BITS[bits] )  == 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^if  (  ( BITS[ii] & raw[bits] )  == 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P6_Replace_Expression]^if  ( (raw[ii] & BITS[bits]) )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P6_Replace_Expression]^if  ( jj - bits )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^if  (  ( raw[ii] & BITS[bits] )  == 4 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P15_Unwrap_Block]^l_ascii[(jj - bits)] = '0';^264^265^266^267^268^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1'; }^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P16_Remove_Block]^^264^265^266^267^268^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  { l_ascii[jj - bits] = '0'; } else { l_ascii[jj - bits] = '1'; }^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  !=  bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[BIT_5 - bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - ii] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  =  l_ascii[jj - bits] ;^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P11_Insert_Donor_Statement]^l_ascii[jj - bits] = '0';l_ascii[jj - bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P12_Insert_Condition]^if  ( ascii[jj - bits] == '1' )  { l_ascii[jj - bits] = '1'; }^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj   instanceof   bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[BIT_5 - bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_7] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^l_ascii[jj - bits] ;^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P11_Insert_Donor_Statement]^l_ascii[jj - bits] = '1';l_ascii[jj - bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P12_Insert_Condition]^if  ( ascii[jj - bits] == '1' )  { l_ascii[jj - bits] = '0'; }^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P1_Replace_Type]^for  (  long  ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  <<  1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii > raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii <= raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  <=  1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj += 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = -2, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length ; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 13 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = BIT_3, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = -1, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int BIT_5 = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < l_raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = BIT_6 - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < BIT_5; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.BIT_5 - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0 = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int l_ascii = 0, jj = ii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int raw.length = 0, jj = l_ascii.length - 1; ii < ii; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, raw.length = l_ascii.length - 1; ii < jj; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^for  ( int ii = 0, BIT_5 = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]  !=  BITS[bits] )  == 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^if  (  ( raw[ii] & BITS[bits] )  == 3 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^if  (  ( raw[ii] & BITS[bits] )  == 2 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  ^  bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[ii - bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_6] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  ||  bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - ii] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  =  l_ascii[jj - bits] ;^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P1_Replace_Type]^for  (  long  bits = 0; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int bits = 0; bits <= BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int bits = 9; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int bits = -2; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int BIT_5 = 0; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  (  ( raw[ii] & BITS[bits] )  < 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]   instanceof   BITS[bits] )  == 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^if  (  ( raw[ii] & BITS[bits] )  == -3 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^if  (  ( raw[ii] & BITS[bits] )  == 0L )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  >=  bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[BIT_6 - bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_7] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  = null ;^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  >  bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[BIT_7 - bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_6] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_5] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^l_ascii[jj - bits]  = null ;^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  <  bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - jj] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  &  bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[BIT_7 - bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int bits = BIT_2; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int bits = 0; bits > BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int bits = BIT_0; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int bits = -8; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^for  ( int jj = 0; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^if  (  ( raw[ii]  |  BITS[bits] )  == 0 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^if  (  ( raw[ii] & BITS[bits] )  == BIT_1 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^if  (  ( l_ascii[ii] & BITS[bits] )  == 0 << 3 )  {^264^^^^^252^272^if  (  ( raw[ii] & BITS[bits] )  == 0 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  ==  bits] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  <<  bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  &  bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[ii - bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[jj - BIT_5] = '1';^267^^^^^252^272^l_ascii[jj - bits] = '1';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P1_Replace_Type]^for  (  short  ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj = 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -=  )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 0  )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^l_ascii[jj  ==  bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^l_ascii[bits - bits] = '0';^265^^^^^252^272^l_ascii[jj - bits] = '0';^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = BIT_2, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P2_Replace_Operator]^for  ( int ii = 0, jj = l_ascii.length  !=  1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int ii = 0, jj = l_ascii.length - BIT_1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = BIT_7 - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii.length.length - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^for  ( int ii = 0, jj = l_ascii - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P8_Replace_Mix]^for  ( int ii = 0, jj = BIT_5 - 1; ii < raw.length; ii++, jj -= 8 )  {^262^^^^^252^272^for  ( int ii = 0, jj = l_ascii.length - 1; ii < raw.length; ii++, jj -= 8 )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P1_Replace_Type]^for  (  short  bits = 0; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P3_Replace_Literal]^for  ( int bits = -5; bits < BITS.length; ++bits )  {^263^^^^^252^272^for  ( int bits = 0; bits < BITS.length; ++bits )  {^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^return ascii;^271^^^^^252^272^return l_ascii;^[CLASS] BinaryCodec  [METHOD] toAsciiChars [RETURN_TYPE] char[]   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P1_Replace_Type]^return new char ( toAsciiChars ( raw )  ) ;^283^^^^^282^284^return new String ( toAsciiChars ( raw )  ) ;^[CLASS] BinaryCodec  [METHOD] toAsciiString [RETURN_TYPE] String   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P5_Replace_Variable]^return new String ( toAsciiChars ( l_raw )  ) ;^283^^^^^282^284^return new String ( toAsciiChars ( raw )  ) ;^[CLASS] BinaryCodec  [METHOD] toAsciiString [RETURN_TYPE] String   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P7_Replace_Invocation]^return new String ( toAsciiBytes ( raw )  ) ;^283^^^^^282^284^return new String ( toAsciiChars ( raw )  ) ;^[CLASS] BinaryCodec  [METHOD] toAsciiString [RETURN_TYPE] String   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
[P14_Delete_Statement]^^283^^^^^282^284^return new String ( toAsciiChars ( raw )  ) ;^[CLASS] BinaryCodec  [METHOD] toAsciiString [RETURN_TYPE] String   byte[] raw [VARIABLES] byte[]  EMPTY_BYTE_ARRAY  ascii  l_ascii  l_raw  raw  int[]  BITS  boolean  int  BIT_0  BIT_1  BIT_2  BIT_3  BIT_4  BIT_5  BIT_6  BIT_7  bits  ii  jj  char[]  EMPTY_CHAR_ARRAY  ascii  l_ascii  
