[P1_Replace_Type]^private static final  int  serialVersionUID = -5593383832225844641L;^40^^^^^35^45^private static final long serialVersionUID = -5593383832225844641L;^[CLASS] Max   [VARIABLES] 
[P8_Replace_Mix]^private static  long serialVersionUID = -5593383832225844641;^40^^^^^35^45^private static final long serialVersionUID = -5593383832225844641L;^[CLASS] Max   [VARIABLES] 
[P1_Replace_Type]^private  short  n;^43^^^^^38^48^private long n;^[CLASS] Max   [VARIABLES] 
[P1_Replace_Type]^private int value;^46^^^^^41^51^private double value;^[CLASS] Max   [VARIABLES] 
[P3_Replace_Literal]^n = 1;^52^^^^^51^54^n = 0;^[CLASS] Max  [METHOD] <init> [RETURN_TYPE] Max()   [VARIABLES] double  value  long  n  serialVersionUID  boolean  
[P8_Replace_Mix]^n = 3;^52^^^^^51^54^n = 0;^[CLASS] Max  [METHOD] <init> [RETURN_TYPE] Max()   [VARIABLES] double  value  long  n  serialVersionUID  boolean  
[P8_Replace_Mix]^value  = null ;^53^^^^^51^54^value = Double.NaN;^[CLASS] Max  [METHOD] <init> [RETURN_TYPE] Max()   [VARIABLES] double  value  long  n  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^value = d;value = Double.NaN;^53^^^^^51^54^value = Double.NaN;^[CLASS] Max  [METHOD] <init> [RETURN_TYPE] Max()   [VARIABLES] double  value  long  n  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( d > value && Double.isNaN ( value )  )  {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( d >= value || Double.isNaN ( value )  )  {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( value > d || Double.isNaN ( value )  )  {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( d > value ) {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P6_Replace_Expression]^if  (  Double.isNaN ( value )  )  {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P15_Unwrap_Block]^value = d;^60^61^62^^^59^64^if  ( d > value || Double.isNaN ( value )  )  { value = d; }^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P16_Remove_Block]^^60^61^62^^^59^64^if  ( d > value || Double.isNaN ( value )  )  { value = d; }^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P5_Replace_Variable]^value = value;^61^^^^^59^64^value = d;^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P8_Replace_Mix]^value =  null;^61^^^^^59^64^value = d;^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^value = Double.NaN;value = d;^61^^^^^59^64^value = d;^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( d > d || Double.isNaN ( value )  )  {^60^^^^^59^64^if  ( d > value || Double.isNaN ( value )  )  {^[CLASS] Max  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P8_Replace_Mix]^value ;^70^^^^^69^72^value = Double.NaN;^[CLASS] Max  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^value = d;value = Double.NaN;^70^^^^^69^72^value = Double.NaN;^[CLASS] Max  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P3_Replace_Literal]^n = 2;^71^^^^^69^72^n = 0;^[CLASS] Max  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P8_Replace_Mix]^n = 0 - 0;^71^^^^^69^72^n = 0;^[CLASS] Max  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P5_Replace_Variable]^return d;^78^^^^^77^79^return value;^[CLASS] Max  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P5_Replace_Variable]^return serialVersionUID;^85^^^^^84^86^return n;^[CLASS] Max  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] double  d  value  long  n  serialVersionUID  boolean  
[P1_Replace_Type]^int max = Double.NaN;^111^^^^^110^121^double max = Double.NaN;^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, length, length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, begin, begin )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test (  begin, length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values,  length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, begin )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( length, begin, values )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, length, begin )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( begin + length )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( max > values[i] )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P15_Unwrap_Block]^max = values[begin]; for (int i = begin; i < (begin + length); i++) {    if (!(java.lang.Double.isNaN(values[i]))) {        max = (max > (values[i])) ? max : values[i];    }};^112^113^114^115^116^110^121^if  ( test ( values, begin, length )  )  { max = values[begin]; for  ( int i = begin; i < begin + length; i++ )  { if  ( !Double.isNaN ( values[i] )  )  { max =  ( max > values[i] )  ? max : values[i]; }^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P16_Remove_Block]^^112^113^114^115^116^110^121^if  ( test ( values, begin, length )  )  { max = values[begin]; for  ( int i = begin; i < begin + length; i++ )  { if  ( !Double.isNaN ( values[i] )  )  { max =  ( max > values[i] )  ? max : values[i]; }^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^if  ( Double.isNaN ( values[i] )  )  {^115^^^^^110^121^if  ( !Double.isNaN ( values[i] )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P15_Unwrap_Block]^max = (max > (values[i])) ? max : values[i];^115^116^117^^^110^121^if  ( !Double.isNaN ( values[i] )  )  { max =  ( max > values[i] )  ? max : values[i]; }^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P16_Remove_Block]^^115^116^117^^^110^121^if  ( !Double.isNaN ( values[i] )  )  { max =  ( max > values[i] )  ? max : values[i]; }^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^max =  ( max < values[i] )  ? max : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^max =  ( value > values[i] )  ? max : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^max =  ( values > max[i] )  ? max : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^max  =  values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^max  =  max ;^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^max =   ( value > values[i] )  ? value : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^for  (  short  i = begin; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  !=  ( int i = begin; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = length; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = begin; i < begin + begin; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^max =  ( max >= values[i] )  ? max : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^max =  null[begin];^113^^^^^110^121^max = values[begin];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^for  (  long  i = begin; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ( int i = begin; i > begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  |  ( int i = begin; i < begin + length; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = length; i < begin + begin; i++ )  {^114^^^^^110^121^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^max =   ( null > values[i] )  ? null : values[i];^116^^^^^110^121^max =  ( max > values[i] )  ? max : values[i];^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, i, length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, begin, i )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( begin, values, length )  )  {^112^^^^^110^121^if  ( test ( values, begin, length )  )  {^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^return value;^120^^^^^110^121^return max;^[CLASS] Max  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  max  value  long  n  serialVersionUID  int  begin  i  length  
