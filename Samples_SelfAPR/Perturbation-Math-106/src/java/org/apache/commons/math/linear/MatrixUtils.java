[P14_Delete_Statement]^^32^^^^^31^33^super (  ) ;^[CLASS] MatrixUtils  [METHOD] <init> [RETURN_TYPE] MatrixUtils()   [VARIABLES] boolean  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( dimension, dimension )  ;^46^^^^^45^47^return new RealMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRealMatrix [RETURN_TYPE] RealMatrix   double[][] data [VARIABLES] boolean  double[][]  data  
[P8_Replace_Mix]^return  new RealMatrixImpl ( dimension, dimension )  ;^46^^^^^45^47^return new RealMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRealMatrix [RETURN_TYPE] RealMatrix   double[][] data [VARIABLES] boolean  double[][]  data  
[P4_Replace_Constructor]^RealMatrixImpl out = new BigMatrixImpl ( dimension, dimension )  ;^58^^^^^57^66^RealMatrixImpl out = new RealMatrixImpl ( dimension, dimension ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^RealMatrixImpl out = new RealMatrixImpl ( row, dimension ) ;^58^^^^^57^66^RealMatrixImpl out = new RealMatrixImpl ( dimension, dimension ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P11_Insert_Donor_Statement]^BigMatrixImpl out = new BigMatrixImpl ( dimension, dimension ) ;RealMatrixImpl out = new RealMatrixImpl ( dimension, dimension ) ;^58^^^^^57^66^RealMatrixImpl out = new RealMatrixImpl ( dimension, dimension ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P7_Replace_Invocation]^double[][] d = out.RealMatrixImpl (  ) ;^59^^^^^57^66^double[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P11_Insert_Donor_Statement]^BigDecimal[][] d = out.getDataRef (  ) ;double[][] d = out.getDataRef (  ) ;^59^^^^^57^66^double[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P7_Replace_Invocation]^double[][] d = out .RealMatrixImpl ( d )  ;^59^^^^^57^66^double[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P14_Delete_Statement]^^59^^^^^57^66^double[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P1_Replace_Type]^for  (  long  row = 0; row < dimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P2_Replace_Operator]^for  ( int row = 0; row <= dimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P3_Replace_Literal]^for  ( int row = -5; row < dimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int row = 0; row < col; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int dimension = 0; row < row; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int row = 0; row < dimensionimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P8_Replace_Mix]^for  ( int dimension = 0; row < dimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P1_Replace_Type]^for  (  long  col = 0; col < dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P2_Replace_Operator]^for  ( int col = 0; col <= dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P3_Replace_Literal]^for  ( int col = -1; col < dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int row = 0; col < dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int col = 0; col < row; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int dimension = 0; col < col; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int col = 0; col < d; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^for  ( int d = 0; col < colimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P2_Replace_Operator]^d[row][col] = row != col ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^d[row][col] = dimension == col ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^d[row][col] = row == row ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^d[row][col] = col == row ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P6_Replace_Expression]^d[row][col] = row ( 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P8_Replace_Mix]^d[row][col]  =  d[row][col] ;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P2_Replace_Operator]^d[row][col] = row <= col ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P5_Replace_Variable]^d[row][col] = row == dimension ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P8_Replace_Mix]^d[row][col] ;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P2_Replace_Operator]^for  ( int col = 0; col > dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P3_Replace_Literal]^for  ( int col = 2; col < dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P2_Replace_Operator]^d[row][col] = row < col ? 1d : 0d;^62^^^^^57^66^d[row][col] = row == col ? 1d : 0d;^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P1_Replace_Type]^for  (  short  row = 0; row < dimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P3_Replace_Literal]^for  ( int row = 7; row < dimension; row++ )  {^60^^^^^57^66^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P1_Replace_Type]^for  (  short  col = 0; col < dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P3_Replace_Literal]^for  ( int col = row; col < dimension; col++ )  {^61^^^^^57^66^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createRealIdentityMatrix [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] boolean  double[][]  d  RealMatrixImpl  out  int  col  dimension  row  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^79^^^^^78^80^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createBigMatrix [RETURN_TYPE] BigMatrix   double[][] data [VARIABLES] boolean  double[][]  data  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^79^^^^^78^80^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createBigMatrix [RETURN_TYPE] BigMatrix   double[][] data [VARIABLES] boolean  double[][]  data  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^93^^^^^92^94^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[][] data [VARIABLES] boolean  BigDecimal[][]  data  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^93^^^^^92^94^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[][] data [VARIABLES] boolean  BigDecimal[][]  data  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^107^^^^^106^108^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createBigMatrix [RETURN_TYPE] BigMatrix   String[][] data [VARIABLES] boolean  String[][]  data  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^107^^^^^106^108^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createBigMatrix [RETURN_TYPE] BigMatrix   String[][] data [VARIABLES] boolean  String[][]  data  
[P1_Replace_Type]^short  nCols = rowData.length;^120^^^^^119^124^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^int nCols = rowData.length.length;^120^^^^^119^124^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^int nCols = rowData;^120^^^^^119^124^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^int nRows = columnData.length;int nCols = rowData.length;^120^^^^^119^124^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P3_Replace_Literal]^double[][] data = new double[nCols][nCols];^121^^^^^119^124^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[1][nCols];double[][] data = new double[1][nCols];^121^^^^^119^124^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^String[][] data = new String[1][nCols];double[][] data = new double[1][nCols];^121^^^^^119^124^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^double[][] data = new double[nRows][1];double[][] data = new double[1][nCols];^121^^^^^119^124^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P3_Replace_Literal]^System.arraycopy ( rowData, -1, data[-1], -1, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P3_Replace_Literal]^System.arraycopy ( rowData, 9, data[9], 9, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P3_Replace_Literal]^System.arraycopy ( rowData, nCols, data[nCols], nCols, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy (  0, data[0], 0, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( data, 0, rowData[0], 0, nCols ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P14_Delete_Statement]^^122^^^^^119^124^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( dimension, dimension )  ;^123^^^^^119^124^return new RealMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P8_Replace_Mix]^return  new RealMatrixImpl ( dimension, dimension )  ;^123^^^^^119^124^return new RealMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowRealMatrix [RETURN_TYPE] RealMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P1_Replace_Type]^short  nCols = rowData.length;^136^^^^^135^140^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^int nCols = rowData.length.length;^136^^^^^135^140^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^int nCols = rowData;^136^^^^^135^140^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^int nRows = columnData.length;int nCols = rowData.length;^136^^^^^135^140^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P3_Replace_Literal]^double[][] data = new double[nCols][nCols];^137^^^^^135^140^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[1][nCols];double[][] data = new double[1][nCols];^137^^^^^135^140^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^String[][] data = new String[1][nCols];double[][] data = new double[1][nCols];^137^^^^^135^140^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P11_Insert_Donor_Statement]^double[][] data = new double[nRows][1];double[][] data = new double[1][nCols];^137^^^^^135^140^double[][] data = new double[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P3_Replace_Literal]^System.arraycopy ( rowData, nCols, data[nCols], nCols, nCols ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy (  0, data[0], 0, nCols ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( data, 0, rowData[0], 0, nCols ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P14_Delete_Statement]^^138^^^^^135^140^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^139^^^^^135^140^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^139^^^^^135^140^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   double[] rowData [VARIABLES] boolean  double[]  rowData  double[][]  data  int  nCols  
[P1_Replace_Type]^long  nCols = rowData.length;^152^^^^^151^156^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^int nCols = rowData.length.length;^152^^^^^151^156^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^int nCols = rowData;^152^^^^^151^156^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^int nRows = columnData.length;int nCols = rowData.length;^152^^^^^151^156^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P3_Replace_Literal]^BigDecimal[][] data = new BigDecimal[nCols][nCols];^153^^^^^151^156^BigDecimal[][] data = new BigDecimal[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^double[][] data = new double[1][nCols];BigDecimal[][] data = new BigDecimal[1][nCols];^153^^^^^151^156^BigDecimal[][] data = new BigDecimal[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^String[][] data = new String[1][nCols];BigDecimal[][] data = new BigDecimal[1][nCols];^153^^^^^151^156^BigDecimal[][] data = new BigDecimal[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[nRows][1];BigDecimal[][] data = new BigDecimal[1][nCols];^153^^^^^151^156^BigDecimal[][] data = new BigDecimal[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P3_Replace_Literal]^System.arraycopy ( rowData, -2, data[-2], -2, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P3_Replace_Literal]^System.arraycopy ( rowData, -7, data[-7], -7, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P3_Replace_Literal]^System.arraycopy ( rowData, nCols, data[nCols], nCols, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^System.arraycopy (  0, data[0], 0, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^System.arraycopy ( nCols, 0, data[0], 0, rowData ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P14_Delete_Statement]^^154^^^^^151^156^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^155^^^^^151^156^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^155^^^^^151^156^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] rowData [VARIABLES] boolean  BigDecimal[]  rowData  int  nCols  BigDecimal[][]  data  
[P1_Replace_Type]^long  nCols = rowData.length;^168^^^^^167^172^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^int nCols = rowData.length.length;^168^^^^^167^172^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^int nCols = rowData;^168^^^^^167^172^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P11_Insert_Donor_Statement]^int nRows = columnData.length;int nCols = rowData.length;^168^^^^^167^172^int nCols = rowData.length;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P3_Replace_Literal]^String[][] data = new String[nCols][nCols];^169^^^^^167^172^String[][] data = new String[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[1][nCols];String[][] data = new String[1][nCols];^169^^^^^167^172^String[][] data = new String[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P11_Insert_Donor_Statement]^String[][] data = new String[nRows][1];String[][] data = new String[1][nCols];^169^^^^^167^172^String[][] data = new String[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P11_Insert_Donor_Statement]^double[][] data = new double[1][nCols];String[][] data = new String[1][nCols];^169^^^^^167^172^String[][] data = new String[1][nCols];^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P3_Replace_Literal]^System.arraycopy ( rowData, nCols, data[nCols], nCols, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P3_Replace_Literal]^System.arraycopy ( rowData, 6, data[6], 6, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^System.arraycopy (  0, data[0], 0, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0[0], 0, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, data[0], 0 ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( data, 0, rowData[0], 0, nCols ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P5_Replace_Variable]^System.arraycopy ( rowData, 0, nCols[0], 0, data ) ;^170^^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P14_Delete_Statement]^^170^171^^^^167^172^System.arraycopy ( rowData, 0, data[0], 0, nCols ) ; return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^171^^^^^167^172^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^171^^^^^167^172^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createRowBigMatrix [RETURN_TYPE] BigMatrix   String[] rowData [VARIABLES] boolean  String[][]  data  String[]  rowData  int  nCols  
[P1_Replace_Type]^short  nRows = columnData.length;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^int nRows = row;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^int nRows = columnData.length.length;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^int nRows = columnData;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^int nCols = rowData.length;int nRows = columnData.length;^184^^^^^183^190^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^double[][] data = new double[nRows][row];^185^^^^^183^190^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^String[][] data = new String[nRows][1];double[][] data = new double[nRows][1];^185^^^^^183^190^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^double[][] data = new double[1][nCols];double[][] data = new double[nRows][1];^185^^^^^183^190^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[nRows][1];double[][] data = new double[nRows][1];^185^^^^^183^190^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = row; row < nRows; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = 7; row < nRows; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^186^^^^^183^190^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^data[row][nRows] = columnData[row];^187^^^^^183^190^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P8_Replace_Mix]^data[row][1] = columnData[row];^187^^^^^183^190^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^data[row][2] = columnData[row];^187^^^^^183^190^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P8_Replace_Mix]^data[row][0 * 4] = columnData[row];^187^^^^^183^190^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( dimension, dimension )  ;^189^^^^^183^190^return new RealMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P8_Replace_Mix]^return  new RealMatrixImpl ( dimension, dimension )  ;^189^^^^^183^190^return new RealMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnRealMatrix [RETURN_TYPE] RealMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P1_Replace_Type]^short  nRows = columnData.length;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^int nRows = row;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^int nRows = columnData.length.length;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^int nRows = columnData;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^int nCols = rowData.length;int nRows = columnData.length;^202^^^^^201^208^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^double[][] data = new double[nRows][-8];^203^^^^^201^208^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^String[][] data = new String[nRows][1];double[][] data = new double[nRows][1];^203^^^^^201^208^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^double[][] data = new double[1][nCols];double[][] data = new double[nRows][1];^203^^^^^201^208^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[nRows][1];double[][] data = new double[nRows][1];^203^^^^^201^208^double[][] data = new double[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = -4; row < nRows; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = 4; row < nRows; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^data[row][row] = columnData[row];^205^^^^^201^208^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P8_Replace_Mix]^data[row][2] = columnData[row];^205^^^^^201^208^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^data[row][9] = columnData[row];^205^^^^^201^208^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P8_Replace_Mix]^data[row][0 % 3] = columnData[row];^205^^^^^201^208^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = -5; row < nRows; row++ )  {^204^^^^^201^208^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^207^^^^^201^208^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^207^^^^^201^208^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   double[] columnData [VARIABLES] boolean  double[]  columnData  double[][]  data  int  nRows  row  
[P1_Replace_Type]^short  nRows = columnData.length;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P5_Replace_Variable]^int nRows = columnData.length.length;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P5_Replace_Variable]^int nRows = columnData;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P8_Replace_Mix]^int nRows = row;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^int nCols = rowData.length;int nRows = columnData.length;^220^^^^^219^226^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P3_Replace_Literal]^BigDecimal[][] data = new BigDecimal[nRows][-5];^221^^^^^219^226^BigDecimal[][] data = new BigDecimal[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[1][nCols];BigDecimal[][] data = new BigDecimal[nRows][1];^221^^^^^219^226^BigDecimal[][] data = new BigDecimal[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^String[][] data = new String[nRows][1];BigDecimal[][] data = new BigDecimal[nRows][1];^221^^^^^219^226^BigDecimal[][] data = new BigDecimal[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P11_Insert_Donor_Statement]^double[][] data = new double[nRows][1];BigDecimal[][] data = new BigDecimal[nRows][1];^221^^^^^219^226^BigDecimal[][] data = new BigDecimal[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P2_Replace_Operator]^for  ( int row = 0; row == nRows; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P3_Replace_Literal]^for  ( int row = row; row < nRows; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P3_Replace_Literal]^data[row][row] = columnData[row];^223^^^^^219^226^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P8_Replace_Mix]^data[row][1] = columnData[row];^223^^^^^219^226^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P8_Replace_Mix]^data[row][2] = columnData[row];^223^^^^^219^226^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P3_Replace_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^222^^^^^219^226^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^225^^^^^219^226^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^225^^^^^219^226^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   BigDecimal[] columnData [VARIABLES] boolean  BigDecimal[]  columnData  int  nRows  row  BigDecimal[][]  data  
[P1_Replace_Type]^short  nRows = columnData.length;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P5_Replace_Variable]^int nRows = row;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P5_Replace_Variable]^int nRows = columnData.length.length;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P5_Replace_Variable]^int nRows = columnData;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P11_Insert_Donor_Statement]^int nCols = rowData.length;int nRows = columnData.length;^238^^^^^237^244^int nRows = columnData.length;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P3_Replace_Literal]^String[][] data = new String[nRows][-7];^239^^^^^237^244^String[][] data = new String[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P11_Insert_Donor_Statement]^String[][] data = new String[1][nCols];String[][] data = new String[nRows][1];^239^^^^^237^244^String[][] data = new String[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P11_Insert_Donor_Statement]^BigDecimal[][] data = new BigDecimal[nRows][1];String[][] data = new String[nRows][1];^239^^^^^237^244^String[][] data = new String[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P11_Insert_Donor_Statement]^double[][] data = new double[nRows][1];String[][] data = new String[nRows][1];^239^^^^^237^244^String[][] data = new String[nRows][1];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = -5; row < nRows; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P3_Replace_Literal]^data[row][] = columnData[row];^241^^^^^237^244^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P8_Replace_Mix]^data[row][0 * 0] = columnData[row];^241^^^^^237^244^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P3_Replace_Literal]^data[row][7] = columnData[row];^241^^^^^237^244^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P8_Replace_Mix]^data[row][2] = columnData[row];^241^^^^^237^244^data[row][0] = columnData[row];^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P3_Replace_Literal]^for  ( int row = 3; row < nRows; row++ )  {^240^^^^^237^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P4_Replace_Constructor]^return return  new BigMatrixImpl ( dimension, dimension )  ;^243^^^^^237^244^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P8_Replace_Mix]^return  new BigMatrixImpl ( dimension, dimension )  ;^243^^^^^237^244^return new BigMatrixImpl ( data ) ;^[CLASS] MatrixUtils  [METHOD] createColumnBigMatrix [RETURN_TYPE] BigMatrix   String[] columnData [VARIABLES] boolean  String[][]  data  String[]  columnData  int  nRows  row  
[P4_Replace_Constructor]^BigMatrixImpl out = new RealMatrixImpl ( dimension, dimension )  ;^255^^^^^254^263^BigMatrixImpl out = new BigMatrixImpl ( dimension, dimension ) ;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^BigMatrixImpl out = new BigMatrixImpl ( row, dimension ) ;^255^^^^^254^263^BigMatrixImpl out = new BigMatrixImpl ( dimension, dimension ) ;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P11_Insert_Donor_Statement]^RealMatrixImpl out = new RealMatrixImpl ( dimension, dimension ) ;BigMatrixImpl out = new BigMatrixImpl ( dimension, dimension ) ;^255^^^^^254^263^BigMatrixImpl out = new BigMatrixImpl ( dimension, dimension ) ;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P7_Replace_Invocation]^BigDecimal[][] d = out.BigMatrixImpl (  ) ;^256^^^^^254^263^BigDecimal[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P11_Insert_Donor_Statement]^double[][] d = out.getDataRef (  ) ;BigDecimal[][] d = out.getDataRef (  ) ;^256^^^^^254^263^BigDecimal[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P14_Delete_Statement]^^256^^^^^254^263^BigDecimal[][] d = out.getDataRef (  ) ;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P1_Replace_Type]^for  (  long  row = 0; row < dimension; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P2_Replace_Operator]^for  ( int row = 0; row <= dimension; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P3_Replace_Literal]^for  ( int row = ; row < dimension; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int dimension = 0; row < dimension; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int row = 0; row < col; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int dimension = 0; row < row; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int row = 0; row < dimensionimension; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P1_Replace_Type]^for  (  short  col = 0; col < dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P2_Replace_Operator]^for  ( int col = 0; col <= dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P3_Replace_Literal]^for  ( int col = 8; col < dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int row = 0; col < dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P8_Replace_Mix]^for  ( int col = 0; col < row; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P2_Replace_Operator]^d[row][col] = row != col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = dimension == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = row == dimension ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = row == col ? BigMatrixImpl.ONE : null;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = col == row ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = row == col ? BigMatrixImpl.ZERO : BigMatrixImpl.ONE;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P6_Replace_Expression]^d[row][col] = row ( BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P8_Replace_Mix]^d[row][col]  = null ;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P8_Replace_Mix]^d[row][col]  =  d[row][col] ;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P3_Replace_Literal]^for  ( int col = -2; col < dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P3_Replace_Literal]^for  ( int col = 2; col < dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int d = 0; col < colimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^for  ( int col = 0; col < d; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = row == row ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = BigMatrixImpl.ONE == col ? row : BigMatrixImpl.ZERO;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = row == BigMatrixImpl.ZERO ? BigMatrixImpl.ONE : col;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = row == col ? BigMatrixImpl.ONE : this;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P5_Replace_Variable]^d[row][col] = BigMatrixImpl.ZERO == col ? BigMatrixImpl.ONE : row;^259^^^^^254^263^d[row][col] = row == col ? BigMatrixImpl.ONE : BigMatrixImpl.ZERO;^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P3_Replace_Literal]^for  ( int row = col; row < dimension; row++ )  {^257^^^^^254^263^for  ( int row = 0; row < dimension; row++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
[P3_Replace_Literal]^for  ( int col = 3; col < dimension; col++ )  {^258^^^^^254^263^for  ( int col = 0; col < dimension; col++ )  {^[CLASS] MatrixUtils  [METHOD] createBigIdentityMatrix [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] boolean  BigMatrixImpl  out  int  col  dimension  row  BigDecimal[][]  d  
