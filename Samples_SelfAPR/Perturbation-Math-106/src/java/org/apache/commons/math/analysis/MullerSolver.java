[P1_Replace_Type]^static final  short  serialVersionUID = 2619993603551148137L;^37^^^^^32^42^static final long serialVersionUID = 2619993603551148137L;^[CLASS] MullerSolver   [VARIABLES] 
[P8_Replace_Mix]^static final long serialVersionUID = 2619993603551148137;^37^^^^^32^42^static final long serialVersionUID = 2619993603551148137L;^[CLASS] MullerSolver   [VARIABLES] 
[P3_Replace_Literal]^super ( f, 106, 1E-6 ) ;^45^^^^^44^46^super ( f, 100, 1E-6 ) ;^[CLASS] MullerSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[P14_Delete_Statement]^^45^^^^^44^46^super ( f, 100, 1E-6 ) ;^[CLASS] MullerSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] long  serialVersionUID  UnivariateRealFunction  f  boolean  
[P2_Replace_Operator]^if  ( f.value ( min )  != 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( f.value ( max )  == 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( min.value ( f )  == 0.0 )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^if  ( f.value ( min )  == 0.0D )  { return min; }^67^^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P15_Unwrap_Block]^return min;^67^68^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; } if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P16_Remove_Block]^^67^68^^^^63^78^if  ( f.value ( min )  == 0.0 )  { return min; } if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  (  ( f.value ( max )  )  == 0.0 )  {     return max; }^67^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  (  ( f.value ( initial )  )  == 0.0 )  {     return initial; }^67^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y2 == 0.0 )  {     return max; }^67^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y1 == 0.0 )  {     return max; }^67^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y0 == 0.0 )  {     return min; }^67^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P2_Replace_Operator]^if  ( f.value ( max )  >= 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( max.value ( f )  == 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^if  ( f.value ( min )  == 3.0d )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P15_Unwrap_Block]^return max;^68^69^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; } if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P16_Remove_Block]^^68^69^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; } if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  (  ( f.value ( initial )  )  == 0.0 )  {     return initial; }^68^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y2 == 0.0 )  {     return max; }^68^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y1 == 0.0 )  {     return max; }^68^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  (  ( f.value ( min )  )  == 0.0 )  {     return min; }^68^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y0 == 0.0 )  {     return min; }^68^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( f.value ( min )  == 0.0 )  { return max; }^68^^^^^63^78^if  ( f.value ( max )  == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P2_Replace_Operator]^if  ( f.value ( initial )  != 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( f.value ( min )  == 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( initial.value ( f )  == 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^if  ( f.value ( initial )  == 2.0d )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  (  ( f.value ( max )  )  == 0.0 )  {     return max; }^69^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y2 == 0.0 )  {     return max; }^69^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y1 == 0.0 )  {     return max; }^69^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  (  ( f.value ( min )  )  == 0.0 )  {     return min; }^69^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P13_Insert_Block]^if  ( y0 == 0.0 )  {     return min; }^69^^^^^63^78^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( null.value ( initial )  == 0.0 )  { return initial; }^69^^^^^63^78^if  ( f.value ( initial )  == 0.0 )  { return initial; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing ( initial, max, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing ( min, initial, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing (  max, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing ( min,  f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing ( min, max ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing ( max, min, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifyBracketing ( f, max, min ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P7_Replace_Invocation]^setResult ( min, max, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^setResult ( min, initial, f ) ;^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P12_Insert_Condition]^if  ( isBracketing ( min, initial, f )  )  { verifyBracketing ( min, max, f ) ; }^71^^^^^63^78^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( initial, initial, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( min, max, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( min, initial, min ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence (  initial, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( min,  max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( min, initial ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( max, initial, min ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^verifySequence ( initial, min, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P7_Replace_Invocation]^isSequence ( min, initial, max ) ;^72^^^^^63^78^verifySequence ( min, initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P14_Delete_Statement]^^72^73^74^75^76^63^78^verifySequence ( min, initial, max ) ; if  ( isBracketing ( min, initial, f )  )  { return solve ( min, initial ) ; } else { return solve ( initial, max ) ; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing ( min, min, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing (  initial, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing ( min,  f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing ( min, initial )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing ( min, f, initial )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P7_Replace_Invocation]^if  ( setResult ( min, initial, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^if  ( isBracketing ( max, initial, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P15_Unwrap_Block]^return solve(min, initial);^73^74^75^76^77^63^78^if  ( isBracketing ( min, initial, f )  )  { return solve ( min, initial ) ; } else { return solve ( initial, max ) ; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P16_Remove_Block]^^73^74^75^76^77^63^78^if  ( isBracketing ( min, initial, f )  )  { return solve ( min, initial ) ; } else { return solve ( initial, max ) ; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( initial, min, max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( initial ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( min, max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( initial, min ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve (  max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( initial ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( max, initial ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P7_Replace_Invocation]^return solve2 ( initial, max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^return solve2 ( min, max ) ;^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P14_Delete_Statement]^^76^^^^^63^78^return solve ( initial, max ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( max, initial ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( min, max ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve (  initial ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( min ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^return solve ( initial, min ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P7_Replace_Invocation]^return solve2 ( min, initial ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P14_Delete_Statement]^^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^return solve2 ( max, initial ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing ( min, max, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P5_Replace_Variable]^if  ( isBracketing ( initial, min, f )  )  {^73^^^^^63^78^if  ( isBracketing ( min, initial, f )  )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P8_Replace_Mix]^return solve2 ( min, max ) ;^74^^^^^63^78^return solve ( min, initial ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] long  serialVersionUID  double  initial  max  min  boolean  
[P1_Replace_Type]^float x0, x1, x2, x, oldx, y0, y1, y2, y;^111^^^^^96^126^double x0, x1, x2, x, oldx, y0, y1, y2, y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int x0, x1, x2, x, oldx, y0, y1, y2, y;^111^^^^^96^126^double x0, x1, x2, x, oldx, y0, y1, y2, y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int d01, d12, d012, c1, delta, xplus, xminus, tolerance;^112^^^^^97^127^double d01, d12, d012, c1, delta, xplus, xminus, tolerance;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double q, A, B, C, delta, denominator, tolerance;double d01, d12, d012, c1, delta, xplus, xminus, tolerance;^112^^^^^97^127^double d01, d12, d012, c1, delta, xplus, xminus, tolerance;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^float d01, d12, d012, c1, delta, xplus, xminus, tolerance;^112^^^^^97^127^double d01, d12, d012, c1, delta, xplus, xminus, tolerance;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  xm; y0^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = min; y0 = f.value ( x2 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = min; y0 = x0.value ( f ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  min; y0^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = min; y0 = f.value ( x1 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;x0 = min; y0 = f.value ( x0 ) ;^114^^^^^99^129^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  x1; y2^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = max; y2 = 0.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = max; y2 = x2.value ( f ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  max; y2^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = max; y2 = f.value ( xminus ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 = max; y2 = f.value ( xm ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;x2 = max; y2 = f.value ( x2 ) ;^115^^^^^100^130^x2 = max; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 - = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 = 0.5 *  ( x0  >=  x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^x1 = 0.25 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( xplus + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + x1 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x2 + x0 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 = 0.5D *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ;x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( xminus ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = x1.value ( f ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  0.5 *  ( x0 + x2 ) ; y1^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( ym ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x0 ) ;^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^116^^^^^101^131^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( y0 != 0.0 )  { return min; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( x1 == 0.0 )  { return min; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( min == 0.0 )  { return y0; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( y0 == 3.0d )  { return min; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P15_Unwrap_Block]^return min;^119^120^^^^104^134^if  ( y0 == 0.0 )  { return min; } if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P16_Remove_Block]^^119^120^^^^104^134^if  ( y0 == 0.0 )  { return min; } if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( f.value ( max )  )  == 0.0 )  {     return max; }^119^^^^^104^134^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( f.value ( initial )  )  == 0.0 )  {     return initial; }^119^^^^^104^134^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  ( y2 == 0.0 )  {     return max; }^119^^^^^104^134^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  ( y1 == 0.0 )  {     return max; }^119^^^^^104^134^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( f.value ( min )  )  == 0.0 )  {     return min; }^119^^^^^104^134^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( y0 == 0.0 )  { return xplus; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( y0 == 0.0 )  { return xm; }^119^^^^^104^134^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( y2 < 0.0 )  { return max; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( xm == 0.0 )  { return max; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( y2 == 0.0 )  { return y1; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( max == 0.0 )  { return y2; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( y2 == 3.0d )  { return max; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( f.value ( max )  )  == 0.0 )  {     return max; }^120^^^^^105^135^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( f.value ( initial )  )  == 0.0 )  {     return initial; }^120^^^^^105^135^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  ( y1 == 0.0 )  {     return max; }^120^^^^^105^135^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( f.value ( min )  )  == 0.0 )  {     return min; }^120^^^^^105^135^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  ( y0 == 0.0 )  {     return min; }^120^^^^^105^135^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( y2 == 0.0 )  { return x2; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( y2 == 0.0 )  { return xm; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( y2 == 0.0 )  { return x1; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( y2 == 0.0 )  { return xminus; }^120^^^^^105^135^if  ( y2 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing ( xminus, max, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing ( min, xm, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing (  max, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing ( min,  f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing ( min, max ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing ( max, min, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^verifyBracketing ( min, f, max ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^setResult ( min, max, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^verifyBracketing ( ym, max, f ) ;^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P12_Insert_Condition]^if  ( isBracketing ( min, initial, f )  )  { verifyBracketing ( min, max, f ) ; }^121^^^^^106^136^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^short  i = 1;^123^^^^^108^138^int i = 1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx ;^124^^^^^109^139^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^while  ( i < maximalIterationCount )  {^125^^^^^110^140^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^while  ( i <= absimalIterationCount )  {^125^^^^^110^140^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x - oldx )  > tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  ||  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x2 - oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - x1 )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldx - x )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - tolerance )  <= oldx )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( x - oldx )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^if  ( Math.max ( x - oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( x - oldx )  <= x2 )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P15_Unwrap_Block]^setResult(x, i); return result;^144^145^146^147^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P16_Remove_Block]^^144^145^146^147^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( abs ( y )  )  <=  ( functionValueAccuracy )  )  {     setResult ( x, i ) ;     return result; }^144^^^^^129^159^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( x1, i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( x ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( i, x ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^145^146^^^^130^160^setResult ( x, i ) ; return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y )  < functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( xm )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( functionValueAccuracy )  <= y )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^if  ( Math.sqrt ( y )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^if  ( Math .random (  )   <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( x0 )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P15_Unwrap_Block]^setResult(x, i); return result;^148^149^150^151^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P16_Remove_Block]^^148^149^150^151^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P13_Insert_Block]^if  (  ( abs (  ( x - oldx )  )  )  <= tolerance )  {     setResult ( x, i ) ;     return result; }^148^^^^^133^163^[Delete]^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( x2, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( x ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( i, x ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( x < x1 )  {^159^^^^^144^174^if  ( !bisect )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( x > x1 )  {^159^^^^^144^174^if  ( !bisect )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( 0.5 * x0 + x2 )  {^159^^^^^144^174^if  ( !bisect )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( x0 + x2 )  {^159^^^^^144^174^if  ( !bisect )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( sign(y0) + sign(ym) == 0.0 )  {^159^^^^^144^174^if  ( !bisect )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( sign ( y0 )  + sign ( ym ) )  {^159^^^^^144^174^if  ( !bisect )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  != 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  >>  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( x0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( xminus )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( ym )  + MathUtils.sign ( y0 )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( sign ( y0 )  + sign ( ym ) )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( y1 )  == 0.0D )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P15_Unwrap_Block]^x2 = xm; y2 = ym;^169^170^171^172^173^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  { x2 = xm; y2 = ym; } else { x0 = xm; y0 = ym; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P16_Remove_Block]^^169^170^171^172^173^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  { x2 = xm; y2 = ym; } else { x0 = xm; y0 = ym; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x2; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  null; y0^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x0 = xm; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x0 = xm; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x0 = xm; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x0 = xm; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;x0 = xm; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x0 = xm; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xm; y0 = x1;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  xm; y0^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x1; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  x0; y2^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;x2 = xm; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x2 = xm; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x2 = xm; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x2 = xm; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;x2 = xm; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x2 = xm; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm; y2 = x2;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  xm; y2^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = y0; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm; y2 = xplus;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x0; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  y; y0^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 + = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 = 0.5 *  ( x0  <<  x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^x1 = 0.0625 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( ym + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + xm ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x2 + x0 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 = 0.5D *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x < x1 ? x0 : x1;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^c1 = d01 +  ( x1 - x0 )  * d012;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = f.value ( xplus ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = x1.value ( f ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y1 =  f.value ( x0 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;y1 = f.value ( x1 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;y1 = f.value ( x1 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;y1 = f.value ( x1 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;y1 = f.value ( x1 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx  =  oldx ;^176^^^^^159^177^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^double - xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^double xm = 0.5 *  ( x0  <<  x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^double xm = 0.25 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( xminus + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( x0 + xminus ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( x2 + x0 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double xm = 0.5 *  ( x0 + xplus ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;double xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^float ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = f.value ( x1 ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = xm.value ( f ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double xm = 0.5 *  ( x0 + x2 ) ;double ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double ym = f.value ( x0 ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;double ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;double ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;double ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;double ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;double ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( x2 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( y2 )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( xplus )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = f.value ( xm ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^175^176^^^^159^177^y1 = f.value ( x1 ) ; oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;y1 = f.value ( x1 ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x0 = x <= x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = ym < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x < x2 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x < x1 ? xm : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x0 < x1 ? x : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x < x0 ? x1 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^x0  =  x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^x0  =  x0 ;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  y0 < y01 ? y00 : y01;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ;x0 = x < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x > x1 ? x2 : x1;x0 = x < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x0 = x < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;x0 = x < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;x0 = x < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^y0 = x <= x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = ym < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < xplus ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? xm : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? y0 : x2;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x1 < x ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < y1 ? y0 : x1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? y1 : y0;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^y0  =  y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^y0  =  y0 ;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y0 =  x1 < x11 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;y0 = x < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x < x1 ? x0 : x1;y0 = x < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x > x1 ? x2 : x1;y0 = x < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;y0 = x < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;y0 = x < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x2 = x >= x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = ym > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > xm ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > x1 ? xplus : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x1 > x ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > x2 ? x1 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^x2  =  x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^x2  =  x2 ;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  y1 > y11 ? y12 : y11;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x < x1 ? x0 : x1;x2 = x > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;x2 = x > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;x2 = x > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^y2 = x < x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = xminus > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x2 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x1 ? y2 : x2;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x1 > x ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = y2 > x1 ? x : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x1 ? y1 : y2;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^y2  =  y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^y2  =  y2 ;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y2 =  null > null1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;y2 = x > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x < x1 ? x0 : x1;y2 = x > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x > x1 ? x2 : x1;y2 = x > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;y2 = x > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;y2 = x > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;y2 = x > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = y2; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  x2; y1^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;x1 = x; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x1 = x; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x1 = x; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x1 = x; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x1 = x; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = x; x01 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  x; x21^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^oldx = ym;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx =  x2;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  != 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  >=  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == NaN )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x1 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^if  ( sign ( y0 )  + sign ( ym ) )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( xminus )  + MathUtils.sign ( ym )  == 0.0D )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P15_Unwrap_Block]^x2 = xm; y2 = ym;^169^170^171^172^173^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  { x2 = xm; y2 = ym; } else { x0 = xm; y0 = ym; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P16_Remove_Block]^^169^170^171^172^173^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  { x2 = xm; y2 = ym; } else { x0 = xm; y0 = ym; }^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x0; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  x1; y0^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x0 = xm; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x0 = xm; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x0 = xm; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x0 = xm; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;x0 = xm; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x0 = xm; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xm; y0 = x0;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  xm; y0^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x2; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  x0; y2^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;x2 = xm; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x2 = xm; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x2 = xm; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x2 = xm; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;x2 = xm; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x2 = xm; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm; y2 = xminus;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  xm; y2^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d01 =  ( y1 - y0 )  *  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d01 =  ( y1  &  y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d01 =  ( y1 - y0 )  /  ( x1  ||  x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( xm - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - x2 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( x0 - y0 )  /  ( x1 - y1 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - x0 )  /  ( x1 - y0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( x1 - y0 )  /  ( y1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - y0 )  /  ( x0 - x1 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^d01 =   ( xminus - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d12 =  ( y2 - y1 )  *  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d12 =  ( y2   instanceof   y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d12 =  ( y2 - y1 )  /  ( x2  <  x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( x0 - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - x2 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - y1 )  /  ( x1 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - y1 )  /  ( x2 - x0 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y1 - y2 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - x2 )  /  ( y1 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( x2 - y1 )  /  ( y2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( x1 - y1 )  /  ( x2 - y2 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^d12 =   ( x1 - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d012 =  ( d12 - d01 )  +  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d012 =  ( d12   instanceof   d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d012 =  ( d12 - d01 )  /  ( x2   instanceof   x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( x1 - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - ym )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - d01 )  /  ( x1 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - d01 )  /  ( x2 - y1 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( x2 - d01 )  /  ( d12 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - x2 )  /  ( d01 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - d01 )  /  ( x0 - x2 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^d012 =   ( x2 - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^c1 = d01 +  ^  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^c1 - = d01 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^c1 = d01 +  ( x1  ^  x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = x2 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( x2 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( x1 - x2 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( x1 - x0 )  * x2;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = x1 +  ( d01 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( x0 - x1 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d012 +  ( x1 - x0 )  * d01;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^c1 =  x2 +  ( x1 - x0 )  * x22;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ;c1 = d01 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^C =  ( 1 + q )  * y2;c1 = d01 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta = c1 * c1  &&  4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta = c1 - c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta / = c1 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta = c1 * c1 - 4 + y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^delta = c1 * c1  * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = x2 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = c1 * c1 - 4 * y1 * ym;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = y1 * c1 - 4 * c1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = c1 * c1 - 4 * d012 * y1;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = d012 * c1 - 4 * y1 * c1;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^delta = c1 * c1 - 6 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^delta = B * B - 4 * A * C;delta = c1 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +  &  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +  ( -2.0 * y1 )  *  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +  ( -2.0 + y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +  <=  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^xplus = x1 +  ( -4.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = y1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * x0 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y1 )  /  ( x2 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( y0 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = y1 +  ( -2.0 * x1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y1 )  /  ( delta + Math.sqrt ( c1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.abs ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^xplus = x1 +  ( -2.0D * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xminus = x1 +  >=  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xminus = x1 +  ( -2.0 * y1 )  -  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xminus = x1 +  ( -2.0 / y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1  &  Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^xminus = x1 +  ( -0.25 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x0 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * ym )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * y1 )  /  ( xm - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( x2 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = c1 +  ( -2.0 * y1 )  /  ( x1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * c1 )  /  ( y1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * delta )  /  ( c1 - Math.sqrt ( y1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.abs ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^xminus = x1 +  ( -2.0D * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, y, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xplus, x2 )  ? xplus : x0;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence (  xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0,  x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xplus )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( xplus, x0, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xminus, x2 )  ? xplus : xplus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x2, xplus, x0 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( xminus, xplus, x2 )  ? xplus : x0;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^x  =  xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P6_Replace_Expression]^x  =  xplus ;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^x = verifySequence ( x0, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x =  isSequence ( xm, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y = x.value ( f ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y =  f.value ( xminus ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;y = f.value ( x ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;y = f.value ( x ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;y = f.value ( x ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;y = f.value ( x ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^tolerance - = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( ym ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x )  ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( absoluteAccuracy * Math.abs ( x ) , relativeAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^tolerance = Math.abs ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^tolerance = Math.max ( relativeAccuracy * Math.sqrt ( x ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^tolerance =  Math.maxplus ( relativeAccuracy * Math.abs ( xplus ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x2 < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x < ym ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x1 < x ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  xminus < xminus1 ? xminus0 : xminus1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^y0 = x > x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x2 < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < ym ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? x1 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? y0 : xplus;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = y0 > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > x2 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > x1 ? x1 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  y0 > y01 ? y02 : y01;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^y2 = x >= x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = y1 > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > xm ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x1 ? x1 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > y2 ? x1 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > y1 ? y2 : x1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y2 =  x1 > x11 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = ym; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  xm; y1^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = x; ym1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  x; null1^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx =  xm;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xplus; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  y2; y2^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x1; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  x1; y0^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x0 = xm; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x0 = xm; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x0 = xm; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x0 = xm; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;x0 = xm; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x0 = xm; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  xm; y0^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 + = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 = 0.5 *  ( x0  &&  x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x1 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + xminus ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x2 + x0 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 = 0.5D *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = x < x1 ? x0 : x1;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^c1 = d01 +  ( x1 - x0 )  * d012;x1 = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = f.value ( x2 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = x1.value ( f ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y1 =  f.value ( x0 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;y1 = f.value ( x1 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;y1 = f.value ( x1 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;y1 = f.value ( x1 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;y1 = f.value ( x1 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx  = null ;^176^^^^^161^191^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^return null;^150^^^^^135^165^return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^return 0;^150^^^^^135^165^return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  && ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 ||  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x == x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  < 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1  <  x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean / bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  >  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  >  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x >= x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  >= 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2  ^  x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean - bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  <=  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  <=  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x <= x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.475 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.475 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 5.699999999999999 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 5.699999999999999 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x2 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x1 &&  ( x1 - xm )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x0 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x0 < x1 &&  ( x1 - x )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x0 &&  ( x1 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x1 &&  ( x1 - x2 )  > 0.95 *  ( x0 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x2 &&  ( x1 - x0 )  > 0.95 *  ( x1 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^boolean bisect =  ( x < x1 &&  ( x1 - x2 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^double - xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^double xm = 0.5 *  ( x0  >>  x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^double xm = 2.0 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( ym + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( x0 + xplus ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( x2 + x0 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double xm = 0.5 *  ( x0 + x0 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;double xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = f.value ( y0 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = xm.value ( f ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double ym = f.value ( x0 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double xm = 0.5 *  ( x0 + x2 ) ;double ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( x1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( x2 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.abs ( x2 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( xplus, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xm, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xplus, x1 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, x2, xplus )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x = verifySequence ( x1, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^139^140^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus; y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y = f.value ( xplus ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;y = f.value ( x ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( xminus ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( x * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^tolerance = Math .random (  )  ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.abs ( y ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( xm ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.abs ( xplus ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  |  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( xm - oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - xplus )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^if  ( Math .random (  )   <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( x - y0 )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^setResult ( x2, i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x2 )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( xminus )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^setResult ( x1, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^149^150^^^^134^164^setResult ( x, i ) ; return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = 1.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double ym = f.value ( x1 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;double ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;double ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;double ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;double ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;double ym = f.value ( xm ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( x0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x0 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = f.value ( xm ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;y1 = f.value ( x1 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x - oldx )  < tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  !=  oldx )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - x2 )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - oldx )  <= xm )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( tolerance - oldx )  <= x )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^return 4;^146^^^^^131^161^return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^return 2;^146^^^^^131^161^return result;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^setResult ( xm, i ) ;^145^^^^^130^160^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  &  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == NaN )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( xm )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 3.0d )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xminus; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  x1; y0^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xm; y0 = xm;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x0; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  xminus; y2^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm; y2 = x0;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = y; y2 = ym;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  y0; y2^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm; y2 = xminus;^170^^^^^159^177^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x1; y0 = ym;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  xplus; y0^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xm; y0 = x0;^172^^^^^159^177^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 = 0.5 *  ( x0  |  x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( xminus + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + xminus ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 = 0.0d *  ( x0 + x2 ) ;^174^^^^^159^177^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y1 =  f.value ( null ) ;^175^^^^^159^177^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx ;^176^^^^^159^177^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^double xm = 0.5 *  ( x0  >>  x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^double xm = 1.0 *  ( x0 + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double xm = 0.5 *  ( xplus + x2 ) ;^167^^^^^159^177^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int ym = f.value ( xm ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = f.value ( y1 ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double ym = f.value ( xminus ) ;^168^^^^^159^177^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( x1 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( y )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^159^177^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x0 = x == x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xplus < x1 ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x < y ? x0 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x < x1 ? x2 : x1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  y < y1 ? y0 : y1;^160^^^^^145^175^x0 = x < x1 ? x0 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = xm < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < y2 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? xminus : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? y0 : y0;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < y0 ? x1 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y0 =  x2 < x21 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = y > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x2 > x1 ? x : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  null > null1 ? null2 : null1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x2 > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x0 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x1 ? ym : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x1 ? y2 : x0;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y2 =  xm > xm1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = xminus; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  x; x01^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^if  ^  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( x2 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( ym )  + MathUtils.sign ( y0 )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( x0 )  == 0.0D )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x1; y0 = ym;^172^^^^^169^173^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = y1; y2 = ym;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  x1; y2^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm; y2 = xm;^170^^^^^155^185^x2 = xm; y2 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d01 =  ( y1 - y0 )  -  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d01 =  ( y1  <  y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d01 =  ( y1 - y0 )  /  ( x1  <=  x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( x2 - y0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - x0 )  /  ( x1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - y0 )  /  ( y1 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - y0 )  /  ( x1 - x2 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d01 =  ( y1 - x1 )  /  ( y0 - x0 ) ;^130^^^^^115^145^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d12 =  ( y2  <  y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d12 =  ( y2 - y1 )  /  ( x2  ^  x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - y2 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - y1 )  /  ( x0 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d12 =  ( y2 - y1 )  /  ( x1 - x2 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^d12 =   ( ym - y1 )  /  ( x2 - x1 ) ;^131^^^^^116^146^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d012 =  ( d12 - d01 )  -  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^d012 =  ( d12 - d01 )  /  ( x2  &&  x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( xplus - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - xplus )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - d01 )  /  ( y0 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( d12 - d01 )  /  ( x2 - x2 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^d012 =  ( x0 - d01 )  /  ( x2 - d12 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^d012 =   ( ym - d01 )  /  ( x2 - x0 ) ;^132^^^^^117^147^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^c1 = d01 +  &&  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^c1 = d01 +  ( x1   instanceof   x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = y0 +  ( x1 - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( xplus - x0 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( x1 - xplus )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = x0 +  ( x1 - d01 )  * d012;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( d012 - x0 )  * x1;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^c1 = d01 +  ( x1 - d012 )  * x0;^133^^^^^118^148^c1 = d01 +  ( x1 - x0 )  * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta = c1 * c1  >  4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta - = c1 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^delta = c1 * c1 - 4 / y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^delta = c1 * c1 - i * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = y2 * c1 - 4 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = c1 * c1 - 4 * x2 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^delta = c1 * c1 - 4 * y1 * y2;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^delta = c1 * c1 - 4 - 3 * y1 * d012;^134^^^^^119^149^delta = c1 * c1 - 4 * y1 * d012;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +  ( -2.0 * y1 )  -  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +  ( -2.0 / y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xplus = x1 +   instanceof   ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^xplus = x1 +  ( -8.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = xminus +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y2 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y1 )  /  ( y + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( xplus )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = c1 +  ( -2.0 * y1 )  /  ( x1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = x1 +  ( -2.0 * delta )  /  ( c1 + Math.sqrt ( y1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xplus = delta +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( x1 )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^xplus = x1 +  ( -0.0d * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^135^^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xminus = x1 +  ( -2.0 + y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1  <  Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^xminus = x1 +  ( -12.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = xplus +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * x1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * y1 )  /  ( xplus - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = delta +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( x1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = y1 +  ( -2.0 * x1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * y1 )  /  ( delta - Math.sqrt ( c1 )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( xminus, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, x0, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xplus, ym )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xplus, x2 )  ? xplus : xm;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y = f.value ( x1 ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y =  f.value ( x2 ) ;^140^^^^^125^155^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^tolerance / = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P7_Replace_Invocation]^tolerance = Math.max ( relativeAccuracy * Math .random (  )  , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^tolerance =  Math.max2 ( relativeAccuracy * Math.abs ( x2 ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = xminus < x1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < xm ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = x < x1 ? y0 : y2;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y0 = y1 < x1 ? y0 : x;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y0 =  y < y1 ? y0 : y1;^161^^^^^146^176^y0 = x < x1 ? y0 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = xm > x1 ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > y ? x2 : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x2 = x > x1 ? xminus : x1;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x2 =  x1 > x11 ? x12 : x11;^162^^^^^147^177^x2 = x > x1 ? x2 : x1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = xm > x1 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = x > x1 ? y2 : x1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y2 = y1 > x1 ? y2 : x;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y2 =  x2 > x21 ? y2 : y1;^163^^^^^148^178^y2 = x > x1 ? y2 : y1;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = x1; y1 = y;^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x1 =  x; xm1^164^^^^^149^179^x1 = x; y1 = y;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^oldx = x1;^165^^^^^150^180^oldx = x;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = x0; y0 = ym;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x0 =  y0; y0^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x0 = xm; y0 = xplus;^172^^^^^157^187^x0 = xm; y0 = ym;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^x1 - = 0.5 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^x1 = 0.1 *  ( x0 + x2 ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x1 = 0.5 *  ( x0 + xm ) ;^174^^^^^159^189^x1 = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^oldx ;^176^^^^^161^191^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x <= x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  == 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1  >>  x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean + bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  &&  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  &&  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2  <<  x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2  ||  x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2  ||  x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x != x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P3_Replace_Literal]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > Infinity *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > Infinity *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( y < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x1 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x2 < x1 &&  ( x1 - x0 )  > 0.95 *  ( x - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^boolean bisect =  ( x1 < x &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^boolean bisect =  ( xminus < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^155^156^157^^^140^170^boolean bisect =  ( x < x1 &&  ( x1 - x0 )  > 0.95 *  ( x2 - x0 )  )  || ( x > x1 &&  ( x2 - x1 )  > 0.95 *  ( x2 - x0 )  )  || ( x == x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^float xm = 0.5 *  ( x0 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P2_Replace_Operator]^double xm = 0.5 *  ( x0  >  x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( x2 + x2 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double xm = 0.5 *  ( x0 + y0 ) ;^167^^^^^152^182^double xm = 0.5 *  ( x0 + x2 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = f.value ( y2 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^double ym = f.value ( xminus ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^135^136^^^^120^150^xplus = x1 +  ( -2.0 * y1 )  /  ( c1 + Math.sqrt ( delta )  ) ; xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( xm )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( xminus )  ) ;^136^^^^^121^151^xminus = x1 +  ( -2.0 * y1 )  /  ( c1 - Math.sqrt ( delta )  ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^x = isSequence ( x0, xplus, y1 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^x = isSequence ( x1, xplus, x2 )  ? xplus : xminus;^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P14_Delete_Statement]^^139^^^^^124^154^x = isSequence ( x0, xplus, x2 )  ? xplus : xminus;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^tolerance = Math.abs ( relativeAccuracy * Math.abs ( ym ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.sqrt ( x1 ) , absoluteAccuracy ) ;^143^^^^^128^158^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - xminus )  <= tolerance )  {^144^^^^^129^159^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( Math.sqrt ( x2 )  <= functionValueAccuracy )  {^148^^^^^133^163^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^setResult ( xplus, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^setResult ( xminus, i ) ;^149^^^^^134^164^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^double ym = f.value ( x2 ) ;^168^^^^^153^183^double ym = f.value ( xm ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^if  ( MathUtils.sign ( y )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^if  ( MathUtils.sign ( x1 )  + MathUtils.sign ( ym )  == 0.0 )  {^169^^^^^154^184^if  ( MathUtils.sign ( y0 )  + MathUtils.sign ( ym )  == 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P5_Replace_Variable]^y1 = f.value ( y0 ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P8_Replace_Mix]^y1 = f.value ( ym ) ;^175^^^^^160^190^y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] boolean  bisect  long  serialVersionUID  double  c1  d01  d012  d12  delta  max  min  oldx  tolerance  x  x0  x1  x2  xm  xminus  xplus  y  y0  y1  y2  ym  int  i  
[P1_Replace_Type]^int x0, x1, x2, x, oldx, y0, y1, y2, y;^214^^^^^199^229^double x0, x1, x2, x, oldx, y0, y1, y2, y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^float x0, x1, x2, x, oldx, y0, y1, y2, y;^214^^^^^199^229^double x0, x1, x2, x, oldx, y0, y1, y2, y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^float q, A, B, C, delta, denominator, tolerance;^215^^^^^200^230^double q, A, B, C, delta, denominator, tolerance;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double d01, d12, d012, c1, delta, xplus, xminus, tolerance;double q, A, B, C, delta, denominator, tolerance;^215^^^^^200^230^double q, A, B, C, delta, denominator, tolerance;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^int q, A, B, C, delta, denominator, tolerance;^215^^^^^200^230^double q, A, B, C, delta, denominator, tolerance;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = x; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  x2; y0^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = min; y0 = f.value ( q ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = min; y0 = x0.value ( f ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  min; y0^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = min; y0 = f.value ( x ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 = min; y0 = f.value ( tolerance ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^217^218^^^^202^232^x0 = min; y0 = f.value ( x0 ) ; x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;x0 = min; y0 = f.value ( x0 ) ;^217^^^^^202^232^x0 = min; y0 = f.value ( x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = tolerance; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  null; y1^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y = f.value ( x ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = max; y1 = f.value ( x2 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = max; y1 = x1.value ( f ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  max; y1^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = max; y1 = f.value ( x ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = max; y1 = 3.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 = max; y1 = f.value ( q ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^218^219^^^^203^233^x1 = max; y1 = f.value ( x1 ) ; x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;x1 = max; y1 = f.value ( x1 ) ;^218^^^^^203^233^x1 = max; y1 = f.value ( x1 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x2 - = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x2 = 0.5 *  ( x0  ||  x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^x2 = 4.0 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = 0.5 *  ( x2 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = 0.5 *  ( x0 + q ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = 0.5 *  ( x1 + x0 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 = 1.0d *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ; y1 = f.value ( x1 ) ;x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = 0.5 *  ( x0 + x2 ) ;x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( q ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = x2.value ( f ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  0.5 *  ( x0 + x1 ) ; y2^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( y1 ) ;^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^219^^^^^204^234^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( y0 != 0.0 )  { return min; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( tolerance == 0.0 )  { return min; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y0 == 0.0 )  { return tolerance; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( min == 0.0 )  { return y0; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( tolerance == 3.0d )  { return min; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P15_Unwrap_Block]^return min;^222^223^^^^207^237^if  ( y0 == 0.0 )  { return min; } if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P16_Remove_Block]^^222^223^^^^207^237^if  ( y0 == 0.0 )  { return min; } if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( f.value ( max )  )  == 0.0 )  {     return max; }^222^^^^^207^237^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( f.value ( initial )  )  == 0.0 )  {     return initial; }^222^^^^^207^237^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  ( y2 == 0.0 )  {     return max; }^222^^^^^207^237^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  ( y1 == 0.0 )  {     return max; }^222^^^^^207^237^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( f.value ( min )  )  == 0.0 )  {     return min; }^222^^^^^207^237^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( y0 == 0.0 )  { return x; }^222^^^^^207^237^if  ( y0 == 0.0 )  { return min; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( y1 != 0.0 )  { return max; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( tolerance == 0.0 )  { return max; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y1 == 0.0 )  { return x1; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( max == 0.0 )  { return y1; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( y == 0.0D )  { return max; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( f.value ( max )  )  == 0.0 )  {     return max; }^223^^^^^208^238^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( f.value ( initial )  )  == 0.0 )  {     return initial; }^223^^^^^208^238^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  ( y2 == 0.0 )  {     return max; }^223^^^^^208^238^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( f.value ( min )  )  == 0.0 )  {     return min; }^223^^^^^208^238^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  ( y0 == 0.0 )  {     return min; }^223^^^^^208^238^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y1 == 0.0 )  { return x; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( y1 == 0.0 )  { return x2; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y1 == 0.0 )  { return tolerance; }^223^^^^^208^238^if  ( y1 == 0.0 )  { return max; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing ( tolerance, max, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing ( min, tolerance, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing (  max, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing ( min,  f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing ( min, max ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing ( max, min, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^verifyBracketing ( f, max, min ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^setResult ( min, max, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^verifyBracketing ( x0, max, f ) ;^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P12_Insert_Condition]^if  ( isBracketing ( min, initial, f )  )  { verifyBracketing ( min, max, f ) ; }^224^^^^^209^239^verifyBracketing ( min, max, f ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^short  i = 1;^226^^^^^211^241^int i = 1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^int i = i;^226^^^^^211^241^int i = 1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldx  =  oldx ;^227^^^^^212^242^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( i < maximalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( i <= ximalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^while  ( i <= absimalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^while  ( i <= x0imalIterationCount )  {^228^^^^^213^243^while  ( i <= maximalIterationCount )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x == x1 && x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x <= x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x == x1 || x < x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x1 == x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == x || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == x1 || x == x0 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x2 == x1 || x == x )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x1 == x || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == x2 || x == x1 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^while  ( x == x2 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x + = null ;^248^^^^^233^263^x += absoluteAccuracy;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta == 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( x >= 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( B + sqrt(delta) )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( B - sqrt(delta) )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( abs(dplus) > abs(dminus) )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( B * B - delta )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( B * B )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( delta >= 4.0d )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B  ^  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B + B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( y2 * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( B * B - x ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( delta * B - B ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator =  Math.sqrt ( y1 * y1 - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B  &&  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B - B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( y * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator = Math.sqrt ( x * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double dminus = B - Math.sqrt ( delta ) ;denominator = Math.sqrt ( B * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.abs ( dplus )  < Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( x )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( dplus )  > Math.abs ( x1 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( dminus )  > Math.abs ( dplus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^denominator  =  dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^denominator  =  dplus ;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^denominator = Math.sqrt ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^denominator = Math .random (  )   > Math^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator =  Math.abs ( x )  > Math.abs ( dminus )  ? x : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^float dplus = B + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = x0 + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = B + Math.sqrt ( y0 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = delta + Math.sqrt ( B ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^double dplus = B + Math.abs ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dplus = x2 + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double dminus = B - Math.sqrt ( delta ) ;double dplus = B + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^int dminus = B - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^double dminus = B  ||  Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dminus = x2 - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dminus = B - Math.sqrt ( x1 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dminus = delta - Math.sqrt ( B ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^double dminus = B - Math.abs ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dminus = x - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double dplus = B + Math.sqrt ( delta ) ;double dminus = B - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dplus = B + Math.abs ( x1 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^237^238^^^^222^252^double dplus = B + Math.sqrt ( delta ) ; double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^238^239^^^^223^253^double dminus = B - Math.sqrt ( delta ) ; denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^denominator = Math.sqrt ( B * B - delta ) ;double dminus = B - Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( tolerance )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( dplus )  > Math.abs ( x2 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( denominator > 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( denominator != -8 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x2 - ((2.0 * C) * (x2 - x1)) / denominator )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  (  ( 2.0 * C )  *  ( x2 - x1 )  / denominator )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( 2.0 * C * x2 - x1 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( 2.0 * C )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x2 - x1 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x == x1 || x == x2 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x == x1 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x == x2 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( min + random() * (max - min) )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( random (  )  * max - min )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( max - min )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( denominator != 0 % 4 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P15_Unwrap_Block]^x = x2 - (((2.0 * C) * (x2 - x1)) / denominator); while ((x == x1) || (x == x2)) {    x += absoluteAccuracy;} ;^244^245^^247^248^229^259^if  ( denominator != 0 )  { x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator; while  ( x == x1 || x == x2 )  { x += absoluteAccuracy; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P16_Remove_Block]^^244^245^^247^248^229^259^if  ( denominator != 0 )  { x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator; while  ( x == x1 || x == x2 )  { x += absoluteAccuracy; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (  &  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x / = min + Math.random (  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (  )  *  ( max  >  min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x1 + Math.random (  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = min + Math.random (  )  *  ( x1 - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = max + Math.random (  )  *  ( min - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^x = min + Math .max ( i , i )   *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x =  y + Math.random (  )  *  ( max - y ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldx ;^253^^^^^244^254^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^252^253^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ; oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x != x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x == x1 || x <= x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( q == x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == x1 || x == q )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^while  ( x0 == x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2  >>  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 * C *  ( x2 - x1 )  + denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x + = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 + C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 * C *  ( x2  <=  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^x = x2 - 0.4 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = y2 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * x0 *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * C *  ( x2 - x1 )  / x;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = denominator - 2.0 * C *  ( x2 - x1 )  / x2;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * x1 *  ( x2 - C )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x1 - 2.0 * C *  ( x2 - x2 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x = x2 - 0.0d * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x +;^248^^^^^233^263^x += absoluteAccuracy;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x - oldx )  < tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  !=  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( tolerance - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - y0 )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - oldx )  <= x0 )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( oldx - x )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( tolerance - oldx )  <= x )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P6_Replace_Expression]^if  ( x - oldx )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^if  ( Math.max ( x - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y2 - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P15_Unwrap_Block]^setResult(x, i); return result;^259^260^261^262^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P16_Remove_Block]^^259^260^261^262^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( abs ( y )  )  <=  ( functionValueAccuracy )  )  {     setResult ( x, i ) ;     return result; }^259^^^^^244^274^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( i, x ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( tolerance, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^260^261^^^^245^275^setResult ( x, i ) ; return result;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y )  < functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^if  ( Math.sqrt ( y )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^if  ( Math .random (  )   <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( tolerance )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P15_Unwrap_Block]^setResult(x, i); return result;^263^264^265^266^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P16_Remove_Block]^^263^264^265^266^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  { setResult ( x, i ) ; return result; }^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P13_Insert_Block]^if  (  ( abs (  ( x - oldx )  )  )  <= tolerance )  {     setResult ( x, i ) ;     return result; }^263^^^^^248^278^[Delete]^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( y2, i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult (  i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( i, x ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( y0, i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^q =  ( x2 - x1 )  +  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^q =  ( x2  <  x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^q =  ( x2 - x1 )  /  ( x1  >>  x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( y2 - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( x2 - y1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( x1 - x2 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( x2 - x0 )  /  ( x1 - x1 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( x0 - x1 )  /  ( x1 - x2 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^q =   ( x - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^d012 =  ( d12 - d01 )  /  ( x2 - x0 ) ;q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = 0.5 *  ( x0 + x1 ) ; y2 = f.value ( x2 ) ;q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A / = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  <  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  ( y2   instanceof    ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A - = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  ( y2 -  ( 1   instanceof   q )  * y1   instanceof   q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  ( y2 -  ( 1 + q )  * y1 + q - y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^A = q *  ( y2 -  ( i + q )  * yi + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = y1 *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( y1 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * tolerance ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = y2 *  ( q -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( y0 -  ( 1 + q )  * y1 + q * y2 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( y1 -  ( 1 + q )  * y2 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^A = q *  ( y2 -  ( 4 + q )  * y4 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^d01 =  ( y1 - y0 )  /  ( x1 - x0 ) ;A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^d12 =  ( y2 - y1 )  /  ( x2 - x1 ) ;A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  &  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2   instanceof    ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B / =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  >>  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  +  ( 1 + q )  + y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B - =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1  >  q )  *  ( 1  >  q )  * y1  >  q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1  <<  q )  *  ( 1  <<  q )  * y1  <<  q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q - q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^B =  ( 4*q + 1 )  * y4 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^B =  ( 2*q + i )  * y2 -  ( i + q )  *  ( i + q )  * yi + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^B =  ( 2*q  )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + x1 )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y1 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * q;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * q -  ( 1 + y2 )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y0 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y2;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y0 + q * q * y1;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^B =  ( 2 / 1*q + 1 )  * y2 / 1 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^C - =  ( 1 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^C =  ( 1  &  q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^C =  ( 3 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^C =  ( 1 + x0 )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^C =  ( 1 + q )  * tolerance;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^C =  ( 1 + y2 )  * q;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^C =  ( 4 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^c1 = d01 +  ( x1 - x0 )  * d012;C =  ( 1 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta = B * B  &  4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta = B - B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta / = B * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta = B * B - 4 + A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^delta = B * B - i * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = x2 * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = B * B - 4 * x1 * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = B * B - 4 * A * x1;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = A * B - 4 * B * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = B * B - 4 * C * A;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^delta = B * B - 4L * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^delta = c1 * c1 - 4 * y1 * d012;delta = B * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.abs ( dplus )  >= Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( dplus )  > Math.abs ( y )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator =  Math.abs ( x1 )  > Math.abs ( dminus )  ? x1 : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B  <  delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B + B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( x0 * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( B * B - x ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( delta * B - B ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator =  Math.sqrt ( x * x - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2  &&  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 * C *  ( x2 - x1 )  * denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x - = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 - C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 * C *  ( x2  &  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^x = x2 - 8.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * x *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * C *  ( x2 - x )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * C *  ( x2 - x1 )  / y2;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * denominator *  ( x2 - x1 )  / C;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x = x2 - 1.0d * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x + =  x +;^248^^^^^233^263^x += absoluteAccuracy;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (  &  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x / = min + Math.random (  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (  )  *  ( max   instanceof   min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x0 + Math.random (  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = min + Math.random (  )  *  ( x2 - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = max + Math.random (  )  *  ( min - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x =  tolerance + Math.random (  )  *  ( max - tolerance ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldx  = null ;^253^^^^^238^268^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^y = f.value ( q ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^y = x.value ( f ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^y =  f.value ( x2 ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = max; y2 = f.value ( x2 ) ;y = f.value ( x ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = min; y0 = f.value ( x0 ) ;y = f.value ( x ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y1 = f.value ( x1 ) ;y = f.value ( x ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = max; y1 = f.value ( x1 ) ;y = f.value ( x ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^tolerance + = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x )  ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( x * Math.abs ( relativeAccuracy ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( absoluteAccuracy * Math.abs ( x ) , relativeAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^tolerance = Math.abs ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^tolerance = Math.max ( relativeAccuracy * Math.sqrt ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^tolerance =  Math.maq ( relativeAccuracy * Math.abs ( q ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = x; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  null; y0^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x < x1 ? x0 : x1;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y0 = x < x1 ? y0 : y1;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x0 = x1; y0 = y1;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = x1; y0 = q;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  x1; y0^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = x0; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  null; y1^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;x1 = x2; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x1 = x2; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x1 = x2; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x1 = x2; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = x; y2 = y;x1 = x2; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = x2; y1 = q;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  x2; y1^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = y2; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  x0; y2^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = xm; y0 = ym;x2 = x; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x2 = xm; y2 = ym;x2 = x; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x2; y1 = y2;x2 = x; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x1 = x; y1 = y;x2 = x; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^x0 = x1; y0 = y1;x2 = x; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^y2 = x > x1 ? y2 : y1;x2 = x; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = x; q2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  x; q2^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^oldx = q;^272^^^^^257^287^oldx = x;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldx =  tolerance;^272^^^^^257^287^oldx = x;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P1_Replace_Type]^int dplus = B + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = y + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = B + Math.sqrt ( x ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^double dminus = B  >=  Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dplus = B + Math.sqrt ( x1 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dminus = B - Math.sqrt ( tolerance ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator = Math.abs ( y2 )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( dplus )  > Math.abs ( y2 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator = Math.abs ( dplus )  > Math.abs ( x )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B   instanceof   delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( x * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( B * B - x0 ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double dminus = B - Math.sqrt ( delta ) ;denominator = Math.sqrt ( B * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^y = f.value ( x0 ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P11_Insert_Donor_Statement]^double ym = f.value ( xm ) ;y = f.value ( x ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^tolerance - = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( q ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( absoluteAccuracy ) , x ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , this ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^tolerance = Math.max ( relativeAccuracy * Math .random (  )  , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x1 ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  &&  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - x1 )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^if  ( Math .random (  )   <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.max ( tolerance - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( q, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( y2, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( y0 )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.sqrt ( x )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x1, i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x >= x1 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == q || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == x1 || x == tolerance )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( delta > 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( y1 >= 0.0 )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( delta >= 0.0D )  {^235^^^^^220^250^if  ( delta >= 0.0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B  &  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B / B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( B * B - x1 ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator =  Math.sqrt ( x * x - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B  >>  delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( x0 * B - delta ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( B * B - y ) ;^242^^^^^235^243^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( y1 )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( dplus )  > Math.abs ( x0 )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = y0 + Math.sqrt ( delta ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^double dminus = B  &&  Math.sqrt ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dminus = B - Math.sqrt ( x0 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dminus = y1 - Math.abs ( delta ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = B + Math.sqrt ( tolerance ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dplus = B + Math.sqrt ( x2 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dminus = B - Math.sqrt ( x ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( y )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator = Math.sqrt ( x )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( denominator == 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^if  ( denominator != -7 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( tolerance != 0 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( denominator != 2 )  {^244^^^^^229^259^if  ( denominator != 0 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (   instanceof   )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x + = min + Math.random (  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (  )  *  ( max   instanceof   min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 + Math.random (  )  *  ( max - min ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x =  y2 + Math.random (  )  *  ( max - y2 ) ;^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldx  =  oldx ;^253^^^^^244^254^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^252^^^^^244^254^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^while  ( x == x1 || x != x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^while  ( x == x0 || x == x2 )  {^247^^^^^232^262^while  ( x == x1 || x == x2 )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2  <=  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 / C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 * C *  ( x2  |  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^x = x2 - 6.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = tolerance - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = C - 2.0 * x2 *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x2 - 2.0 * C *  ( x2 - denominator )  / x1;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  ||  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x0 - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - x )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - oldx )  <= x1 )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - tolerance )  <= oldx )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^if  ( Math.abs ( y - oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( y1, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( y )  == functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( q )  <= functionValueAccuracy )  {^263^^^^^248^278^if  ( Math.abs ( y )  <= functionValueAccuracy )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( q, i ) ;^264^^^^^249^279^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^264^265^^^^249^279^setResult ( x, i ) ; return result;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^q =  ( x2 - x1 )  -  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^q =  ( x2  >=  x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^q =  ( x2 - x1 )  /  ( x1  ==  x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( x2 - q )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^q =  ( x2 - x1 )  /  ( x1 - q ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^q =   ( y - x1 )  /  ( x1 - x0 ) ;^230^^^^^215^245^q =  ( x2 - x1 )  /  ( x1 - x0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  ==  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  ( y2  <<   ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^A = q *  ( y2 -  ( 1  ||  q )  * y1  ||  q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = x *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( x0 -  ( 1 + q )  * y1 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( y2 -  ( 1 + q )  * q + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = y1 *  ( y2 -  ( 1 + q )  * q + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^A = q *  ( y2 -  ( 1 + q )  * y0 + q * y1 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^A = q *  ( y2 -  ( 0 + q )  * y0 + q * y0 ) ;^231^^^^^216^246^A = q *  ( y2 -  ( 1 + q )  * y1 + q * y0 ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  &&  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2  >=   ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B + =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ^  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1   instanceof   q )  *  ( 1   instanceof   q )  * y1   instanceof   q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q / q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + tolerance )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y0 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y2 -  ( 1 + y1 )  *  ( 1 + q )  * q + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^B =  ( 2*q + 1 )  * y1 -  ( 1 + q )  *  ( 1 + q )  * y2 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^B =  ( 2L*q + 1 )  * y2L -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^232^^^^^217^247^B =  ( 2*q + 1 )  * y2 -  ( 1 + q )  *  ( 1 + q )  * y1 + q * q * y0;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^C =  ( 1   instanceof   q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^C =  ( i + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^C =  ( 1 + y1 )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^C =  ( 1 + q )  * y0;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^C =  ( 2 + q )  * y2;^233^^^^^218^248^C =  ( 1 + q )  * y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta = B * B  >>  4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta = B / B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^delta - = B * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = y2 * B - 4 * A * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = B * B - 4 * x * C;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = B * B - 4 * A * y;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^delta = C * B - 4 * A * B;^234^^^^^219^249^delta = B * B - 4 * A * C;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.abs ( x1 )  > Math.abs ( dminus )  ? dplus : dminus;^239^^^^^224^254^denominator = Math.abs ( dplus )  > Math.abs ( dminus )  ? dplus : dminus;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B * B  >=  delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B / B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( B * B - y2 ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^denominator =  Math.sqrt ( x0 * x0 - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2  !=  2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x / = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = x2 - 2.0 * C *  ( x2  >=  x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P3_Replace_Literal]^x = x2 - 0.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = y - 2.0 * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x = x2 - 4.0d * C *  ( x2 - x1 )  / denominator;^245^^^^^230^260^x = x2 - 2.0 * C *  ( x2 - x1 )  / denominator;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x = min + Math.random (  <  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^x - = min + Math.random (  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = x1 + Math.random (  )  *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x = min + Math.random (  )  *  ( x1 - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^x = min + Math .max ( i , i )   *  ( max - min ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x =  y0 + Math.random (  )  *  ( max - y0 ) ;^252^^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^oldx ;^253^^^^^238^268^oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^y = f.value ( x1 ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^tolerance / = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x0 ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P7_Replace_Invocation]^tolerance = Math .random (  )  ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x0 =  x; y0^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x0 = x1; y0 = y;^269^^^^^254^284^x0 = x1; y0 = y1;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = tolerance; y1 = y2;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x1 =  q; y1^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x1 = x2; y1 = x0;^270^^^^^255^285^x1 = x2; y1 = y2;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = tolerance; y2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  null; y2^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^x2 = x; tolerance2 = y;^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^x2 =  x; y12^271^^^^^256^286^x2 = x; y2 = y;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^oldx = x0;^272^^^^^257^287^oldx = x;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^return null;^265^^^^^250^280^return result;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^double dplus = B + Math.sqrt ( x0 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dplus = B + Math.abs ( y0 ) ;^237^^^^^222^252^double dplus = B + Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^double dminus = B - Math.abs ( y2 ) ;^238^^^^^223^253^double dminus = B - Math.sqrt ( delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^denominator = Math.sqrt ( B - B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^denominator = Math.sqrt ( x1 * B - delta ) ;^242^^^^^227^257^denominator = Math.sqrt ( B * B - delta ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^252^253^^^^237^267^x = min + Math.random (  )  *  ( max - min ) ; oldx = Double.POSITIVE_INFINITY;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^y = f.value ( y0 ) ;^255^^^^^240^270^y = f.value ( x ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.abs ( tolerance ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^tolerance = Math.max ( relativeAccuracy * Math.abs ( x2 ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^tolerance = Math.max ( relativeAccuracy * Math.abs ( y2 ) , absoluteAccuracy ) ;^258^^^^^243^273^tolerance = Math.max ( relativeAccuracy * Math.abs ( x ) , absoluteAccuracy ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P2_Replace_Operator]^if  ( Math.abs ( x  ^  oldx )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^if  ( Math.abs ( x - y2 )  <= tolerance )  {^259^^^^^244^274^if  ( Math.abs ( x - oldx )  <= tolerance )  {^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P5_Replace_Variable]^setResult ( x1, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^setResult ( x2, i ) ;^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P14_Delete_Statement]^^260^^^^^245^275^setResult ( x, i ) ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
[P8_Replace_Mix]^return true;^275^^^^^260^290^throw new ConvergenceException  (" ")  ;^[CLASS] MullerSolver  [METHOD] solve2 [RETURN_TYPE] double   double min double max [VARIABLES] boolean  long  serialVersionUID  double  A  B  C  delta  denominator  dminus  dplus  max  min  oldx  q  tolerance  x  x0  x1  x2  y  y0  y1  y2  int  i  
