[P1_Replace_Type]^private static final  int  serialVersionUID = -370076995648386763L;^46^^^^^41^51^private static final long serialVersionUID = -370076995648386763L;^[CLASS] SumOfLogs   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID ;^46^^^^^41^51^private static final long serialVersionUID = -370076995648386763L;^[CLASS] SumOfLogs   [VARIABLES] 
[P1_Replace_Type]^private  short  n;^49^^^^^44^54^private int n;^[CLASS] SumOfLogs   [VARIABLES] 
[P8_Replace_Mix]^private  long  n;^49^^^^^44^54^private int n;^[CLASS] SumOfLogs   [VARIABLES] 
[P1_Replace_Type]^private float value;^54^^^^^49^59^private double value;^[CLASS] SumOfLogs   [VARIABLES] 
[P8_Replace_Mix]^private int value;^54^^^^^49^59^private double value;^[CLASS] SumOfLogs   [VARIABLES] 
[P8_Replace_Mix]^value ;^60^^^^^59^62^value = 0d;^[CLASS] SumOfLogs  [METHOD] <init> [RETURN_TYPE] SumOfLogs()   [VARIABLES] boolean  double  value  long  serialVersionUID  int  n  
[P3_Replace_Literal]^n = n;^61^^^^^59^62^n = 0;^[CLASS] SumOfLogs  [METHOD] <init> [RETURN_TYPE] SumOfLogs()   [VARIABLES] boolean  double  value  long  serialVersionUID  int  n  
[P8_Replace_Mix]^n = 2;^61^^^^^59^62^n = 0;^[CLASS] SumOfLogs  [METHOD] <init> [RETURN_TYPE] SumOfLogs()   [VARIABLES] boolean  double  value  long  serialVersionUID  int  n  
[P5_Replace_Variable]^value += Math.log ( value ) ;^68^^^^^67^70^value += Math.log ( d ) ;^[CLASS] SumOfLogs  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P8_Replace_Mix]^value +=  Math.log ( null ) ;^68^^^^^67^70^value += Math.log ( d ) ;^[CLASS] SumOfLogs  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P11_Insert_Donor_Statement]^sumLog += Math.log ( values[i] ) ;value += Math.log ( d ) ;^68^^^^^67^70^value += Math.log ( d ) ;^[CLASS] SumOfLogs  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P14_Delete_Statement]^^68^69^^^^67^70^value += Math.log ( d ) ; n++;^[CLASS] SumOfLogs  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P2_Replace_Operator]^if  ( n >= 0 )  {^76^^^^^75^81^if  ( n > 0 )  {^[CLASS] SumOfLogs  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P3_Replace_Literal]^if  ( n > n )  {^76^^^^^75^81^if  ( n > 0 )  {^[CLASS] SumOfLogs  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P8_Replace_Mix]^if  ( n > 2 )  {^76^^^^^75^81^if  ( n > 0 )  {^[CLASS] SumOfLogs  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P15_Unwrap_Block]^return value;^76^77^78^79^80^75^81^if  ( n > 0 )  { return value; } else { return Double.NaN; }^[CLASS] SumOfLogs  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P16_Remove_Block]^^76^77^78^79^80^75^81^if  ( n > 0 )  { return value; } else { return Double.NaN; }^[CLASS] SumOfLogs  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P5_Replace_Variable]^return d;^77^^^^^75^81^return value;^[CLASS] SumOfLogs  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P8_Replace_Mix]^value  = null ;^94^^^^^93^96^value = 0d;^[CLASS] SumOfLogs  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P3_Replace_Literal]^n = n;^95^^^^^93^96^n = 0;^[CLASS] SumOfLogs  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P8_Replace_Mix]^n = 0 * 3;^95^^^^^93^96^n = 0;^[CLASS] SumOfLogs  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double  d  value  long  serialVersionUID  int  n  
[P1_Replace_Type]^int sumLog = Double.NaN;^116^^^^^115^124^double sumLog = Double.NaN;^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( values, n, length )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test (  begin, length )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( values,  length )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( values, begin )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( begin, values, length )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( values, length, begin )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P6_Replace_Expression]^if  ( begin + length )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P15_Unwrap_Block]^sumLog = 0.0; for (int i = begin; i < (begin + length); i++) {    sumLog += java.lang.Math.log(values[i]);};^117^118^119^120^121^115^124^if  ( test ( values, begin, length )  )  { sumLog = 0.0; for  ( int i = begin; i < begin + length; i++ )  { sumLog += Math.log ( values[i] ) ; }^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P16_Remove_Block]^^117^118^119^120^121^115^124^if  ( test ( values, begin, length )  )  { sumLog = 0.0; for  ( int i = begin; i < begin + length; i++ )  { sumLog += Math.log ( values[i] ) ; }^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P1_Replace_Type]^for  (  short  i = begin; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P2_Replace_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P2_Replace_Operator]^for  &&  ( int i = begin; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P2_Replace_Operator]^for  ==  ( int i = begin; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^for  ( int i = n; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^for  ( nnt i = begin; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^for  ( int i = begin; i < begin + n; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^for  ( int i = length; i < begin + begin; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^for  ( beginnt i = i; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P8_Replace_Mix]^sumLog +=  Math.log ( null[i] ) ;^120^^^^^115^124^sumLog += Math.log ( values[i] ) ;^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P11_Insert_Donor_Statement]^value += Math.log ( d ) ;sumLog += Math.log ( values[i] ) ;^120^^^^^115^124^sumLog += Math.log ( values[i] ) ;^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P14_Delete_Statement]^^120^^^^^115^124^sumLog += Math.log ( values[i] ) ;^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P8_Replace_Mix]^sumLog = 0.0D;^118^^^^^115^124^sumLog = 0.0;^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P1_Replace_Type]^for  (  long  i = begin; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P2_Replace_Operator]^for  ( int i = begin; i > begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P2_Replace_Operator]^for  &  ( int i = begin; i < begin + length; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^119^^^^^115^124^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( values, begin, n )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^if  ( test ( length, begin, values )  )  {^117^^^^^115^124^if  ( test ( values, begin, length )  )  {^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
[P5_Replace_Variable]^return value;^123^^^^^115^124^return sumLog;^[CLASS] SumOfLogs  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  double  d  sumLog  value  long  serialVersionUID  int  begin  i  length  n  
