[P1_Replace_Type]^private float cachedNormalDeviate = Double.NaN;^41^^^^^36^46^private double cachedNormalDeviate = Double.NaN;^[CLASS] AbstractRandomGenerator   [VARIABLES] 
[P14_Delete_Statement]^^47^^^^^46^49^super (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] <init> [RETURN_TYPE] AbstractRandomGenerator()   [VARIABLES] double  cachedNormalDeviate  boolean  
[P8_Replace_Mix]^cachedNormalDeviate  =  cachedNormalDeviate ;^58^^^^^57^59^cachedNormalDeviate = Double.NaN;^[CLASS] AbstractRandomGenerator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  cachedNormalDeviate  boolean  
[P11_Insert_Donor_Statement]^cachedNormalDeviate = v2 * s;cachedNormalDeviate = Double.NaN;^58^^^^^57^59^cachedNormalDeviate = Double.NaN;^[CLASS] AbstractRandomGenerator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] double  cachedNormalDeviate  boolean  
[P1_Replace_Type]^short  bytesOut = 0;^86^^^^^85^99^int bytesOut = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^int bytesOut = bytesOut;^86^^^^^85^99^int bytesOut = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^while  ( bytesOut <= bytes.length )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^while  ( i < bytes.length )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^while  ( bytesOut < i )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^while  ( bytes.length < bytesOut )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^while  ( bytes.lengthOut < bytes )  {^87^^^^^85^99^while  ( bytesOut < bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^if  (  i >= 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^if  (  i > bytesOut )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  (  bytesOut > 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P6_Replace_Expression]^if  ( randInt >> 8 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^if  (  i > 0 + 1 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P9_Replace_Statement]^if  ( n <= 0  )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P9_Replace_Statement]^if  ( s != 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P15_Unwrap_Block]^randInt = randInt >> 8;^90^91^92^^^85^99^if  (  i > 0 )  { randInt = randInt >> 8; }^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P16_Remove_Block]^^90^91^92^^^85^99^if  (  i > 0 )  { randInt = randInt >> 8; }^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt  ||  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^randInt = randInt >> 10;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^randInt = i >> 8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 8 % 3;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P13_Insert_Block]^if  ( i > 0 )  {     randInt = randInt >> 8; }^91^^^^^85^99^[Delete]^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^if  ( bytesOut >= bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  ( randInt == bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  ( bytesOut == randInt )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  ( bytes.length == bytesOut )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  ( bytesOutOut == bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P15_Unwrap_Block]^return ;^94^95^96^^^85^99^if  ( bytesOut == bytes.length )  { return; }^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P16_Remove_Block]^^94^95^96^^^85^99^if  ( bytesOut == bytes.length )  { return; }^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P1_Replace_Type]^for  (  short  i = 0; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^for  ( int i = 0; i > 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = 1; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = 0; i < i; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = bytesOut; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^for  ( randIntnt i = 0; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^if  (  i > randInt )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^if  (  i > 0 - 2 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt  <<  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^randInt = randInt >> 11;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 8 >>> 0;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^if  ( bytesOut != bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  ( bytes.lengthOut == bytes )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt   instanceof   8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^randInt = randInt >> 2;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 8 / 2;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P1_Replace_Type]^bytes[bytesOut++] =  (  int  )  randInt;^93^^^^^85^99^bytes[bytesOut++] =  ( byte )  randInt;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^bytes[bytesOut++] =   ( byte )  randInt;^93^^^^^85^99^bytes[bytesOut++] =  ( byte )  randInt;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 1;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P1_Replace_Type]^bytes[bytesOut++] =  (  short  )  randInt;^93^^^^^85^99^bytes[bytesOut++] =  ( byte )  randInt;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P1_Replace_Type]^long  randInt = nextInt (  ) ;^88^^^^^85^99^int randInt = nextInt (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P7_Replace_Invocation]^int randInt = nextDouble (  ) ;^88^^^^^85^99^int randInt = nextInt (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = -7; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P14_Delete_Statement]^^88^^^^^85^99^int randInt = nextInt (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^if  (  i > 9 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^if  (  i > 3 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt  >=  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^randInt = randInt >> i;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^if  ( bytesOut <= bytes.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P5_Replace_Variable]^if  ( bytes == bytesOut.length )  {^94^^^^^85^99^if  ( bytesOut == bytes.length )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P1_Replace_Type]^for  (  long  i = 0; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^for  ( int i = 0; i == 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = i; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = -1; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^if  (  i < 0 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^if  (  i > 1 )  {^90^^^^^85^99^if  (  i > 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt  !=  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 9;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt  ==  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 7;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^randInt = randInt  <  8;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^randInt = randInt >> bytesOut;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P8_Replace_Mix]^randInt = randInt >> 8 - 1;^91^^^^^85^99^randInt = randInt >> 8;^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P3_Replace_Literal]^for  ( int i = 3; i < 3; i++ )  {^89^^^^^85^99^for  ( int i = 0; i < 3; i++ )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextBytes [RETURN_TYPE] void   byte[] bytes [VARIABLES] byte[]  bytes  boolean  double  cachedNormalDeviate  int  bytesOut  i  randInt  
[P2_Replace_Operator]^return / ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^116^^^^^115^117^return  ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] double  cachedNormalDeviate  boolean  
[P5_Replace_Variable]^return  ( int )   ( nextDouble (  )  * Integer.2 ) ;^116^^^^^115^117^return  ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] double  cachedNormalDeviate  boolean  
[P7_Replace_Invocation]^return  ( int )   ( nextInt (  )  * Integer.MAX_VALUE ) ;^116^^^^^115^117^return  ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] double  cachedNormalDeviate  boolean  
[P14_Delete_Statement]^^116^^^^^115^117^return  ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   [VARIABLES] double  cachedNormalDeviate  boolean  
[P2_Replace_Operator]^if  ( n > 0  )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P5_Replace_Variable]^if  ( result <= 0  )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P8_Replace_Mix]^if  ( n <= 4  )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P9_Replace_Statement]^if  (  i > 0 )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P9_Replace_Statement]^if  ( s != 0 )  {^136^^^^^135^141^if  ( n <= 0  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("upper bound must be positive");^136^137^138^^^135^141^if  ( n <= 0  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P16_Remove_Block]^^136^137^138^^^135^141^if  ( n <= 0  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P13_Insert_Block]^if  ( n <= 0 )  {     throw new IllegalArgumentException ( "upper bound must be positive" ) ; }^137^^^^^135^141^[Delete]^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P8_Replace_Mix]^return false;^137^^^^^135^141^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P1_Replace_Type]^short  result =  (  short  )   ( nextDouble (  )  * n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P2_Replace_Operator]^int result =  ( int )   ( nextDouble (  )  / n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P7_Replace_Invocation]^int result =  ( int )   ( nextInt (  )  * n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P14_Delete_Statement]^^139^140^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ; return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P11_Insert_Donor_Statement]^return  ( float )  nextDouble (  ) ;int result =  ( int )   ( nextDouble (  )  * n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P11_Insert_Donor_Statement]^return  ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;int result =  ( int )   ( nextDouble (  )  * n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P11_Insert_Donor_Statement]^return  ( int )   ( nextDouble (  )  * Integer.MAX_VALUE ) ;int result =  ( int )   ( nextDouble (  )  * n ) ;^139^^^^^135^141^int result =  ( int )   ( nextDouble (  )  * n ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P2_Replace_Operator]^return result <= n ? result : n - 1;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P2_Replace_Operator]^return result < n ? result : n  >>  1;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P3_Replace_Literal]^return result < n ? result : n - n;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P5_Replace_Variable]^return n < result ? result : n - 1;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P8_Replace_Mix]^return result  ;^140^^^^^135^141^return result < n ? result : n - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextInt [RETURN_TYPE] int   int n [VARIABLES] double  cachedNormalDeviate  int  n  result  boolean  
[P2_Replace_Operator]^return - ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^158^^^^^157^159^return  ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] double  cachedNormalDeviate  boolean  
[P7_Replace_Invocation]^return  ( long )   ( nextInt (  )  * Long.MAX_VALUE ) ;^158^^^^^157^159^return  ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] double  cachedNormalDeviate  boolean  
[P14_Delete_Statement]^^158^^^^^157^159^return  ( long )   ( nextDouble (  )  * Long.MAX_VALUE ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextLong [RETURN_TYPE] long   [VARIABLES] double  cachedNormalDeviate  boolean  
[P2_Replace_Operator]^return nextDouble (  )  < 0.5;^176^^^^^175^177^return nextDouble (  )  <= 0.5;^[CLASS] AbstractRandomGenerator  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] double  cachedNormalDeviate  boolean  
[P3_Replace_Literal]^return nextDouble (  )  <= 2.5;^176^^^^^175^177^return nextDouble (  )  <= 0.5;^[CLASS] AbstractRandomGenerator  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] double  cachedNormalDeviate  boolean  
[P7_Replace_Invocation]^return nextInt (  )  <= 0.5;^176^^^^^175^177^return nextDouble (  )  <= 0.5;^[CLASS] AbstractRandomGenerator  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] double  cachedNormalDeviate  boolean  
[P14_Delete_Statement]^^176^^^^^175^177^return nextDouble (  )  <= 0.5;^[CLASS] AbstractRandomGenerator  [METHOD] nextBoolean [RETURN_TYPE] boolean   [VARIABLES] double  cachedNormalDeviate  boolean  
[P1_Replace_Type]^return  ( int )  nextDouble (  ) ;^194^^^^^193^195^return  ( float )  nextDouble (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextFloat [RETURN_TYPE] float   [VARIABLES] double  cachedNormalDeviate  boolean  
[P7_Replace_Invocation]^return  ( float )  nextInt (  ) ;^194^^^^^193^195^return  ( float )  nextDouble (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextFloat [RETURN_TYPE] float   [VARIABLES] double  cachedNormalDeviate  boolean  
[P14_Delete_Statement]^^194^^^^^193^195^return  ( float )  nextDouble (  ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextFloat [RETURN_TYPE] float   [VARIABLES] double  cachedNormalDeviate  boolean  
[P5_Replace_Variable]^if  ( !Double.isNaN ( v2 )  )  {^232^^^^^231^250^if  ( !Double.isNaN ( cachedNormalDeviate )  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^if  ( !Double.isv2 ( cachedNormalDeviate )  )  {^232^^^^^231^250^if  ( !Double.isNaN ( cachedNormalDeviate )  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P15_Unwrap_Block]^double dev = cachedNormalDeviate; cachedNormalDeviate = java.lang.Double.NaN; return dev;^232^233^234^235^236^231^250^if  ( !Double.isNaN ( cachedNormalDeviate )  )  { double dev = cachedNormalDeviate; cachedNormalDeviate = Double.NaN; return dev; }^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P16_Remove_Block]^^232^233^234^235^236^231^250^if  ( !Double.isNaN ( cachedNormalDeviate )  )  { double dev = cachedNormalDeviate; cachedNormalDeviate = Double.NaN; return dev; }^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^cachedNormalDeviate  =  cachedNormalDeviate ;^234^^^^^231^250^cachedNormalDeviate = Double.NaN;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^cachedNormalDeviate = v2 * s;cachedNormalDeviate = Double.NaN;^234^^^^^231^250^cachedNormalDeviate = Double.NaN;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^return v1;^235^^^^^231^250^return dev;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^return v2;^235^^^^^231^250^return dev;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P1_Replace_Type]^float dev = cachedNormalDeviate;^233^^^^^231^250^double dev = cachedNormalDeviate;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^double dev = v2;^233^^^^^231^250^double dev = cachedNormalDeviate;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P12_Insert_Condition]^if  ( !Double.isNaN ( cachedNormalDeviate )  )  { double dev = cachedNormalDeviate; }^233^^^^^231^250^double dev = cachedNormalDeviate;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P1_Replace_Type]^int dev = cachedNormalDeviate;^233^^^^^231^250^double dev = cachedNormalDeviate;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P1_Replace_Type]^int v1 = 0;^237^^^^^231^250^double v1 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^double v1 = 1;^237^^^^^231^250^double v1 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^double v2 = 0;double v1 = 0;^237^^^^^231^250^double v1 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^double s = 1;double v1 = 0;^237^^^^^231^250^double v1 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P1_Replace_Type]^int v2 = 0;^238^^^^^231^250^double v2 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^double v2 = -6;^238^^^^^231^250^double v2 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^double v1 = 0;double v2 = 0;^238^^^^^231^250^double v2 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^double s = 1;double v2 = 0;^238^^^^^231^250^double v2 = 0;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P1_Replace_Type]^int s = 1;^239^^^^^231^250^double s = 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^double s = 4;^239^^^^^231^250^double s = 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^double v2 = 0;double s = 1;^239^^^^^231^250^double s = 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^double v1 = 0;double s = 1;^239^^^^^231^250^double s = 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^while  ( s >=-8  )  {^240^^^^^231^250^while  ( s >=1  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^while  ( s >=-1  )  {^240^^^^^231^250^while  ( s >=1  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^while  ( s >=0  )  {^240^^^^^231^250^while  ( s >=1  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^while  ( v1 >=1  )  {^240^^^^^231^250^while  ( s >=1  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^while  ( v2 >=1  )  {^240^^^^^231^250^while  ( s >=1  )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v1 = 2 * nextDouble (  )   <  1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v1 = 2 / nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^v1 = 10 * nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^v1 = 2 * nextDouble (  )  ;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P7_Replace_Invocation]^v1 = 2 * nextInt (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^v1 = 2L * nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^v2 = 2 * nextDouble (  )  - 1;v1 = 2 * nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v2 = 2 * nextDouble (  )   <<  1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v2 = 2 / nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^v =  * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^v2 = 2 * nextDouble (  )  ;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P7_Replace_Invocation]^v2 = 2 * nextInt (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^v2 / 2 = 2 / 2 * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^v1 = 2 * nextDouble (  )  - 1;v2 = 2 * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s = v1 - v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s / = v1 * v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^s = s * v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^s = v1 * v1 + s * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^s = v2 * v1 + v1 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^s =  v2 * v2 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P14_Delete_Statement]^^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^return nextDouble (  )  <= 0.5;v1 = 2 * nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P14_Delete_Statement]^^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^return nextDouble (  )  <= 0.5;v2 = 2 * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v1 = 2 * nextDouble (  )   |  1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v1 = 2 - nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^v1 = 3 * nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^v1 = 2 * 3 * nextDouble (  )  - 1;^241^^^^^231^250^v1 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v2 = 2 * nextDouble (  )   !=  1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^v2 = 2 - nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^v-3 = -3 * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^v2L = 2L * nextDouble (  )  - 1;^242^^^^^231^250^v2 = 2 * nextDouble (  )  - 1;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s - = v1 * v1 + v2 * v2;^243^^^^^231^250^s = v1 * v1 + v2 * v2;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^if  ( s == 0 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^if  ( s != 3 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^if  ( v2 != 0 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P6_Replace_Expression]^if  (  ( -2 )  *  ( log ( s )  )  / s )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P6_Replace_Expression]^if  ( -2 * log ( s ) )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^if  ( s != 0 - 2 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P9_Replace_Statement]^if  (  i > 0 )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P9_Replace_Statement]^if  ( n <= 0  )  {^245^^^^^231^250^if  ( s != 0 )  {^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P15_Unwrap_Block]^s = java.lang.Math.sqrt((((-2) * (java.lang.Math.log(s))) / s));^245^246^247^^^231^250^if  ( s != 0 )  { s = Math.sqrt ( -2 * Math.log ( s )  / s ) ; }^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P16_Remove_Block]^^245^246^247^^^231^250^if  ( s != 0 )  { s = Math.sqrt ( -2 * Math.log ( s )  / s ) ; }^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s = Math.sqrt ( -2 * Math.log ( s )  + s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s / = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^s = Math.sqrt ( --7 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^s = Math.sqrt ( -2 * Math.log ( v1 )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P7_Replace_Invocation]^s = Math.sqrt ( -2 * Math.sqrt ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^s = Math.sqrt ( -4 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P13_Insert_Block]^if  ( s != 0 )  {     s = sqrt (  (  (  ( -2 )  *  ( log ( s )  )  )  / s )  ) ; }^246^^^^^231^250^[Delete]^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^s = Math.sqrt ( --3 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^s = Math.sqrt ( -2 * Math.sqrt ( v2 )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P14_Delete_Statement]^^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^s = Math.sqrt ( -2 * Math.log ( v2 )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s = Math.sqrt ( -2 * Math.log ( s )  * s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^s - = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^s = Math.sqrt ( --1 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^s = Math.sqrt ( -2 + 3 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P3_Replace_Literal]^s = Math.sqrt ( -6 * Math.log ( s )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^s = Math.sqrt ( -2 * Math.sqrt ( v1 )  / s ) ;^246^^^^^231^250^s = Math.sqrt ( -2 * Math.log ( s )  / s ) ;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^cachedNormalDeviate / = v2 * s;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^cachedNormalDeviate = v1 * s;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^cachedNormalDeviate = v2 * v1;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^cachedNormalDeviate = s * v2;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P11_Insert_Donor_Statement]^cachedNormalDeviate = Double.NaN;cachedNormalDeviate = v2 * s;^248^^^^^231^250^cachedNormalDeviate = v2 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P2_Replace_Operator]^return / v1 * s;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^return v2 * s;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^return v1 * v2;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P5_Replace_Variable]^return s * v1;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
[P8_Replace_Mix]^return v1  ;^249^^^^^231^250^return v1 * s;^[CLASS] AbstractRandomGenerator  [METHOD] nextGaussian [RETURN_TYPE] double   [VARIABLES] double  cachedNormalDeviate  dev  s  v1  v2  boolean  
