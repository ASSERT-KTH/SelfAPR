[P1_Replace_Type]^private static final float DEFAULT_EPSILON = 10e-9;^31^^^^^26^36^private static final double DEFAULT_EPSILON = 10e-9;^[CLASS] Beta 1   [VARIABLES] 
[P3_Replace_Literal]^private static final double DEFAULT_EPSILON = 10e-1;^31^^^^^26^36^private static final double DEFAULT_EPSILON = 10e-9;^[CLASS] Beta 1   [VARIABLES] 
[P8_Replace_Mix]^private static  int DEFAULT_EPSILON = 10e-9;^31^^^^^26^36^private static final double DEFAULT_EPSILON = 10e-9;^[CLASS] Beta 1   [VARIABLES] 
[P14_Delete_Statement]^^37^^^^^36^38^super (  ) ;^[CLASS] Beta 1  [METHOD] <init> [RETURN_TYPE] Beta()   [VARIABLES] double  DEFAULT_EPSILON  boolean  
[P5_Replace_Variable]^return regularizedBeta ( b, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, x, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b, x, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta (  a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x,  b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b,  Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( a, x, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, DEFAULT_EPSILON, b, a, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( b, a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P8_Replace_Mix]^return regularizedBeta ( x, a, b, b, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, DEFAULT_EPSILON, b, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( DEFAULT_EPSILON, a, b, x, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P8_Replace_Mix]^return regularizedBeta ( x, a, a, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P14_Delete_Statement]^^54^^^^^51^55^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( epsilon, a, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, epsilon, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, epsilon, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b, x, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta (  a, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x,  b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a,  epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b,  Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( epsilon, a, b, x, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( a, x, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, b, a, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, epsilon, b, a, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( b, a, b, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( b, a, x, epsilon, Integer.MAX_VALUE ) ;^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P14_Delete_Statement]^^74^^^^^71^75^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b double epsilon [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  boolean  
[P5_Replace_Variable]^return regularizedBeta ( epsilon, a, b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, x, b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, x, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b, x, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta (  a, b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x,  b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a,  DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b, DEFAULT_EPSILON ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b,  maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( b, a, x, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( a, x, b, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, b, a, DEFAULT_EPSILON, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, b, maxIterations, DEFAULT_EPSILON ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, a, DEFAULT_EPSILON, b, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( x, maxIterations, b, DEFAULT_EPSILON, a ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return regularizedBeta ( DEFAULT_EPSILON, a, b, x, maxIterations ) ;^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P14_Delete_Statement]^^90^^^^^87^91^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x double a double b int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  x  int  maxIterations  boolean  
[P1_Replace_Type]^int ret;^119^^^^^104^134^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^double m;double ret;^119^^^^^104^134^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  && Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x <= 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x >= 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a < 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b < 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x == 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < maxIterations )  || ( x > 1 )  ||  ( a <= maxIterations.maxIterations )  ||  ( b <= maxIterations.maxIterations )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 9 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( ouble.isNaN ( x )  || ouble.isNaN ( a )  || ouble.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < -8 )  || ( x > 1 )  ||  ( a <= -8.-8 )  ||  ( b <= -8.-8 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 6 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( Double.isNaN ( ret )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( Double.isNaN ( x )  || Double.isNaN ( m )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( Double.isepsilon ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( Double.isNaN ( b )  || Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( Double.isNaN ( x )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  (  Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( isNaN(x) || isNaN(a)) || isNaN(b)) || (x < 0)) || (x > 1) || a <= 0.0) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( isNaN(x) || isNaN(a)) || isNaN(b)) || (x < 0) || x > 1) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( isNaN(x) || isNaN(a)) || isNaN(b) || x < 0) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( isNaN(x) || isNaN(a) || isNaN(b)) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( isNaN(x || isNaN(a)) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( x < 0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( x > 1 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a <= 0.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( b <= 0.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( x > (a + 1.0) / ((a + b) + 2.0) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + 1.0 /  ( a + b )  + 2.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + 1.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b + 2.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( 1.0 - 0 - x), b, a, epsilon, maxIterations) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( 1.0 - x ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n % 2 == 0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n % 2 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n / 2.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m *  ( b - m )  )  * x /  (  ( a +  ( 2 * m )  )  - 1 )  *  ( a +  ( 2 * m ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m *  ( b - m )  * x ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m * b - m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( b - m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 * a +  ( 2 * m ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + 2 * m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( 2 * m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n - 1.0 / 2.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n - 1.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( -(((a + m) * ((a + b) + m)) * x) / (a + (2 * m)) * ((a + (2 * m)) + 1.0) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  (  ( a + m )  *  (  ( a + b )  + m )  * x ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + m *  ( a + b )  + m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b + m ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  *  ( a +  ( 2 * m )  + 1.0 ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  + 1.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( exp (  (  (  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  )  -  ( log ( a )  )  )  -  ( logBeta ( a, b, epsilon, maxIterations )  )  )  )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( exp (  (  (  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  )  -  ( log ( a )  )  )  -  ( logBeta ( a, b, epsilon, maxIterations )  )  )  )  * 1.0 ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  (  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  )  -  ( log ( a )  )  - logBeta ( a, b, epsilon, maxIterations ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  - log ( a ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a *  ( log ( x )  )  + b *  ( log (  ( 1.0 - x )  )  ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a * log ( x ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( b * log (  ( 1.0 - x )  ) ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  (  Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 4 )  || ( x > 1 )  ||  ( a <= 4.4 )  ||  ( b <= 4.4 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >=  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  *  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a  &&  1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  /  ( a  >>  b  >>  2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  /  ( a  <=  b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  <  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  >>  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  +  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ==  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ||  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  /  ( a  >=  b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if   instanceof   ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  !=  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  -  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  <<  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 0.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 10.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + Infinity )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + n.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.-3 )  /  ( a + b + 2.-3 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 18.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + maxIterations.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + .0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b .0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 0.14285714285714285 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 0.3333333333333333 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 0.25 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 8.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 0.125 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^} else if  ( ret >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^} else if  ( x >  ( x + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^} else if  ( x >  ( a + 1.0 )  /  ( a + ret + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^} else if  ( epsilon >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^} else if  ( a >  ( x + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + 1.0 /  ( a + b )  + 2.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + 1.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + b + 2.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + b )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( 1.0 - 0 - x), b, a, epsilon, maxIterations) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( 1.0 - x )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( n % 2 == 0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( n % 2 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( n / 2.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( m *  ( b - m )  )  * x /  (  ( a +  ( 2 * m )  )  - 1 )  *  ( a +  ( 2 * m ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( m *  ( b - m )  * x )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( m * b - m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( b - m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a +  ( 2 * m )  - 1 * a +  ( 2 * m ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a +  ( 2 * m )  - 1 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + 2 * m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( 2 * m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( n - 1.0 / 2.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( n - 1.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( -(((a + m) * ((a + b) + m)) * x) / (a + (2 * m)) * ((a + (2 * m)) + 1.0) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  (  ( a + m )  *  (  ( a + b )  + m )  * x )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + m *  ( a + b )  + m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a + b + m )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a +  ( 2 * m )  *  ( a +  ( 2 * m )  + 1.0 ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a +  ( 2 * m )  + 1.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( exp (  (  (  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  )  -  ( log ( a )  )  )  -  ( logBeta ( a, b, epsilon, maxIterations )  )  )  )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( exp (  (  (  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  )  -  ( log ( a )  )  )  -  ( logBeta ( a, b, epsilon, maxIterations )  )  )  )  * 1.0 )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  (  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  )  -  ( log ( a )  )  - logBeta ( a, b, epsilon, maxIterations ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  (  ( a *  ( log ( x )  )  )  +  ( b *  ( log (  ( 1.0 - x )  )  )  )  - log ( a ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a *  ( log ( x )  )  + b *  ( log (  ( 1.0 - x )  )  ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( a * log ( x ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else if  ( b * log (  ( 1.0 - x )  ) )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^} else {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( n % 2 <= 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( n  ||  2 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % n == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 2 ==  )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % maxIterations == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % -2 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n %  == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( maxIterations % 2 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n % 2 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n / 2.0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m *  ( b - m )  )  * x /  (  ( a +  ( 2 * m )  )  - 1 )  *  ( a +  ( 2 * m ) )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m *  ( b - m )  * x )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m * b - m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( b - m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 * a +  ( 2 * m ) )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + 2 * m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( 2 * m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n - 1.0 / 2.0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n - 1.0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( -(((a + m) * ((a + b) + m)) * x) / (a + (2 * m)) * ((a + (2 * m)) + 1.0) )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  (  ( a + m )  *  (  ( a + b )  + m )  * x )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + m *  ( a + b )  + m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b + m )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  *  ( a +  ( 2 * m )  + 1.0 ) )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  + 1.0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  ( n % 2 - 0 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n - 1.0 )  * 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  ==  1.0 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 0.2 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 0.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^m =  ( maxIterations - 1.0 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m =  ( n - 1.0D )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  - (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  &&  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  <<  b  <<  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >>  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  >=  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 + m )  )  *  ( a +  ( 2 + m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  >>   ( 2 * m )   >>  1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  <  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 - m )  )  *  ( a +  ( 2 - m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( maxIterations * m )  )  *  ( a +  ( maxIterations * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 7 * m )  )  *  ( a +  ( 7 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 9.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( ret + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + ret )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + ret + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + b + m )  * ret )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 3 * m )  )  *  ( a +  ( 3 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m = n - 2.0;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m = n / 1.0;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^m = maxIterations / 2.0;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m = n / 2.0d;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  + (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m +  ( b - m )  + x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  ||  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   >  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  &  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 / m )  - 1 )  *  ( a +  ( 2 / m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  >>  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 - m )  - 1 )  *  ( a +  ( 2 - m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( maxIterations * m )  - 1 )  *  ( a +  ( maxIterations * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( n * m )  - 1 )  *  ( a +  ( n * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( x - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( ret +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 3 * m )  - 1 )  *  ( a +  ( 3 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m = n * 2.0;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m = n / 0.3333333333333333;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m = n / 4.0d;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m -  ( b - m )  - x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  &&  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   ==  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  >  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 + m )  - 1 )  *  ( a +  ( 2 + m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =   instanceof   ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 11 * m )  - 1 )  *  ( a +  ( 11 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( ret - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * ret )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 4 * m )  - 1 )  *  ( a +  ( 4 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n - 1.0 )  * 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  |  1.0 )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 0.125 )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^m =  ( maxIterations - 1.0 )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m =  ( n - 3.0d )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  - (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret / = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  ^  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  <=  b  <=  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >>  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  !=  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 / m )  )  *  ( a +  ( 2 / m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  <   ( 2 * m )   <  1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  <  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( n * m )  )  *  ( a +  ( n * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.25 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + ret )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + ret + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + b + m )  * ret )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 0 * m )  )  *  ( a +  ( 0 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 - fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  ||  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  >=  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  >>  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret / = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  ==  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.125 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.125 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 4.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 4.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( m * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( m )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, n )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( epsilon * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( epsilon )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( epsilon * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, maxIterations, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( maxIterations * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( fraction )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / x.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^ret = Math.exp (  ( a * Math.exp ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - regularizedBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0D - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0D / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^return m;^141^^^^^125^151^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return epsilon;^141^^^^^125^151^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^return 0.14285714285714285;^145^^^^^125^151^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return 1.0d;^145^^^^^125^151^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ContinuedFraction fraction = maxIterationsew ContinuedFraction (  )  {^128^^^^^125^151^ContinuedFraction fraction = new ContinuedFraction (  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P1_Replace_Type]^int ret;^130^^^^^125^151^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^double m;double ret;^130^^^^^125^151^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P1_Replace_Type]^int m;^131^^^^^125^151^double m;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^double ret;double m;^131^^^^^125^151^double m;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  >  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  &  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  &&  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 3.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 3.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( ret * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( ret )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( x * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, m, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( x * Math.log ( a )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( b )  )  +  ( x * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( epsilon )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  >>  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( ret )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^Math.exp ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^Math.log ( x )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, x, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b, ret, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b, epsilon, n )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( epsilon )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( b )  - logBeta ( a, a, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, epsilon, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, maxIterations, epsilon, b )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^Math.log ( a )  - regularizedBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^Math.log ( x )  - regularizedBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( m, epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, ret, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, epsilon, n ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x,  maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, epsilon ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / maxIterations.evaluate ( x, epsilon, fraction ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( maxIterations, epsilon, x ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( epsilon, x, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  ||  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  >  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 9.0 - regularizedBeta ( 9.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 2.0 - regularizedBeta ( 2.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, ret, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, x, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, n ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 -  b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x,  a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b,  epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a,  maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - epsilon, b, a, x, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, a, b, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - a, b, x, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - maxIterations, b, a, epsilon, x ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = 3.0d - regularizedBeta ( 3.0d - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 7.0 - regularizedBeta ( 7.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - ret, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, ret, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - b, x, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, epsilon, a, b, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, epsilon, a, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, x, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, maxIterations ) ;ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^return regularizedBeta ( x, a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^return regularizedBeta ( x, a, b, epsilon, Integer.MAX_VALUE ) ;ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( n % 2 >= 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( n  !=  2 == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % n == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 2 == n )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % maxIterations == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^if  ( maxIterations % 2 == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n % 2 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n / 2.0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m *  ( b - m )  )  * x /  (  ( a +  ( 2 * m )  )  - 1 )  *  ( a +  ( 2 * m ) )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m *  ( b - m )  * x )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( m * b - m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( b - m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 * a +  ( 2 * m ) )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + 2 * m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( 2 * m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n - 1.0 / 2.0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( n - 1.0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( -(((a + m) * ((a + b) + m)) * x) / (a + (2 * m)) * ((a + (2 * m)) + 1.0) )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  (  ( a + m )  *  (  ( a + b )  + m )  * x )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + m *  ( a + b )  + m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b + m )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a + b )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  *  ( a +  ( 2 * m )  + 1.0 ) )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  + 1.0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  ( maxIterations % 2L == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n - 1.0 )  + 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  <=  1.0 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 6.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  * (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret / = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  >=  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >=  b  >=  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  ==  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  &  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 / m )  )  *  ( a +  ( 2 / m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  <<   ( 2 * m )   <<  1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (   instanceof   ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( n * m )  )  *  ( a +  ( n * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 7.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2L * m )  )  *  ( a +  ( 2L * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m = n - 2.0;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m = n / 0.3333333333333333;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^m = maxIterations / 2.0;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m = n / 0.0d;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  * (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m -  ( b - m )  - x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret / =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  <  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   <  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  !=  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 / m )  - 1 )  *  ( a +  ( 2 / m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ||  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 + m )  - 1 )  *  ( a +  ( 2 + m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( maxIterations * m )  - 1 )  *  ( a +  ( maxIterations * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - n )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( ret - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( x - m )  * b )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 5 * m )  - 1 )  *  ( a +  ( 5 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  >=  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, x, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = 4.0d - regularizedBeta ( 4.0d - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m = n + 2.0;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m = n / 0.4;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m = n / 2.0D;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  - (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m +  ( b - m )  + x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  >  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   &  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  >  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( n * m )  - 1 )  *  ( a +  ( n * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( x - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * ret )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 1 * m )  - 1 )  *  ( a +  ( 1 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n - 1.0 )  * 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  >>  1.0 )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 5.0 )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 0.6666666666666666;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^m =  ( maxIterations - 1.0 )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m =  ( n - 4.0d )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  * (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  ||  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  <=  b  <=  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  ==  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  >  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 / m )  )  *  ( a +  ( 2 / m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  <   ( 2 * m )   <  1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  <  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 + m )  )  *  ( a +  ( 2 + m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( maxIterations * m )  )  *  ( a +  ( maxIterations * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( -5 * m )  )  *  ( a +  ( -5 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 6.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + ret )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2L * m )  )  *  ( a +  ( 2L * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 + fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret - = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  >>  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  ==  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  <<  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  ^  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 3.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 3.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.2 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.2 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( ret * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( m )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, n )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( epsilon * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( fraction )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / x.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( epsilon * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( maxIterations )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, x )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( fraction * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / a.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^ret = Math.exp (  ( a * Math.exp ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - regularizedBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0D - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0D / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^return x;^141^^^^^126^156^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return 4.0d;^145^^^^^130^160^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ContinuedFraction fraction = maxIterationsew ContinuedFraction (  )  {^128^^^^^113^143^ContinuedFraction fraction = new ContinuedFraction (  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P1_Replace_Type]^float ret;^130^^^^^115^145^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^double m;double ret;^130^^^^^115^145^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P1_Replace_Type]^int m;^131^^^^^116^146^double m;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^double ret;double m;^131^^^^^116^146^double m;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0   instanceof   regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, ret, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, maxIterations, epsilon, a ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = 1.0 - regularizedBeta ( 1.0 - m, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  !=  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  >=  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ==  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret / = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  ||  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.125 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.125 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( x * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( ret )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( x * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( x * Math.log ( a )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( b )  )  +  ( x * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.exp ( ret )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  >  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( x )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^Math.exp ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, x, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta (  b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a,  epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b,  maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( b )  - logBeta ( a, a, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( epsilon )  - logBeta ( a, b, a, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, b, maxIterations, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^Math.log ( a )  - regularizedBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^Math.log ( a )  - logBeta ( a, b, epsilon, n )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( ret, epsilon, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, epsilon, n ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate (  epsilon, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x,  maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, epsilon ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / epsilon.evaluate ( x, fraction, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( epsilon, x, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / maxIterations.evaluate ( x, epsilon, fraction ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^1.0 / fraction .ContinuedFraction (  )  ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P14_Delete_Statement]^^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret  =  ret ;^124^^^^^121^151^ret = Double.NaN;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x <  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a  <  1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  /  ( a  >=  b  >=  2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  /  ( a  |  b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  <=  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  &&  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^} else if  ( x >  ( a + 1.0 )  /  ( a  <<  b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 7.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 12.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 6.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.maxIterations )  /  ( a + b + 2.maxIterations )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 14.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + .0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a .0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 0.1111111111111111 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 1.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 0.5 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^} else if  ( x >  ( a + 2.0 )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^} else if  ( x >  ( a + 1.0 )  /  ( a + m + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^} else if  ( x >  ( a + 3.0d )  /  ( a + b + 2.0 )  )  {^125^^^^^110^140^} else if  ( x >  ( a + 1.0 )  /  ( a + b + 2.0 )  )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( n % 2 != 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^if  ( n  <<  2 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 2 == -5 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 11 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 10 == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  ( n % 2L == 0 )  {^132^^^^^125^151^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  |  1.0 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 4.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  ||  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >>  b  >>  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ==  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a   instanceof    ( 2 * m )    instanceof   1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ^  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  (  * m )  )  *  ( a +  (  * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.16666666666666666 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 4 * m )  )  *  ( a +  ( 4 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m = n + 2.0;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m = n / 4.0;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m = n / 2.0D;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  - (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m /  ( b - m )  / x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret / =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  <  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   |  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( -1 * m )  - 1 )  *  ( a +  ( -1 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  -  )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  (  * m )  - 1 )  *  ( a +  (  * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( x - m )  * b )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * 1 * m )  - 1 )  *  ( a +  ( 2 * 1 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m = n / 0.6666666666666666;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m = n / 1.0d;^133^^^^^125^151^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  !=  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   ||  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  <=  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  >=  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 5 * m )  - 1 )  *  ( a +  ( 5 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2L * m )  - 1 )  *  ( a +  ( 2L * m )  )  ) ;^134^135^^^^125^151^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n - 1.0 )  - 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  >=  1.0 )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 6.0 )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 0.5;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m =  ( n - 2.0d )  / 2.0;^137^^^^^125^151^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  * (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret + = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  ==  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >  b  >  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ^  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  !=   ( 2 * m )   !=  1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ==  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 - m )  )  *  ( a +  ( 2 - m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( maxIterations * m )  )  *  ( a +  ( maxIterations * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.2 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 1 * m )  )  *  ( a +  ( 1 * m )  + 1.0 )  ) ;^138^139^^^^125^151^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  ^  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  <<  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0   instanceof   x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.14285714285714285 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.14285714285714285 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.3333333333333333 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.3333333333333333 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( b * Math.log ( x )  )  +  ( a * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( fraction * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / b.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0d - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0d / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^return x;^141^^^^^125^151^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^return 8.0;^145^^^^^125^151^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return 1.0D;^145^^^^^125^151^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  <=  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 2.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 2.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^125^151^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( maxIterations )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^125^151^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( ret, epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / x.evaluate ( fraction, epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P7_Replace_Invocation]^1.0 / fraction .ContinuedFraction (  )  ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^1.0 / fraction.evaluate ( epsilon, epsilon, maxIterations ) ;^150^^^^^125^151^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  >>  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  |  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 0.2 - regularizedBeta ( 0.2 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 0.125 - regularizedBeta ( 0.125 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, maxIterations, epsilon ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = 0.0d - regularizedBeta ( 0.0d - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 0.25 - regularizedBeta ( 0.25 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 2 ==  )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % 1 == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^if  ( n % -7 == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  ( n % 2 >>> 1 == 0 )  {^132^^^^^117^147^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n - 1.0 )  - 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  ^  1.0 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 2.0 )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 10.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m =  ( n - 1.0d )  / 2.0;^137^^^^^132^140^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  <  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  &&  b  &&  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  !=  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  &&  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  ==   ( 2 * m )   ==  1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ||  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 8 * m )  )  *  ( a +  ( 8 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.2 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + epsilon )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^132^140^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  >=  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  >>  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 - m )  - 1 )  *  ( a +  ( 2 - m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =   instanceof   ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  -  )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( ret +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2L * m )  - 1 )  *  ( a +  ( 2L * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret ;^124^^^^^109^139^ret = Double.NaN;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  <<  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = 8.0 - regularizedBeta ( 8.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, m, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = 2.0d - regularizedBeta ( 2.0d - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m = n * 2.0;^133^^^^^118^148^m = n / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  + (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b  <=  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   >  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 3 * m )  - 1 )  *  ( a +  ( 3 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - maxIterations )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret =  ( ret *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^119^149^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^m =  ( n  >=  1.0 )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^m =  ( n - 0.5 )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^m =  ( n - 1.0D )  / 2.0;^137^^^^^122^152^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a  &&  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  &&  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  !=  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = - (  |  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 5 * m )  )  *  ( a +  ( 5 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( n * m )  )  *  ( a +  ( n * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.14285714285714285 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( ret + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + b + m )  * ret )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 3 * m )  )  *  ( a +  ( 3 * m )  + 1.0 )  ) ;^138^139^^^^123^153^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 * fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  |  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0  <<  x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  >=  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.14285714285714285 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.14285714285714285 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( epsilon )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, x, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( b * Math.log ( x )  )  +  ( a * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, maxIterations, epsilon )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, fraction, maxIterations )  )  * 1.0 / epsilon.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 3.0d - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 3.0d / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return m;^141^^^^^126^156^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^return 0.125;^145^^^^^130^160^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return 0.0d;^145^^^^^130^160^return 1.0;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P1_Replace_Type]^int ret;^130^^^^^115^145^double ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  ( Double.isNaN ( x )  || Double.isNaN ( ret )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( ret )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^121^122^123^^^106^136^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( x < 0 )  || ( x > 1 )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  ) {^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = 1.0  &  regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, m, maxIterations ) ;^126^^^^^111^141^ret = 1.0 - regularizedBeta ( 1.0 - x, b, a, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P2_Replace_Operator]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0   instanceof   x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 9.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 9.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( m * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^ret = Math.exp (  ( maxIterations * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, a )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.exp ( x )  )  +  ( ret * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^ret = Math.exp (  ( a * Math.log ( epsilon )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P3_Replace_Literal]^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 0.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 0.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^148^149^150^^^133^163^ret = Math.exp (  ( a * Math.log ( x )  )  +  ( b * Math.log ( 1.0 - x )  )  - Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( ret )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, ret, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^Math.log ( a )  - logBeta ( a, epsilon, b, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^149^150^^^^134^164^Math.log ( a )  - logBeta ( a, b, epsilon, maxIterations )  )  * 1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, x, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / x.evaluate ( fraction, epsilon, maxIterations ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^1.0 / fraction.evaluate ( x, maxIterations, epsilon ) ;^150^^^^^135^165^1.0 / fraction.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P5_Replace_Variable]^return x;^153^^^^^138^168^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P8_Replace_Mix]^return epsilon;^153^^^^^138^168^return ret;^[CLASS] Beta 1  [METHOD] regularizedBeta [RETURN_TYPE] double   double x final double a final double b double epsilon int maxIterations [VARIABLES] boolean  double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  n  ContinuedFraction  fraction  
[P1_Replace_Type]^int ret;^130^^^^^129^142^double ret;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P11_Insert_Donor_Statement]^double m;double ret;^130^^^^^129^142^double ret;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P1_Replace_Type]^int m;^131^^^^^129^142^double m;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P11_Insert_Donor_Statement]^double ret;double m;^131^^^^^129^142^double m;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^if  ( n % 2 <= 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^if  ( n  ^  2 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^if  ( n % -1 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^if  ( n % 2 == 3 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^if  ( n % n == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^if  ( n % 1 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^if  ( n %  == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( n % 2 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( n / 2.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( m *  ( b - m )  )  * x /  (  ( a +  ( 2 * m )  )  - 1 )  *  ( a +  ( 2 * m ) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( m *  ( b - m )  * x )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( m * b - m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( b - m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 * a +  ( 2 * m ) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a + 2 * m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( 2 * m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( n - 1.0 / 2.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( n - 1.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( -(((a + m) * ((a + b) + m)) * x) / (a + (2 * m)) * ((a + (2 * m)) + 1.0) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  (  ( a + m )  *  (  ( a + b )  + m )  * x )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a + m *  ( a + b )  + m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a + m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a + b + m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a + b )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  *  ( a +  ( 2 * m )  + 1.0 ) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  + 1.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^if  ( n % 5 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^m =  ( n - 1.0 )  + 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^m =  ( n  >>  1.0 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^m =  ( n - 2.0 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^m =  ( n - 2.0d )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  * (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret / = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret - = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a  <=  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >>  b  >>  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  <  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  <<  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 - m )  )  *  ( a +  ( 2 - m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  !=   ( 2 * m )   !=  1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  <  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 / m )  )  *  ( a +  ( 2 / m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 1 * m )  )  *  ( a +  ( 1 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( -4 * m )  )  *  ( a +  ( -4 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.16666666666666666 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + b + m )  * epsilon )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( m + a )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 / 2 * m )  )  *  ( a +  ( 2 / 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P11_Insert_Donor_Statement]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^m = n + 2.0;^133^^^^^129^142^m = n / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^m = n / 12.0;^133^^^^^129^142^m = n / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^m = n / 0.0d;^133^^^^^129^142^m = n / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  + (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m -  ( b - m )  - x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret + =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b  >>  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret - =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   <  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ^  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 - m )  - 1 )  *  ( a +  ( 2 - m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ||  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 4 * m )  - 1 )  *  ( a +  ( 4 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - n )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( n * m )  - 1 )  *  ( a +  ( n * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( ret - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * ret )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( ret +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 5 * m )  - 1 )  *  ( a +  ( 5 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P11_Insert_Donor_Statement]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^m = n * 2.0;^133^^^^^129^142^m = n / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^m = n / 3.0d;^133^^^^^129^142^m = n / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  * (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m /  ( b - m )  / x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b  &&  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret / =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   ==  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  <  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 / m )  - 1 )  *  ( a +  ( 2 / m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  !=  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 + m )  - 1 )  *  ( a +  ( 2 + m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * epsilon )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * 2 * m )  - 1 )  *  ( a +  ( 2 * 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^m =  ( n - 1.0 )  * 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^m =  ( n  <<  1.0 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^m =  ( n - 0.1111111111111111 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 0.25;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  + (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a  ==  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  !=  b  !=  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret + = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (   instanceof   ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  <   ( 2 * m )   <  1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  >  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 + m )  )  *  ( a +  ( 2 + m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( -3 * m )  )  *  ( a +  ( -3 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 4 * m )  )  *  ( a +  ( 4 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.2 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + ret + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + b + m )  * ret )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^return x;^141^^^^^129^142^return ret;^[CLASS] Beta 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P3_Replace_Literal]^return 8.0;^145^^^^^144^146^return 1.0;^[CLASS] Beta 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P8_Replace_Mix]^return 1.0D;^145^^^^^144^146^return 1.0;^[CLASS] Beta 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  n  boolean  
[P5_Replace_Variable]^return logBeta ( x, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a, b, x, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta (  b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a, b,  Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( DEFAULT_EPSILON, b, a, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( b, a, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a, ret, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a, b, ret, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P5_Replace_Variable]^return logBeta ( a, DEFAULT_EPSILON, b, Integer.MAX_VALUE ) ;^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P14_Delete_Statement]^^164^^^^^163^165^return logBeta ( a, b, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  boolean  
[P1_Replace_Type]^int ret;^187^^^^^184^197^double ret;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P11_Insert_Donor_Statement]^double m;double ret;^187^^^^^184^197^double ret;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  && Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a < 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b < 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^if  ( Double.isNaN ( m )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^if  ( Double.isx ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^if  ( Double.isNaN ( b )  || Double.isNaN ( a )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( Double.isNaN ( a )  ) {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  (  Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( isNaN(a) || isNaN(b) || a <= 0.0) )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( isNaN(a || isNaN(b)) )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( a <= 0.0 )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( b <= 0.0 )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( logGamma ( a )  )  +  ( logGamma ( b )  )  - logGamma (  ( a + b ) )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( logGamma ( a )  + logGamma ( b ) )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P6_Replace_Expression]^if  ( a + b )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^if  (  Double.isNaN ( b )  ||  ( a <= 0.0D )  ||  ( b <= 0.0D )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P15_Unwrap_Block]^ret = java.lang.Double.NaN;^189^190^191^192^193^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  { ret = Double.NaN; } else { ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ; }^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P16_Remove_Block]^^189^190^191^192^193^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  { ret = Double.NaN; } else { ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ; }^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )   |  Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^ret = Gamma.logGamma ( a )  ||  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a  ^  b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^ret = Gamma.logGamma ( ret )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( x )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^ret = Gamma.logGamma ( b )  + Gamma.logGamma ( a )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^ret =  Gnullmmnull.logGnullmmnull ( null )  + Gnullmmnull.logGnullmmnull ( b )  - Gnullmmnull.logGnullmmnull ( null + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P13_Insert_Block]^if  (  (  (  ( isNaN ( a )  )  ||  ( isNaN ( b )  )  )  ||  ( a <= 0.0 )  )  ||  ( b <= 0.0 )  )  {     ret = NaN; }else {     ret =  (  ( logGamma ( a )  )  +  ( logGamma ( b )  )  )  -  ( logGamma (  ( a + b )  )  ) ; }^192^^^^^184^197^[Delete]^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P14_Delete_Statement]^^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( ret )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^Gamma.logGamma ( a  &  b ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^Gamma.logGamma ( x + b ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^Gamma.logGamma ( a + x ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^Gamma.logGamma ( b + a ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^Gamma.logGamma ( ret + b ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P14_Delete_Statement]^^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^ret  = null ;^190^^^^^184^197^ret = Double.NaN;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^ret  =  ret ;^190^^^^^184^197^ret = Double.NaN;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )   ^  Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^ret = Gamma.logGamma ( a )  <<  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a  <=  b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^ret = Gamma.logGamma ( x )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^ret =  Gxmmx.logGxmmx ( x )  + Gxmmx.logGxmmx ( b )  - Gxmmx.logGxmmx ( x + b ) ;^192^193^^^^184^197^ret = Gamma.logGamma ( a )  + Gamma.logGamma ( b )  - Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^if  ( Double.isNaN ( ret )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^if  ( Double.isNaN ( a )  || Double.isNaN ( m )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^189^^^^^184^197^if  ( Double.isNaN ( a )  || Double.isNaN ( b )  ||  ( a <= 0.0 )  ||  ( b <= 0.0 )  )  {^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P2_Replace_Operator]^Gamma.logGamma ( a  >  b ) ;^193^^^^^184^197^Gamma.logGamma ( a + b ) ;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P5_Replace_Variable]^return x;^196^^^^^184^197^return ret;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P8_Replace_Mix]^return epsilon;^196^^^^^184^197^return ret;^[CLASS] Beta 1  [METHOD] logBeta [RETURN_TYPE] double   double a double b double epsilon int maxIterations [VARIABLES] double  DEFAULT_EPSILON  a  b  epsilon  m  ret  x  int  maxIterations  boolean  
[P1_Replace_Type]^int ret;^130^^^^^129^142^double ret;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P11_Insert_Donor_Statement]^double m;double ret;^130^^^^^129^142^double ret;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P1_Replace_Type]^int m;^131^^^^^129^142^double m;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P11_Insert_Donor_Statement]^double ret;double m;^131^^^^^129^142^double m;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^if  ( n % 2 >= 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^if  ( n  >=  2 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^if  ( n % 4 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^if  ( n % 2 == -2 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^if  ( n % -1 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^if  ( n % n == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^if  ( n % -7 == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( n % 2 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( n / 2.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( m *  ( b - m )  )  * x /  (  ( a +  ( 2 * m )  )  - 1 )  *  ( a +  ( 2 * m ) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( m *  ( b - m )  * x )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( m * b - m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( b - m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 * a +  ( 2 * m ) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  - 1 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a + 2 * m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( 2 * m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( n - 1.0 / 2.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( n - 1.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( -(((a + m) * ((a + b) + m)) * x) / (a + (2 * m)) * ((a + (2 * m)) + 1.0) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  (  ( a + m )  *  (  ( a + b )  + m )  * x )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a + m *  ( a + b )  + m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a + m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a + b + m )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a + b )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  *  ( a +  ( 2 * m )  + 1.0 ) )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P6_Replace_Expression]^if  ( a +  ( 2 * m )  + 1.0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^if  ( n % 2L == 0 )  {^132^^^^^129^142^if  ( n % 2 == 0 )  {^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^m =  ( n - 1.0 )  + 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^m =  ( n  <=  1.0 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^m =  ( n - 0.25 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / Infinity;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^m =  ( n - 3.0d )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  - (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret - = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a  ^  m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  ^  b  ^  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  >  b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret / = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  &&  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 / m )  )  *  ( a +  ( 2 / m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  >   ( 2 * m )   >  1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  <  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 + m )  )  *  ( a +  ( 2 + m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( -1 * m )  )  *  ( a +  ( -1 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 11 * m )  )  *  ( a +  ( 11 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 9.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + b + m )  * ret )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( x + m )  *  ( a + b + m )  * a )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( a + x )  *  ( a + b + m )  * m )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( b + m )  *  ( a + a + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 + 2 * m )  )  *  ( a +  ( 2 + 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P11_Insert_Donor_Statement]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^m = n - 2.0;^133^^^^^129^142^m = n / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^m = n / 3.0d;^133^^^^^129^142^m = n / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  + (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m /  ( b - m )  / x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret - =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b  |  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret + =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   &&  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  <  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 / m )  - 1 )  *  ( a +  ( 2 / m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ||  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( -3 * m )  - 1 )  *  ( a +  ( -3 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( n * m )  - 1 )  *  ( a +  ( n * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( m *  ( x - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * ret )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * x )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( b *  ( m - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( m *  ( x - m )  * b )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( a *  ( b - m )  * x )  / (  ( m +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2L * m )  - 1 )  *  ( a +  ( 2L * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P11_Insert_Donor_Statement]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^m = n / 0.0;^133^^^^^129^142^m = n / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^m = n / 2.0D;^133^^^^^129^142^m = n / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  - (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m -  ( b - m )  - x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret / =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b  &  m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )   >=  1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  <=  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret =  >  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - n )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  (  * m )  - 1 )  *  ( a +  (  * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( x *  ( b - m )  * m )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( m *  ( a - m )  * x )  / (  ( b +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret =  ( m *  ( b - m )  * a )  / (  ( x +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 5 * m )  - 1 )  *  ( a +  ( 5 * m )  )  ) ;^134^135^^^^129^142^ret =  ( m *  ( b - m )  * x )  / (  ( a +  ( 2 * m )  - 1 )  *  ( a +  ( 2 * m )  )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^m =  ( n - 1.0 )  * 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^m =  ( n  ==  1.0 )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^m =  ( n - Infinity )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^m =  ( n - 1.0 )  / 0.25;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^m =  ( n - 1.0d )  / 2.0;^137^^^^^129^142^m =  ( n - 1.0 )  / 2.0;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  + (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret + = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a  <=  b  <=  m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a   instanceof   b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  <=  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 - m )  )  *  ( a +  ( 2 - m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a  ==   ( 2 * m )   ==  1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P2_Replace_Operator]^ret = - (  !=  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 1 * m )  )  *  ( a +  ( 1 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P3_Replace_Literal]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 0.14285714285714285 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( a + b )  *  ( a + m + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^ret = - (  ( a + m )  *  ( a + x + m )  * b )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 3 * m )  )  *  ( a +  ( 3 * m )  + 1.0 )  ) ;^138^139^^^^129^142^ret = - (  ( a + m )  *  ( a + b + m )  * x )  / (  ( a +  ( 2 * m )  )  *  ( a +  ( 2 * m )  + 1.0 )  ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P5_Replace_Variable]^return x;^141^^^^^129^142^return ret;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  m  ret  x  int  n  
[P8_Replace_Mix]^return 1.0D;^145^^^^^144^146^return 1.0;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
