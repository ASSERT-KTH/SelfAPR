[P1_Replace_Type]^private static final  short  serialVersionUID = 7101857578996691352L;^42^^^^^37^47^private static final long serialVersionUID = 7101857578996691352L;^[CLASS] Skewness   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 7101857578996691352;^42^^^^^37^47^private static final long serialVersionUID = 7101857578996691352L;^[CLASS] Skewness   [VARIABLES] 
[P8_Replace_Mix]^private ThirdMoment moment = false;^45^^^^^40^50^protected ThirdMoment moment = null;^[CLASS] Skewness   [VARIABLES] 
[P3_Replace_Literal]^incMoment = false;^59^^^^^58^61^incMoment = true;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] Skewness()   [VARIABLES] boolean  incMoment  ThirdMoment  moment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.moment = m3;incMoment = true;^59^^^^^58^61^incMoment = true;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] Skewness()   [VARIABLES] boolean  incMoment  ThirdMoment  moment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^incMoment = false;incMoment = true;^59^^^^^58^61^incMoment = true;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] Skewness()   [VARIABLES] boolean  incMoment  ThirdMoment  moment  long  serialVersionUID  
[P4_Replace_Constructor]^moment = moment =  new Mean (  )  ;^60^^^^^58^61^moment = new ThirdMoment (  ) ;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] Skewness()   [VARIABLES] boolean  incMoment  ThirdMoment  moment  long  serialVersionUID  
[P8_Replace_Mix]^moment =  new Mean (  )  ;^60^^^^^58^61^moment = new ThirdMoment (  ) ;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] Skewness()   [VARIABLES] boolean  incMoment  ThirdMoment  moment  long  serialVersionUID  
[P3_Replace_Literal]^incMoment = true;^68^^^^^67^70^incMoment = false;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] ThirdMoment)   ThirdMoment m3 [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^incMoment = true;incMoment = false;^68^^^^^67^70^incMoment = false;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] ThirdMoment)   ThirdMoment m3 [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P5_Replace_Variable]^this.moment = moment;^69^^^^^67^70^this.moment = m3;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] ThirdMoment)   ThirdMoment m3 [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^incMoment = true;this.moment = m3;^69^^^^^67^70^this.moment = m3;^[CLASS] Skewness  [METHOD] <init> [RETURN_TYPE] ThirdMoment)   ThirdMoment m3 [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P15_Unwrap_Block]^moment.increment(d);^76^77^78^^^75^79^if  ( incMoment )  { moment.increment ( d ) ; }^[CLASS] Skewness  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  d  
[P16_Remove_Block]^^76^77^78^^^75^79^if  ( incMoment )  { moment.increment ( d ) ; }^[CLASS] Skewness  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  d  
[P13_Insert_Block]^if  ( incMoment )  {     moment.clear (  ) ; }^76^^^^^75^79^[Delete]^[CLASS] Skewness  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  d  
[P8_Replace_Mix]^moment .ThirdMoment (  )  ;^77^^^^^75^79^moment.increment ( d ) ;^[CLASS] Skewness  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  d  
[P14_Delete_Statement]^^77^^^^^75^79^moment.increment ( d ) ;^[CLASS] Skewness  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  d  
[P11_Insert_Donor_Statement]^moment.clear (  ) ;moment.increment ( d ) ;^77^^^^^75^79^moment.increment ( d ) ;^[CLASS] Skewness  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  d  
[P2_Replace_Operator]^if  ( moment.n <= 3 )  {^90^^^^^88^101^if  ( moment.n < 3 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^if  ( moment.n < 12 )  {^90^^^^^88^101^if  ( moment.n < 3 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P8_Replace_Mix]^if  ( moment.n < 3L )  {^90^^^^^88^101^if  ( moment.n < 3 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P15_Unwrap_Block]^return java.lang.Double.NaN;^90^91^92^^^88^101^if  ( moment.n < 3 )  { return Double.NaN; }^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P16_Remove_Block]^^90^91^92^^^88^101^if  ( moment.n < 3 )  { return Double.NaN; }^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P1_Replace_Type]^int variance = moment.m2 /  ( int )   ( moment.n - 1 ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^double variance = moment.m2 -  ( double )   ( moment.n - 1 ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^double variance = moment.m2 /  ( double )   ( moment.n  ==  1 ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^double variance = moment.m2 /  ( double )   ( moment.n  ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P11_Insert_Donor_Statement]^double n0 =  ( double )  moment.getN (  ) ;double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^93^^^^^88^101^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^if  ( variance > 10E-20 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^if  ( variance < 10E-19 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^if  ( variance < 80E-20 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^if  ( variance < 10E-30 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  ( n0 * moment.m3 / (((n0 - 1) * (n0 - 2)) * sqrt(variance)) * variance )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  ( n0 * moment.m3 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  (  (  ( n0 - 1 )  *  ( n0 - 2 )  )  *  ( sqrt ( variance )  )  * variance )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  (  ( n0 - 1 )  *  ( n0 - 2 )  * sqrt ( variance ) )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  ( n0 - 1 * n0 - 2 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  ( n0 - 1 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P6_Replace_Expression]^if  ( n0 - 2 )  {^94^^^^^88^101^if  ( variance < 10E-20 )  {^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 * moment.m3 )  * (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 - moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return - ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return / ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  ||  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  !=  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^return   ( n0 * moment.m3 )  / (  ( n0  )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -1 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P8_Replace_Mix]^return   ( n0 * moment.m3 )   ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P1_Replace_Type]^int n0 =  ( int )  moment.getN (  ) ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P5_Replace_Variable]^double n0 =  ( double )  m3.getN (  ) ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P7_Replace_Invocation]^double n0 =  ( double )  moment.clear (  ) ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P7_Replace_Invocation]^double n0 =  ( double )  moment .increment ( variance )  ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P11_Insert_Donor_Statement]^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;double n0 =  ( double )  moment.getN (  ) ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P14_Delete_Statement]^^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P5_Replace_Variable]^(  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( n0 )  * variance ) ;^99^^^^^88^101^(  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P14_Delete_Statement]^^99^^^^^88^101^(  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^return NaNd;^95^^^^^88^101^return 0.0d;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P8_Replace_Mix]^return 0.0f;^95^^^^^88^101^return 0.0d;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P8_Replace_Mix]^return 2.0f;^95^^^^^88^101^return 0.0d;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 * moment.m3 )  - (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 / moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return + ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P2_Replace_Operator]^return   ( n0 * moment.m3 )  / (  ( n0  ==  1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P3_Replace_Literal]^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -11 )  * Math.sqrt ( variance )  * variance ) ;^98^99^^^^88^101^return   ( n0 * moment.m3 )  / (  ( n0 - 1 )  *  ( n0 -2 )  * Math.sqrt ( variance )  * variance ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P8_Replace_Mix]^double n0 =  ( double )  m3.clear (  ) ;^97^^^^^88^101^double n0 =  ( double )  moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  double  n0  variance  
[P5_Replace_Variable]^return m3.getN (  ) ;^107^^^^^106^108^return moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P7_Replace_Invocation]^return moment.clear (  ) ;^107^^^^^106^108^return moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P14_Delete_Statement]^^107^^^^^106^108^return moment.getN (  ) ;^[CLASS] Skewness  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P15_Unwrap_Block]^moment.clear();^114^115^116^^^113^117^if  ( incMoment )  { moment.clear (  ) ; }^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P16_Remove_Block]^^114^115^116^^^113^117^if  ( incMoment )  { moment.clear (  ) ; }^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P13_Insert_Block]^if  ( incMoment )  {     moment.increment ( d ) ; }^114^^^^^113^117^[Delete]^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P7_Replace_Invocation]^moment.getN (  ) ;^115^^^^^113^117^moment.clear (  ) ;^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P14_Delete_Statement]^^115^^^^^113^117^moment.clear (  ) ;^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^moment.increment ( d ) ;moment.clear (  ) ;^115^^^^^113^117^moment.clear (  ) ;^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return moment.getN (  ) ;moment.clear (  ) ;^115^^^^^113^117^moment.clear (  ) ;^[CLASS] Skewness  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  incMoment  ThirdMoment  m3  moment  long  serialVersionUID  
[P1_Replace_Type]^int skew = Double.NaN;^139^^^^^124^154^double skew = Double.NaN;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double n0 = length;double skew = Double.NaN;^139^^^^^124^154^double skew = Double.NaN;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^if  ( test ( values, begin, length )  || length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^if  ( test ( values, begin, length )  && length == 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^if  ( test ( values, begin, length )  && length > begin  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^if  ( test ( values, begin, length )  && length > i  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^if  ( test ( values, begin, length )  && length > 3  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P4_Replace_Constructor]^if  ( test (  begin, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P4_Replace_Constructor]^if  ( test ( values,  length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P4_Replace_Constructor]^if  ( test ( values, begin )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, length, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, begin, i )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( test ( values, begin, length )  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  (  length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( i < begin + length ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( begin + length ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( values[i] - m ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( accum -  (  ( pow ( accum2, 2 )  )  /  (  ( double )   ( length )  )  )  /  ( double )   ( length - 1 ) ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( accum -  ( pow ( accum2, 2 )  )  /  (  ( double )   ( length )  ) ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( pow ( accum2, 2 )  /  ( double )   ( length ) ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  (  ( double )   ( length - 1 ) ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( n0 / ((n0 - 1) * (n0 - 2)) * accum3 ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( n0 /  ( n0 - 1 )  *  ( n0 - 2 ) ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( n0 - 1 * n0 - 2 ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( n0 - 1 ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P6_Replace_Expression]^if  ( n0 - 2 ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^for  (  long  i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  <<  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ^  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  <=  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = length; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = begin; i < begin + begin; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( beginnt i = i; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum += Math.pow (  ( values[i]  |  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum += Math.pow (  ( values[i] - stdDev ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum += Math.pow (  ( m[i] - values ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum += Math.pow (  ( values[i] - m ) , 2.0D ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum2 +=  ( values[i] - m ) ;accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum3 /= Math.pow ( stdDev, 3.0d ) ;accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum3 += Math.pow ( values[i] - m, 3.0d ) ;accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum2 +=  ( values[i]  |  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum2 +=  ( values[i] - stdDev ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum2 +=   ( null[i] - m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;accum2 +=  ( values[i] - m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum3 += Math.pow ( values[i] - m, 3.0d ) ;accum2 +=  ( values[i] - m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum += Math.pow (  ( values[i]  !=  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum += Math.pow (  ( values[i] - m ) , 14.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum += Math.pow (  ( values[i] - n0 ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum += Math.pow (  ( values[i] - skew ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P14_Delete_Statement]^^152^153^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ; accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^for  (  short  i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  >=  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  >  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = length; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = begin; i < begin + begin; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = length; i < begin + begin; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( beginnt i = i; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum3 += Math.pow ( values[i]  >  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, Infinityd ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 += Math.pow ( values[i] -  3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 += Math.pow ( m[i] - values, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum3 += Math.pow ( values[i] - m, 3.0f ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum2 +=  ( values[i] - m ) ;accum3 += Math.pow ( values[i] - m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum3 /= Math.pow ( stdDev, 3.0d ) ;accum3 += Math.pow ( values[i] - m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;accum3 += Math.pow ( values[i] - m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, 18.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 += Math.pow ( values[i] - stdDev, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P14_Delete_Statement]^^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum += Math.pow (  ( values[i]  >=  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum += Math.pow (  ( values[i] - m ) , 10.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum2 +=  ( values[i]  ^  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum2 +=  ( m[i] - values ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum3 += Math.pow ( values[i]  <=  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, 0.6d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, 6.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 /= Math.pow ( skew, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum3 /= Math.pow ( stfev, 4.0f ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;accum3 /= Math.pow ( stdDev, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^accum3 += Math.pow ( values[i] - m, 3.0d ) ;accum3 /= Math.pow ( stdDev, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew - =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew =  ( n0 +  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew + =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew =  ( n0 /  (  ( n0  |  1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0  <=  2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^skew =  ( n0 /  (  ( n0 - begin )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0  )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^skew =  ( stdDev /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * stdDev;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^skew =  ( accum3 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * n0;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^skew =  ( n0 /  (  ( n0 - 2 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P4_Replace_Constructor]^Mean mean = new ThirdMoment (  )  ;^142^^^^^127^157^Mean mean = new Mean (  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^int m = mean.evaluate ( values, begin, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( values, length, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( values, begin, i ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate (  begin, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( values,  length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( values, begin ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = begin.evaluate ( values, mean, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( length, begin, values ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( values, length, begin ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = length.evaluate ( values, begin, mean ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^int accum = 0.0;^149^^^^^134^164^double accum = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double accum3 = 0.0;double accum = 0.0;^149^^^^^134^164^double accum = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double accum2 = 0.0;double accum = 0.0;^149^^^^^134^164^double accum = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^int accum2 = 0.0;^150^^^^^135^165^double accum2 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double accum3 = 0.0;double accum2 = 0.0;^150^^^^^135^165^double accum2 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double accum = 0.0;double accum2 = 0.0;^150^^^^^135^165^double accum2 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^for  (  short  i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^int stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( int )  length )  )  )  / ( int )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  +  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum  <   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  *  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  ^  1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( skew -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( n0, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow (  2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( accum2 -  ( Math.pow ( accum, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( skew, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^float accum3 = 0.0;^158^^^^^143^173^double accum3 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double accum = 0.0;double accum3 = 0.0;^158^^^^^143^173^double accum3 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double accum2 = 0.0;double accum3 = 0.0;^158^^^^^143^173^double accum3 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^int n0 = length;^165^^^^^150^180^double n0 = length;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double n0 = i;^165^^^^^150^180^double n0 = length;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P11_Insert_Donor_Statement]^double skew = Double.NaN;double n0 = length;^165^^^^^150^180^double n0 = length;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( values, i, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double m = mean.evaluate ( begin, values, length ) ;^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P14_Delete_Statement]^^144^^^^^129^159^double m = mean.evaluate ( values, begin, length ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum += Math.pow (  ( values[i]  &  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum += Math.pow (  ( values[i] - m ) , 18.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P14_Delete_Statement]^^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum  >   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  -  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accumbegin, begin )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( stdDev, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  i )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P14_Delete_Statement]^^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accumlength, length )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum3 += Math.pow ( values[i]  |  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, 0.3333333333333333d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 += Math.pow ( values[i] - skew, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum3 += Math.pow ( values[i] - n0, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, 0.375d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 /= Math.pow ( m, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P14_Delete_Statement]^^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ( int i = begin; i == begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ||  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  <  ( int i = begin; i < begin + length; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^for  ( int i = length; i < begin + begin; i++ )  {^151^^^^^136^166^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum += Math.pow (  ( values[i] - m ) , 4.0d ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum2 +=  ( values[i]  ==  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum += Math.pow (  ( values[i]  &&  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum += Math.pow (  ( values[i] - m ) , 0.2857142857142857 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ==  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^for  ^  ( int i = begin; i < begin + length; i++ )  {^159^^^^^144^174^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum3 += Math.pow ( values[i]  &&  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum3 += Math.pow ( values[i]  ^  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, 0.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum += Math.pow (  ( values[i]  ||  m ) , 2.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum += Math.pow (  ( values[i] - m ) , 1.0 ) ;^152^^^^^137^167^accum += Math.pow (  ( values[i] - m ) , 2.0 ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum2 +=  ( values[i]  >=  m ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum2 +=  ( values[i] - n0 ) ;^153^^^^^138^168^accum2 +=  ( values[i] - m ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^accum3 += Math.pow ( values[i]  >=  m, 3.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, 6.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum3 += Math.pow ( values[i] - m, 0.0f ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, Infinityd ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^accum3 /= Math.pow ( n0, 3.0d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^accum3 /= Math.pow ( stfev, 3.0f ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew =  ( n0 -  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew =  ( n0 /  (  ( n0  >  1 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0  ==  2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^skew =  ( n0 /  (  ( n0 - 1 >> 4 )  *  ( n0 - 2 )  )  )  * accum3;^168^^^^^153^183^skew =  ( n0 /  (  ( n0 - 1 )  *  ( n0 - 2 )  )  )  * accum3;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P1_Replace_Type]^float accum2 = 0.0;^150^^^^^135^165^double accum2 = 0.0;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum  |   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  <<  1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum-1, -1 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - length )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( begin, values, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( values, length, begin )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^if  ( test ( length, begin, values )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P8_Replace_Mix]^if  ( test ( values, i, length )  && length > 2  ) {^141^^^^^126^156^if  ( test ( values, begin, length )  && length > 2  ) {^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum  >=   ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P2_Replace_Operator]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length  >>  1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum-3, -3 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^double stdDev = Math.sqrt (  ( stdDev -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum11, 11 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^155^156^^^^140^170^double stdDev = Math.sqrt (  ( accum -  ( Math.pow ( accum2, 2 )  /  (  ( double )  length )  )  )  / ( double )   ( length - 1 )  ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 += Math.pow ( values[i] - m, 24.0d ) ;^160^^^^^145^175^accum3 += Math.pow ( values[i] - m, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, 1.5d ) ;^162^^^^^147^177^accum3 /= Math.pow ( stdDev, 3.0d ) ;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
[P5_Replace_Variable]^return stdDev;^170^^^^^155^185^return skew;^[CLASS] Skewness  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] Mean  mean  boolean  incMoment  double[]  values  double  accum  accum2  accum3  m  n0  skew  stdDev  ThirdMoment  m3  moment  long  serialVersionUID  int  begin  i  length  
