[P1_Replace_Type]^private static final  short  serialVersionUID = -8091216485095130416L;^68^^^^^63^73^private static final long serialVersionUID = -8091216485095130416L;^[CLASS] Percentile   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID ;^68^^^^^63^73^private static final long serialVersionUID = -8091216485095130416L;^[CLASS] Percentile   [VARIABLES] 
[P1_Replace_Type]^private int quantile = 0.0;^72^^^^^67^77^private double quantile = 0.0;^[CLASS] Percentile   [VARIABLES] 
[P8_Replace_Mix]^private float quantile = 0.0D;^72^^^^^67^77^private double quantile = 0.0;^[CLASS] Percentile   [VARIABLES] 
[P3_Replace_Literal]^this ( 100.0 ) ;^79^^^^^78^80^this ( 50.0 ) ;^[CLASS] Percentile  [METHOD] <init> [RETURN_TYPE] Percentile()   [VARIABLES] double  quantile  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^79^^^^^78^80^this ( 50.0 ) ;^[CLASS] Percentile  [METHOD] <init> [RETURN_TYPE] Percentile()   [VARIABLES] double  quantile  long  serialVersionUID  boolean  
[P5_Replace_Variable]^setQuantile ( quantile ) ;^89^^^^^88^90^setQuantile ( p ) ;^[CLASS] Percentile  [METHOD] <init> [RETURN_TYPE] Percentile(double)   final double p [VARIABLES] double  p  quantile  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^Percentile ( p ) ;^89^^^^^88^90^setQuantile ( p ) ;^[CLASS] Percentile  [METHOD] <init> [RETURN_TYPE] Percentile(double)   final double p [VARIABLES] double  p  quantile  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^89^^^^^88^90^setQuantile ( p ) ;^[CLASS] Percentile  [METHOD] <init> [RETURN_TYPE] Percentile(double)   final double p [VARIABLES] double  p  quantile  long  serialVersionUID  boolean  
[P3_Replace_Literal]^test ( values, -3, -3 ) ;^119^^^^^118^121^test ( values, 0, 0 ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P14_Delete_Statement]^^119^120^^^^118^121^test ( values, 0, 0 ) ; return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P11_Insert_Donor_Statement]^test ( values, begin, length ) ;test ( values, 0, 0 ) ;^119^^^^^118^121^test ( values, 0, 0 ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P3_Replace_Literal]^return evaluate ( values, 2, values.length, p ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate ( values, 0, values.length, quantile ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate (  0, values.length, p ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate ( values, 0, values.length ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate ( values, 0,  p ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate ( p, 0, values.length, values ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate ( values.length, 0, values, p ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P8_Replace_Mix]^return evaluate ( values, 0 , values.length, p ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P3_Replace_Literal]^return evaluate ( values, , values.length, p ) ;^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P14_Delete_Statement]^^120^^^^^118^121^return evaluate ( values, 0, values.length, p ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double p [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  
[P5_Replace_Variable]^return evaluate ( values, start, start, quantile ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( values, start, length, p ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate (  start, length, quantile ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( values,  length, quantile ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( values, start,  quantile ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( values, start, length ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( start, values, length, quantile ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( values, quantile, length, start ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( values, length, start, quantile ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^return evaluate ( quantile, start, length, values ) ;^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P14_Delete_Statement]^^148^^^^^147^149^return evaluate ( values, start, length, quantile ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int start final int length [VARIABLES] boolean  double[]  values  double  p  quantile  long  serialVersionUID  int  length  start  
[P5_Replace_Variable]^test ( sorted, begin, length ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test ( values, intPos, length ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test ( values, begin, intPos ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test (  begin, length ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test ( values,  length ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test ( values, begin ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test ( length, begin, values ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^test ( values, length, begin ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P14_Delete_Statement]^^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^System.arraycopy ( values, begin, sorted, 0, length ) ;test ( values, begin, length ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^test ( values, 0, 0 ) ;test ( values, begin, length ) ;^184^^^^^169^199^test ( values, begin, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  (  ( p > 100 )  &&  ( p <= 0 )  )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  (  ( p >= 100 )  ||  ( p <= 0 )  )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  (  ( p > 100 )  ||  ( p == 0 )  )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^if  (  ( p > begin )  ||  ( p <= 0 )  )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^if  (  ( p > 1lengthlength )  ||  ( p <= length )  )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P6_Replace_Expression]^if  (  ( p > 100 )  ) {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P6_Replace_Expression]^if  (   ( p <= 0 )  )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P6_Replace_Expression]^if  ( p > 100 )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P6_Replace_Expression]^if  ( p <= 0 )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P6_Replace_Expression]^if  ( "invalid quantile value: " + p )  {^186^^^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("invalid quantile value: " + p));^186^187^188^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P16_Remove_Block]^^186^187^188^^^171^201^if  (  ( p > 100 )  ||  ( p <= 0 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  (  ( p <= 0 )  ||  ( p > 100 )  )  {     throw new IllegalArgumentException (  ( "Illegal quantile value: " + p )  ) ; }^186^^^^^171^201^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "Illegal quantile value: " + p )  )   ;^187^^^^^172^202^throw new IllegalArgumentException  (" ")  ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {     throw new IllegalArgumentException (  ( "invalid quantile value: " + p )  ) ; }^187^^^^^172^202^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  (  ( p <= 0 )  ||  ( p > 100 )  )  {     throw new IllegalArgumentException (  ( "Illegal quantile value: " + p )  ) ; }^187^^^^^172^202^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  ( length <= 0 )  {^189^^^^^174^204^if  ( length == 0 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^if  ( length == begin )  {^189^^^^^174^204^if  ( length == 0 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^if  ( intPos == 0 )  {^189^^^^^174^204^if  ( length == 0 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^if  ( length == 0  )  {^189^^^^^174^204^if  ( length == 0 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P9_Replace_Statement]^if  ( length == 1 )  {^189^^^^^174^204^if  ( length == 0 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P15_Unwrap_Block]^return java.lang.Double.NaN;^189^190^191^^^174^204^if  ( length == 0 )  { return Double.NaN; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P16_Remove_Block]^^189^190^191^^^174^204^if  ( length == 0 )  { return Double.NaN; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( length == 1 )  {     return values[begin]; }^189^^^^^174^204^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( length == 0 )  {     return NaN; }^190^^^^^175^205^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  ( length != 1 )  {^192^^^^^177^207^if  ( length == 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^if  ( length == begin )  {^192^^^^^177^207^if  ( length == 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^if  ( intPos == 1 )  {^192^^^^^177^207^if  ( length == 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^if  ( length == 0  )  {^192^^^^^177^207^if  ( length == 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P15_Unwrap_Block]^return values[begin];^192^193^194^^^177^207^if  ( length == 1 )  { return values[begin]; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P16_Remove_Block]^^192^193^194^^^177^207^if  ( length == 1 )  { return values[begin]; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( length == 0 )  {     return NaN; }^192^^^^^177^207^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( pos < 1 )  {     return sorted[0]; }^192^^^^^177^207^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( pos >= n )  {     return sorted[ ( length - 1 ) ]; }^192^^^^^177^207^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return sorted[begin];^193^^^^^178^208^return values[begin];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^int n =  ( int )  length;^195^^^^^180^210^double n =  ( double )  length;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^double[] sorted = new double[length];double n =  ( double )  length;^195^^^^^180^210^double n =  ( double )  length;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^int pos = p *  ( n + 1 )  / 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^double pos = p *  ( n + 1 )  - 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^double - pos = p *  ( n + 1 )  / 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^double pos = p *  ( n  &&  1 )  / 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^double pos = p *  ( n + length )  / length00;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^double pos = p *  ( n + 1 )  / begin;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double upperos = p *  ( n + 1 )  / 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double pos = p *  ( upper + 1 )  / 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double nos = p *  ( p + 1 )  / 100;^196^^^^^181^211^double pos = p *  ( n + 1 )  / 100;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^float fpos = Math.floor ( pos ) ;^197^^^^^182^212^double fpos = Math.floor ( pos ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double fpos = Math.floor ( quantile ) ;^197^^^^^182^212^double fpos = Math.floor ( pos ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^double fpos = Math.floor ( upper ) ;^197^^^^^182^212^double fpos = Math.floor ( pos ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double fpos = Math.floor ( p ) ;^197^^^^^182^212^double fpos = Math.floor ( pos ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P14_Delete_Statement]^^197^198^^^^182^212^double fpos = Math.floor ( pos ) ; int intPos =  ( int )  fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^long  intPos =  (  long  )  fpos;^198^^^^^183^213^int intPos =  ( int )  fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^int dif = pos - fpos;^199^^^^^184^214^double dif = pos - fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^double dif = pos  <=  fpos;^199^^^^^184^214^double dif = pos - fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double dif = pos - quantile;^199^^^^^184^214^double dif = pos - fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double dif = fpos - pos;^199^^^^^184^214^double dif = pos - fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^double dif = upper - fpos;^199^^^^^184^214^double dif = pos - fpos;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^double n =  ( double )  length;double[] sorted = new double[length];^200^^^^^185^215^double[] sorted = new double[length];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^System.arraycopy ( values, begin, sorted, length, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values, length, sorted, 0, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values, begin, sorted, 0, intPos ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy (  begin, sorted, 0, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values,  sorted, 0, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values, begin,  0, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values, begin, sorted, 0 ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( sorted, begin, values, 0, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values, length, sorted, 0, begin ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^System.arraycopy ( values, begin, length, 0, sorted ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P14_Delete_Statement]^^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^test ( values, begin, length ) ;System.arraycopy ( values, begin, sorted, 0, length ) ;^201^^^^^186^216^System.arraycopy ( values, begin, sorted, 0, length ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^Arrays.sort ( values ) ;^202^^^^^187^217^Arrays.sort ( sorted ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  ( pos == 1 )  {^204^^^^^189^219^if  ( pos < 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^if  ( pos < length )  {^204^^^^^189^219^if  ( pos < 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^if  ( upper < 1 )  {^204^^^^^189^219^if  ( pos < 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^if  ( pos < 0 )  {^204^^^^^189^219^if  ( pos < 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P9_Replace_Statement]^if  ( pos >= n )  {^204^^^^^189^219^if  ( pos < 1 )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P15_Unwrap_Block]^return sorted[0];^204^205^206^^^189^219^if  ( pos < 1 )  { return sorted[0]; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P16_Remove_Block]^^204^205^206^^^189^219^if  ( pos < 1 )  { return sorted[0]; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( pos >= n )  {     return sorted[ ( length - 1 ) ]; }^204^^^^^189^219^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( length == 1 )  {     return values[begin]; }^204^^^^^189^219^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^return sorted[begin];^205^^^^^190^220^return sorted[0];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return values[0];^205^^^^^190^220^return sorted[0];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^return sorted[3];^205^^^^^190^220^return sorted[0];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^return sorted[2];^205^^^^^190^220^return sorted[0];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^return sorted[1];^205^^^^^190^220^return sorted[0];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^if  ( pos == n )  {^207^^^^^192^222^if  ( pos >= n )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^if  ( upper >= n )  {^207^^^^^192^222^if  ( pos >= n )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^if  ( pos >= upper )  {^207^^^^^192^222^if  ( pos >= n )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^if  ( n >= pos )  {^207^^^^^192^222^if  ( pos >= n )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P6_Replace_Expression]^if  ( length - 1 )  {^207^^^^^192^222^if  ( pos >= n )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P9_Replace_Statement]^if  ( pos < 1 )  {^207^^^^^192^222^if  ( pos >= n )  {^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P15_Unwrap_Block]^return sorted[(length - 1)];^207^208^209^^^192^222^if  ( pos >= n )  { return sorted[length - 1]; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P16_Remove_Block]^^207^208^209^^^192^222^if  ( pos >= n )  { return sorted[length - 1]; }^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( pos < 1 )  {     return sorted[0]; }^207^^^^^192^222^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( length == 1 )  {     return values[begin]; }^207^^^^^192^222^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^return sorted[length  >  1];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^return sorted[length ];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return values[length - 1];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return sorted[intPos - 1];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^return sorted[intPos - 1 - 1];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P13_Insert_Block]^if  ( pos >= n )  {     return sorted[ ( length - 1 ) ]; }^208^^^^^193^223^[Delete]^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^return sorted[length  <  1];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^return sorted[length - 3 - 1];^208^^^^^193^223^return sorted[length - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^int lower = sorted[intPos - 1];^210^^^^^195^225^double lower = sorted[intPos - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^double lower = sorted[intPos  ==  1];^210^^^^^195^225^double lower = sorted[intPos - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P3_Replace_Literal]^double lower = sorted[intPos - begin];^210^^^^^195^225^double lower = sorted[intPos - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double lower = values[intPos - 1];^210^^^^^195^225^double lower = sorted[intPos - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^double lower = sorted[length - 1];^210^^^^^195^225^double lower = sorted[intPos - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^double upper = sorted[intPos];double lower = sorted[intPos - 1];^210^^^^^195^225^double lower = sorted[intPos - 1];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P1_Replace_Type]^int upper = sorted[intPos];^211^^^^^196^226^double upper = sorted[intPos];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P11_Insert_Donor_Statement]^double lower = sorted[intPos - 1];double upper = sorted[intPos];^211^^^^^196^226^double upper = sorted[intPos];^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^return lower + dif *  >>  ( upper - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^return + lower + dif *  ( upper - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P2_Replace_Operator]^return lower + dif *  ( upper  <<  lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return lower + pos *  ( upper - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return lower + dif *  ( quantile - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return upper + dif *  ( lower - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return dif + lower *  ( upper - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P5_Replace_Variable]^return lower + upper *  ( dif - lower ) ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^return lower  ;^212^^^^^197^227^return lower + dif *  ( upper - lower ) ;^[CLASS] Percentile  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length final double p [VARIABLES] boolean  double[]  sorted  values  double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  int  begin  intPos  length  
[P8_Replace_Mix]^return upper;^222^^^^^221^223^return quantile;^[CLASS] Percentile  [METHOD] getQuantile [RETURN_TYPE] double   [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= 0 && p > 100 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p < 0 || p > 100 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= 0 || p >= 100 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P3_Replace_Literal]^if  ( p <= -5 || p > 1-5-5 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P3_Replace_Literal]^if  ( p <= 0 || p > 101 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( quantile <= 0 || p > 100 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( p <= 0 ) {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  (  p > 100 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( "Illegal quantile value: " + p )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  (  p > 122 )  {^234^^^^^233^238^if  ( p <= 0 || p > 100 )  {^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Illegal quantile value: " + p));^234^235^236^^^233^238^if  ( p <= 0 || p > 100 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P16_Remove_Block]^^234^235^236^^^233^238^if  ( p <= 0 || p > 100 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {     throw new IllegalArgumentException (  ( "invalid quantile value: " + p )  ) ; }^234^^^^^233^238^[Delete]^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "invalid quantile value: " + p )  )   ;^235^^^^^233^238^throw new IllegalArgumentException  (" ")  ;^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( p > 100 )  ||  ( p <= 0 )  )  {     throw new IllegalArgumentException (  ( "invalid quantile value: " + p )  ) ; }^235^^^^^233^238^[Delete]^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( p <= 0 )  ||  ( p > 100 )  )  {     throw new IllegalArgumentException (  ( "Illegal quantile value: " + p )  ) ; }^235^^^^^233^238^[Delete]^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return ;^235^^^^^233^238^throw new IllegalArgumentException  (" ")  ;^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
[P5_Replace_Variable]^quantile = upper;^237^^^^^233^238^quantile = p;^[CLASS] Percentile  [METHOD] setQuantile [RETURN_TYPE] void   final double p [VARIABLES] double  dif  fpos  lower  n  p  pos  quantile  upper  long  serialVersionUID  boolean  
