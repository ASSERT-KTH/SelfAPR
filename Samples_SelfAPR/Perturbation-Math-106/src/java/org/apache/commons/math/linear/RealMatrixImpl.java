[P1_Replace_Type]^private static final  int  serialVersionUID = 4237564493130426188L;^53^^^^^48^58^private static final long serialVersionUID = 4237564493130426188L;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 4237564493130426188;^53^^^^^48^58^private static final long serialVersionUID = 4237564493130426188L;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P8_Replace_Mix]^private double data[][] = this;^56^^^^^51^61^private double data[][] = null;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P8_Replace_Mix]^private double lu[][] ;^61^^^^^56^66^private double lu[][] = null;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P8_Replace_Mix]^private int[] permutation  = null ;^64^^^^^59^69^private int[] permutation = null;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P1_Replace_Type]^private  long  parity = 1;^67^^^^^62^72^private int parity = 1;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P3_Replace_Literal]^private int parity = 7;^67^^^^^62^72^private int parity = 1;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P8_Replace_Mix]^private int parity = 1L;^67^^^^^62^72^private int parity = 1;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P1_Replace_Type]^protected static int TOO_SMALL = 10E-12;^70^^^^^65^75^protected static double TOO_SMALL = 10E-12;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P3_Replace_Literal]^protected static double TOO_SMALL = 10E-5;^70^^^^^65^75^protected static double TOO_SMALL = 10E-12;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P8_Replace_Mix]^protected static double TOO_SMALL  = null ;^70^^^^^65^75^protected static double TOO_SMALL = 10E-12;^[CLASS] RealMatrixImpl   [VARIABLES] 
[P2_Replace_Operator]^if  ( rowDimension <= 0 && columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P2_Replace_Operator]^if  ( rowDimension < 0 || columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P2_Replace_Operator]^if  ( rowDimension <= 0 || columnDimension < 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P3_Replace_Literal]^if  ( rowDimension <= columnDimension || columnDimension <= columnDimension )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P3_Replace_Literal]^if  ( rowDimension <= rowDimension || columnDimension <= rowDimension )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P5_Replace_Variable]^if  ( parity <= 0 || columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P5_Replace_Variable]^if  ( rowDimension <= 0 || parity <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P5_Replace_Variable]^if  ( columnDimension <= 0 || rowDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P6_Replace_Expression]^if  ( rowDimension <= 0 ) {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P6_Replace_Expression]^if  (  columnDimension <= 0 )  {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P8_Replace_Mix]^if  ( rowDimension <= 0 << 2 ) {^87^^^^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("row and column dimensions must be postive");^87^88^89^90^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  { throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P16_Remove_Block]^^87^88^89^90^^86^93^if  ( rowDimension <= 0 || columnDimension <= 0 )  { throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^87^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "mn dimensions must be post" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^88^^^^^86^93^[Delete]^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ow an" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " and colow and column dimensions must be postive" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "row and column dimensions must be postives" ) ;^88^89^^^^86^93^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P8_Replace_Mix]^data =  new double[parity][columnDimension];^91^^^^^86^93^data = new double[rowDimension][columnDimension];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^data = new double[nRows][1];data = new double[rowDimension][columnDimension];^91^^^^^86^93^data = new double[rowDimension][columnDimension];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^data = new double[nRows][nCols];data = new double[rowDimension][columnDimension];^91^^^^^86^93^data = new double[rowDimension][columnDimension];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P8_Replace_Mix]^lu = false;^92^^^^^86^93^lu = null;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] double[][]  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P5_Replace_Variable]^this.copyIn ( lu ) ;^107^^^^^106^109^this.copyIn ( d ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P7_Replace_Invocation]^this.solve ( d ) ;^107^^^^^106^109^this.copyIn ( d ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P7_Replace_Invocation]^this .copyOut (  )  ;^107^^^^^106^109^this.copyIn ( d ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P14_Delete_Statement]^^107^^^^^106^109^this.copyIn ( d ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P11_Insert_Donor_Statement]^return copyOut (  ) ;this.copyIn ( d ) ;^107^^^^^106^109^this.copyIn ( d ) ;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P8_Replace_Mix]^lu = this;^108^^^^^106^109^lu = null;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[][])   double[][] d [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  parity  rowDimension  
[P1_Replace_Type]^short  nRows = v.length;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P5_Replace_Variable]^int nRows = row;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P5_Replace_Variable]^int nRows = v.length.length;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P5_Replace_Variable]^int nRows = v;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = subMatrix.length;int nRows = v.length;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = subMatrix[0].length;int nRows = v.length;^121^^^^^120^126^int nRows = v.length;^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P3_Replace_Literal]^data = new double[nRows][columnDimension];^122^^^^^120^126^data = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P8_Replace_Mix]^data = new double[nRows][0];^122^^^^^120^126^data = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^data = new double[nRows][nCols];data = new double[nRows][1];^122^^^^^120^126^data = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^data = new double[rowDimension][columnDimension];data = new double[nRows][1];^122^^^^^120^126^data = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P3_Replace_Literal]^for  ( int row = -3; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P3_Replace_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P5_Replace_Variable]^for  ( int row = 0; row < rowDimension; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P8_Replace_Mix]^for  ( int parity = 0; row < nRows; row++ )  {^123^^^^^120^126^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P3_Replace_Literal]^data[row][-7] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P8_Replace_Mix]^data[row][0 >> 0] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];data[row][0] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;data[row][0] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^out[row][0] = data[row][column];data[row][0] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];data[row][0] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;data[row][0] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P3_Replace_Literal]^data[row][7] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P8_Replace_Mix]^data[row][0 << 2] = v[row];^124^^^^^120^126^data[row][0] = v[row];^[CLASS] RealMatrixImpl  [METHOD] <init> [RETURN_TYPE] RealMatrixImpl(double[])   double[] v [VARIABLES] boolean  double[]  v  double  TOO_SMALL  double[][]  d  data  lu  int[]  permutation  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( outData )   ) ;^134^^^^^133^135^return new RealMatrixImpl ( this.copyOut (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] copy [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P7_Replace_Invocation]^return new RealMatrixImpl ( this.getData (  )  ) ;^134^^^^^133^135^return new RealMatrixImpl ( this.copyOut (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] copy [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P14_Delete_Statement]^^134^^^^^133^135^return new RealMatrixImpl ( this.copyOut (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] copy [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  int[]  permutation  boolean  double  TOO_SMALL  long  serialVersionUID  int  columnDimension  nRows  parity  row  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  > m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  == m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P6_Replace_Expression]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  ) {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P6_Replace_Expression]^if  (  this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getRowDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this .getRowDimension (  )   != m^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.multiply (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.multiply (  )  != m.getRowDimension (  )  )  {^145^146^^^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("matrix dimension mismatch");^145^146^147^148^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P16_Remove_Block]^^145^146^147^148^^144^158^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^145^^^^^144^158^[Delete]^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^145^^^^^144^158^[Delete]^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^145^^^^^144^158^[Delete]^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Incorrect row dimension" )   ;^147^^^^^144^158^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^147^^^^^144^158^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^147^^^^^144^158^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^147^^^^^144^158^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^146^^^^^144^158^this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^146^147^^^^144^158^this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^this.multiply (  )  != m.getRowDimension (  )  )  {^146^^^^^144^158^this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^this .getColumnDimension (  )   != m^146^^^^^144^158^this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int rowCount = this.getColumnDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int rowCount = this.getRowDimension (  ) ;^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int rowCount = this.getRowDimension (  ) ; }^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int rowCount = this.getRowDimension (  ) ; }^149^^^^^144^158^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int columnCount = this.getRowDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int columnCount = this.getColumnDimension (  ) ; }^150^^^^^144^158^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^150^151^^^^144^158^int columnCount = this.getColumnDimension (  ) ; double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] outData = new double[rowCount][columnCount];^151^^^^^144^158^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  long  row = 0; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  <  ( int row = 0; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = -5; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = rowCount; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int parity = 0; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int row = 0; row < rowDimension; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowCount = 0; row < row; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int row = 0; row < parity; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  col = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  !=  ( int col = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = rowDimension; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowCount = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < rowDimension; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int columnCount = 0; col < col; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry ( rowDimension, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry ( row, rowDimension ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = outData[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry (  col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry ( row ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry ( col, row ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = m[row][col] + data.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^outData[row][col] = data[row][col] + m .getRowDimension (  )  ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col] ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^sum += data[row][i] * m.getEntry ( i, col ) ;outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry ( rowCount, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + row.getEntry ( m, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + col.getEntry ( row, m ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = lu[row][col] + m.getEntry ( row, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = -7; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] + m.getEntry ( row, rowCount ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  long  col = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ^  ( int col = 0; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 9; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < rowCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  =  outData[row][col] ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col] = data[row][col] + m.getEntry ( parity, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = row[row][col] + m.getEntry ( data, col ) ;^154^^^^^144^158^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = columnCount; row < rowCount; row++ )  {^152^^^^^144^158^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = rowCount; col < columnCount; col++ )  {^153^^^^^144^158^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( out )  ;^157^^^^^144^158^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return new RealMatrixImpl ( lu ) ;^157^^^^^144^158^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^return  new RealMatrixImpl ( out )  ;^157^^^^^144^158^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] add [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  == m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  >= m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P6_Replace_Expression]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  ) {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P6_Replace_Expression]^if  (  this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getRowDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.multiply (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this .getRowDimension (  )   != m^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this .getColumnDimension (  )   != m^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.multiply (  )  != m.getRowDimension (  )  )  {^168^169^^^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("matrix dimension mismatch");^168^169^170^171^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P16_Remove_Block]^^168^169^170^171^^167^181^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^168^^^^^167^181^[Delete]^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^168^^^^^167^181^[Delete]^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^168^^^^^167^181^[Delete]^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Incorrect row dimension" )   ;^170^^^^^167^181^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^170^^^^^167^181^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^170^^^^^167^181^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^170^^^^^167^181^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^169^^^^^167^181^this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^169^170^^^^167^181^this.getRowDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^this.multiply (  )  != m.getRowDimension (  )  )  {^169^^^^^167^181^this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int rowCount = this.getColumnDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int rowCount = this.getRowDimension (  ) ;^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int rowCount = this.getRowDimension (  ) ; }^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int rowCount = this.getRowDimension (  ) ; }^172^^^^^167^181^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^short  columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int columnCount = this.getRowDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int columnCount = this.getColumnDimension (  ) ; }^173^^^^^167^181^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^173^174^^^^167^181^int columnCount = this.getColumnDimension (  ) ; double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] outData = new double[rowCount][columnCount];^174^^^^^167^181^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = -8; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = row; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowDimension = 0; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int row = 0; row < rowDimension; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  col = 0; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = parity; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < rowDimension; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int columnCount = 0; col < col; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^outData[row][col] = data[row][col]  |  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry ( rowDimension, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry ( row, rowCount ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = lu[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry (  col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry ( row ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - col.getEntry ( row, m ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = m[row][col] - data.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  = null ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^sum += data[row][i] * m.getEntry ( i, col ) ;outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry ( rowCount, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry ( row, rowDimension ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - row.getEntry ( m, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = data[row][col] - m.getEntry ( col, row ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^outData[row][col] = data[row][col]  &  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col] ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 1; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col > columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int col = 0; col < rowCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^outData[row][col] = data[row][col]  ==  m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = outData[row][col] - m.getEntry ( row, col ) ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^outData[row][col] = data[row][col] - m .getRowDimension (  )  ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  =  outData[row][col] ;^177^^^^^167^181^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = rowDimension; row < rowCount; row++ )  {^175^^^^^167^181^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = columnCount; col < columnCount; col++ )  {^176^^^^^167^181^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( out )  ;^180^^^^^167^181^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return new RealMatrixImpl ( lu ) ;^180^^^^^167^181^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^return  new RealMatrixImpl ( out )  ;^180^^^^^167^181^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] subtract [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^short  rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int rowCount = this.getColumnDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int rowCount = this.getRowDimension (  ) ;^190^^^^^189^199^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int columnCount = this.getRowDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int columnCount = this.getColumnDimension (  ) ; }^191^^^^^189^199^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^191^192^^^^189^199^int columnCount = this.getColumnDimension (  ) ; double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] outData = new double[rowCount][columnCount];^192^^^^^189^199^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  <  ( int row = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = -8; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = rowDimension; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int parity = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int row = 0; row < parity; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowCount = 0; row < row; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int rowDimension = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  col = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col == columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ^  ( int col = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 6; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < rowDimension; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = TOO_SMALLata[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = lu[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = dataata[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  =  outData[row][col] ;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^data[row][0] = v[row];outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[row][0] = data[row][column];outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^sum += Math.abs ( data[row][col] ) ;outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = sum;outData[row][col] = data[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = outData[row][col] + d;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  long  col = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = -9; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  <=  ( int col = 0; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = -8; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int columnCount = 0; col < col; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  = null ;^195^^^^^189^199^outData[row][col] = data[row][col] + d;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  long  row = 0; row < rowCount; row++ )  {^193^^^^^189^199^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 9; col < columnCount; col++ )  {^194^^^^^189^199^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( out )  ;^198^^^^^189^199^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return new RealMatrixImpl ( lu ) ;^198^^^^^189^199^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^return  new RealMatrixImpl ( out )  ;^198^^^^^189^199^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int rowCount = this.getColumnDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int rowCount = this.getRowDimension (  ) ; }^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int rowCount = this.getRowDimension (  ) ; }^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int rowCount = this.getRowDimension (  ) ;^207^^^^^206^216^int rowCount = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^short  columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int columnCount = this.getRowDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int columnCount = this.getColumnDimension (  ) ;^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^208^^^^^206^216^int columnCount = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] outData = new double[rowCount][columnCount];^209^^^^^206^216^double[][] outData = new double[rowCount][columnCount];^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row == rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row > rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = 1; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = columnCount; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowDimension = 0; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int row = 0; row < parity; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  col = 0; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col > columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = parity; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < rowDimension; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int columnCount = 0; col < col; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int col = 0; col < rowCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^outData[row][col] + = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = TOO_SMALLata[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = lu[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col] ;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^data[row][0] = v[row];outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[row][0] = data[row][column];outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^sum += Math.abs ( data[row][col] ) ;outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = sum;outData[row][col] = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^outData[row][col] - = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = outData[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = dataata[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = col; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 5; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int row = 0; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  =  outData[row][col] ;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^outData[row][col] / = data[row][col] * d;^212^^^^^206^216^outData[row][col] = data[row][col] * d;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = parity; row < rowCount; row++ )  {^210^^^^^206^216^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  long  col = 0; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 2; col < columnCount; col++ )  {^211^^^^^206^216^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( out )  ;^215^^^^^206^216^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return new RealMatrixImpl ( lu ) ;^215^^^^^206^216^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^return  new RealMatrixImpl ( out )  ;^215^^^^^206^216^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] RealMatrix   double d [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  long  serialVersionUID  int  col  columnCount  columnDimension  nRows  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( this.getColumnDimension (  )  == m.getRowDimension (  )  )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getRowDimension (  )  != m.getRowDimension (  )  )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m.multiply (  )  )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^if  ( this.getColumnDimension (  )  != m .getColumnDimension (  )   )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P9_Replace_Statement]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P9_Replace_Statement]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^226^^^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Matrices are not multiplication compatible.");^226^227^228^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P16_Remove_Block]^^226^227^228^^^225^244^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  (  ( this.getColumnDimension (  )  )  !=  ( m.getColumnDimension (  )  )  )  ||  (  ( this.getRowDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  )  {     throw new IllegalArgumentException ( "matrix dimension mismatch" ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^226^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^227^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^227^^^^^225^244^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^227^^^^^225^244^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^227^^^^^225^244^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^227^^^^^225^244^[Delete]^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^229^230^^^^225^244^int nRows = this.getRowDimension (  ) ; int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^229^^^^^225^244^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int nCols = m.multiply (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = m.getColumnDimension (  ) ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int nCols = m .getRowDimension (  )  ;^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^230^^^^^225^244^int nCols = m.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^long  nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^int nSum = this.getRowDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nSum = this.getColumnDimension (  ) ;^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nSum = this.getColumnDimension (  ) ; }^231^^^^^225^244^int nSum = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] outData = out.getDataRef (  ) ;double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] outData = new double[nRows][nCols];^232^^^^^225^244^double[][] outData = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^int sum = 0;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^double sum = -3;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double det = parity;double sum = 0;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double sum = 0;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double tmp = 0;double sum = 0;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double largest = 0d;double sum = 0;^233^^^^^225^244^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row == nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  &  ( int row = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = rowCount; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = i; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = columnDimension; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = 3; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int row = 0; row < nSum; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( nSumnt row = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( rowDimensionnt row = 0; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col == nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  <<  ( int col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = col; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = row; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int nSum = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < parity; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( rownt col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( colnt i = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( nColsnt col = 0; col < i; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( rowDimensionnt col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int i = 0; i <= nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = row; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( paritynt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int i = 0; i < parity; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( nSumnt i = 0; i < i; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^sum + += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( nSum, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( i, row ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += outData[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry (  col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( i ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += m[row][i] * data.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  data[nSum][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];sum += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + m.getEntry ( row, col ) ;sum += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] - m.getEntry ( row, col ) ;sum += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( row, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( i, parity ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * col.getEntry ( i, m ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( col, i ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^sum = rowDimension;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum = 0 + 4;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^sum - += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( rowDimension, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( i, rowDimension ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += i[row][i] * m.getEntry ( data, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^outData[row][col] = d;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col] ;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;outData[row][col] = sum;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[row] = sum;outData[row][col] = sum;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[col] = sum;outData[row][col] = sum;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;outData[row][col] = sum;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^lu[row][col] = sum;outData[row][col] = sum;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = nCols; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * i.getEntry ( m, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^sum += data[row][i] * m .getRowDimension (  )  ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum += data[row][i] * m.getEntry ( parity, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = -7; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( rownt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( rowCountnt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^sum / += data[row][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += data[row][i] * m.getEntry ( i, rowCount ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += col[row][i] * m.getEntry ( i, data ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  data[null][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^sum = ;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum = 3;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = rowDimension; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = 2; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ^  ( int col = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = nSum; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = 6; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int col = 0; col < rowCount; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int nCols = 0; col < col; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int row = 0; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  long  i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = -1; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int i = 0; i < rowCount; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( nSumnt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  data[nRows][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^sum = nRows;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum = 0 % 2;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^outData[row][col]  =  outData[row][col] ;^240^^^^^225^244^outData[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = 5; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( rowDimensionnt i = 0; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^sum = -1;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum = 2;^236^^^^^225^244^sum = 0;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  data[rowDimension][i] * m.getEntry ( i, col ) ;^238^^^^^225^244^sum += data[row][i] * m.getEntry ( i, col ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = -3; row < nRows; row++ )  {^234^^^^^225^244^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = -8; col < nCols; col++ )  {^235^^^^^225^244^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int i = ; i < nSum; i++ )  {^237^^^^^225^244^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( out )  ;^243^^^^^225^244^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return new RealMatrixImpl ( lu ) ;^243^^^^^225^244^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^return  new RealMatrixImpl ( out )  ;^243^^^^^225^244^return new RealMatrixImpl ( outData ) ;^[CLASS] RealMatrixImpl  [METHOD] multiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^return m.multiply ( null ) ;^254^^^^^253^255^return m.multiply ( this ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^return m .preMultiply ( m )  ;^254^^^^^253^255^return m.multiply ( this ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^254^^^^^253^255^return m.multiply ( this ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] RealMatrix   RealMatrix m [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  sum  double[][]  d  data  lu  outData  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^return getData (  ) ;^265^^^^^264^266^return copyOut (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getData [RETURN_TYPE] double[][]   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^265^^^^^264^266^return copyOut (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getData [RETURN_TYPE] double[][]   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return outData;^276^^^^^275^277^return data;^[CLASS] RealMatrixImpl  [METHOD] getDataRef [RETURN_TYPE] double[][]   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^int maxColSum = 0;^284^^^^^283^293^double maxColSum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^double maxColSum = 7;^284^^^^^283^293^double maxColSum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double tmp = 0;double maxColSum = 0;^284^^^^^283^293^double maxColSum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double sum = 0;double maxColSum = 0;^284^^^^^283^293^double maxColSum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double largest = 0d;double maxColSum = 0;^284^^^^^283^293^double maxColSum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  col = 0; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col <= this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int col = 0; col == this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  <  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = -4; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int col = nSum; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int parity = 0; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^for  ( int col = 0; col < this.getRowDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int rowCount = 0; col < this.getColumnDimension (  ) ; col++ )  {^285^^^^^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^for  (  short  row = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row <= this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ==  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = -1; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int nRows = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^for  ( int row = 0; row < this.getColumnDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^for  ( int nSum = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^sum += Math.abs ( outData[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P7_Replace_Invocation]^sum += Math.max ( data[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  Math.abs ( data[null][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;sum += Math.abs ( data[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];sum += Math.abs ( data[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;sum += Math.abs ( data[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^MathUtils.hash ( data[row][col] ) ;sum += Math.abs ( data[row][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  Math.abs ( data[nSum][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^maxColSum += Math.max ( maxColSum, sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^maxColSum = Math.max ( d, sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^maxColSum = Math.max ( maxColSum, d ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^maxColSum = Math.max (  sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^maxColSum = Math.max ( maxColSum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^maxColSum = Math.max ( sum, maxColSum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^maxColSum =  Math.max ( null, sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^int sum = 0;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^double sum = nRows;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double det = parity;double sum = 0;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double sum = 0;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double tmp = 0;double sum = 0;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P11_Insert_Donor_Statement]^double largest = 0d;double sum = 0;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = 8; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^287^288^289^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  { sum += Math.abs ( data[row][col] ) ; }^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  ( int row = 0; row == this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^for  >=  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^for  ( int row = rowCount; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^for  ( int rowDimension = 0; row < this.getRowDimension (  ) ; row++ )  {^287^^^^^283^293^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  Math.abs ( data[parity][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^sum +=  Math.abs ( data[nRows][col] ) ;^288^^^^^283^293^sum += Math.abs ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^maxColSum =  Math.max ( sum, sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P8_Replace_Mix]^maxColSum +=  Math.max ( maxColSum, sum ) ;^290^^^^^283^293^maxColSum = Math.max ( maxColSum, sum ) ;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P1_Replace_Type]^float sum = 0;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P3_Replace_Literal]^double sum = nCols;^286^^^^^283^293^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P14_Delete_Statement]^^285^286^287^288^289^283^293^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  { double sum = 0; for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  { sum += Math.abs ( data[row][col] ) ; }^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P5_Replace_Variable]^return sum;^292^^^^^283^293^return maxColSum;^[CLASS] RealMatrixImpl  [METHOD] getNorm [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  outData  int[]  permutation  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  row  rowCount  rowDimension  
[P2_Replace_Operator]^if  ( startRow < 0 && startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( startRow <= 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( startRow < 0 || startRow >= endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( startRow < 0 || startRow > endRow || endRow >= data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn == 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn >= endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn >= data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  ( startRow < rowCount || startRow > endRow || endRow > data.length || startColumn < rowCount || startColumn > endColumn || endColumn > data[rowCount].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  ( startRow < columnDimension || startRow > endRow || endRow > data.length || startColumn < columnDimension || startColumn > endColumn || endColumn > data[columnDimension].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  ( startRow < 2 || startRow > endRow || endRow > data.length || startColumn < 2 || startColumn > endColumn || endColumn > data[2].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nSum < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > row || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || nRows < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > parity || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endRow || endRow > startRow || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endRow || endRow > outData.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( endColumn < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > startRow || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endColumn || endRow > data.length || startColumn < 0 || startColumn > endRow || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > startColumn || endRow > data.length || endRow < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endRow || endRow > startColumn || data.length < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow < 0 || startRow > endRow || endRow > endColumn.length || startColumn < 0 || startColumn > data || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( data[0].length < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( startRow < 0 ) {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  (  startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( ((((startRow < 0) || (startRow > endRow)) || (endRow > data.length)) || (startColumn < 0) || startColumn > endColumn) )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( (((startRow < 0) || (startRow > endRow)) || (endRow > data.length) || startColumn < 0) )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( ((startRow < 0) || (startRow > endRow) || endRow > data.length) )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( (startRow < 0 || startRow > endRow) )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( startRow > endRow )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( endRow > data.length )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( startColumn < 0 )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( startColumn > endColumn )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( endColumn > data[0].length )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( startRow < 0  || startRow > endRow || endRow > data.length || startColumn < 0  || startColumn > endColumn || endColumn > data[0 ].length  )  {^309^310^311^^^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");^309^310^311^312^313^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  { throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^309^310^311^312^313^307^324^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  { throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "invalid row or column index selectioninvalid ro" ) ;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "selected row and column index arrays must be non-empty" )  ;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "nvalid" ) ;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;throw new MatrixIndexException ( "invalid row or column index selection" ) ;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "invalid row or column index selectioninvalid row or column i" ) ;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "invalid row or column index selectionow or column index " ) ;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return false;^312^313^^^^307^324^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow  <<  startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow  <  startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+6, endColumn - startColumn+6 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1 - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( rowDimension - startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, nSum - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - rowCount+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endColumn - startRow+1, endRow - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startRow - endRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, startColumn - endColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startColumn+1, endColumn - startRow+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - parity+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow   instanceof   startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+nCols, endColumn - startColumn+nCols ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startColumn - startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, rowDimension - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startRow+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( startColumn - startRow+1, endColumn - endRow+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - endColumn+1, startRow - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - nRows+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^315^316^^^^307^324^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] subMatrixData = subMatrix.getRow (  ) ;^317^^^^^307^324^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] subMatrixData = subMatrix .getData (  )  ;^317^^^^^307^324^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = out.getDataRef (  ) ;double[][] subMatrixData = subMatrix.getDataRef (  ) ;^317^^^^^307^324^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;double[][] subMatrixData = subMatrix.getDataRef (  ) ;^317^^^^^307^324^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^317^^^^^307^324^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = startRow; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = startRow; i < endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( rownt i = startRow; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = startRow; i <= startRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( endRownt i = startRow; i <= i; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = startColumn; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  j = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = startColumn; j < endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = startRow; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int startRow = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = startColumn; j <= row; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( paritynt j = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int endColumn = startColumn; j <= j; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = endColumn; j <= startColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( jnt i = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^subMatrixData[i  ||  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^subMatrixData[i  >  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[nSum - startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - nSum][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][j - rowCount] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][j - startColumn] = outData[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^subMatrixData[i - startRow][j - startColumn] ;^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^subMatrixData[i  ^  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[parity - startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - parity][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][rowCount - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][j - startColumn] = subMatrixData[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startColumn][j - startRow] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^subMatrixData[i - startRow][j - startColumn]  =  subMatrixData[i - startRow][j - startColumn] ;^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  j = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = row; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int j = nSum; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = startColumn; j == endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = rowCount; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nSum = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = startColumn; j <= startRow; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( startRownt j = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int startColumn = j; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int parity = startColumn; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^subMatrixData[i   instanceof   startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[rowCount - startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][rowDimension - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][j - rowDimension] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^subMatrixData[i - startRow][j - startColumn]  = null ;^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^subMatrixData[i  <<  startRow][j - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][row - startColumn] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i - startRow][j - parity] = data[i][j];^320^^^^^307^324^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = nSum; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = parity; i <= endRow; i++ )  {^318^^^^^307^324^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int j = parity; j <= endColumn; j++ )  {^319^^^^^307^324^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  RealMatrixImpl  subMatrix  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( selectedRows.length * selectedColumns.length != 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( selectedRows.length - selectedColumns.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  ( selectedRows.length * selectedColumns.length == -7 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( permutation.length * selectedColumns.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( selectedRows.length * permutation.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow * selectedColumns.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( selectedRows.length * parity == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( selectedColumns.length * selectedRows.length == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( selectedColumns.length.length * selectedRows == 0 )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( selectedRows.length * selectedColumns.length )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( selectedRows.length * selectedColumns.length == 0  )  {^339^^^^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("selected row and column index arrays must be non-empty");^339^340^341^342^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  { throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; }^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^339^340^341^342^^337^357^if  ( selectedRows.length * selectedColumns.length == 0 )  { throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; }^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "selected row and column index arrays must be non-emptyed " ) ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "invalid row or column index selection" )  ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  (  ( selectedRows.length )  *  ( selectedColumns.length )  )  == 0 )  {     throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; }^340^^^^^337^357^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "ed row and column indexelected row and column index arrays must be non-empty" ) ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException ( "invalid row or column index selection" ) ;throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^340^^^^^337^357^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "selected row and column index arrays must be non-emptyec" ) ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "column index arrays " ) ;^340^341^^^^337^357^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( permutation.length, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( nRows, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, nSum ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl (  selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length, selectedRows.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, permutation.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( row, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, nRows ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedColumns.length.length, selectedRows ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, row ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^343^344^^^^337^357^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] subMatrixData = subMatrix.getRow (  ) ;^345^^^^^337^357^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] subMatrixData = subMatrix .getData (  )  ;^345^^^^^337^357^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = out.getDataRef (  ) ;double[][] subMatrixData = subMatrix.getDataRef (  ) ;^345^^^^^337^357^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;double[][] subMatrixData = subMatrix.getDataRef (  ) ;^345^^^^^337^357^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^345^^^^^337^357^double[][] subMatrixData = subMatrix.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 0; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i == selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i <= selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -6; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = j; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt i = 0; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < selectedColumns.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < parity; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( selectedRows.lengthnt i = 0; i < i; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = 0; i < nSum; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j > selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = i; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( paritynt j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < parity; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( jnt i = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( selectedColumns.lengthnt j = 0; j < i; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int j = 0; j < selectedRows.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i][j] = outData[selectedRows[i]][selectedColumns[j]];^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^subMatrixData[i][j]  =  subMatrixData[i][j] ;^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = j; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j <= selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = -6; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int rowDimension = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int selectedColumns.length = 0; j < j; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^subMatrixData[i][j] = subMatrixData[selectedRows[i]][selectedColumns[j]];^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i > selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = parity; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = nRows; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( rowDimensionnt i = 0; i < selectedRows.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < selectedRows.length.length; i++ )  {^347^^^^^337^357^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = ; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nSum = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( rowCountnt j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < nSum; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = -2; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = 8; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < rowDimension; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( startRownt j = 0; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^subMatrixData[i][j] ;^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = rowCount; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^subMatrixData[i][j]  = null ;^349^^^^^337^357^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "matrix entry does not exist" )   ;^354^^^^^337^357^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = 2; j < selectedColumns.length; j++ )  {^348^^^^^337^357^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] RealMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  outData  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  subMatrix  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row < 0 )  &&  ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row <= 0 )  ||  ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row < 0 )  ||  ( column == 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row < nCols )  ||  ( column < nCols )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row < -6 )  ||  ( column < -6 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( parity < 0 )  ||  ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( row < 0 )  ||  ( startRow < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( column < 0 )  ||  ( row < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  (  ( row < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  (   ( column < 0 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( row < 0 ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( column < 0 ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  ( row < 2 )  ||  ( column < 2 )  ) {^388^^^^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("invalid row or column index selection");^388^389^390^391^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) { throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^388^389^390^391^^373^403^if  (  ( row < 0 )  ||  ( column < 0 )  ) { throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "invanvalid row or column index selection" ) ;^389^390^^^^374^404^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "selected row and column index arrays must be non-empty" )  ;^389^390^^^^374^404^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^389^^^^^374^404^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "or column index selectionvalid row or column index selection" ) ;^389^390^^^^374^404^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;throw new MatrixIndexException ( "invalid row or column index selection" ) ;^389^390^^^^374^404^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "invalid row or column index selectionvalid row or c" ) ;^389^390^^^^374^404^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "invalid row or column index selectionselecti" ) ;^389^390^^^^374^404^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRows = subMatrix.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^int nRows = subMatrixData.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^int nRows = rowDimension;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^int nRows = subMatrix.length.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^int nRows = subMatrix;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^int nRows = row;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = v.length;int nRows = subMatrix.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = subMatrix[0].length;int nRows = subMatrix.length;^392^^^^^377^407^int nRows = subMatrix.length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( nRows <= 0 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  ( nRows == 9 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( row == 0 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( nRows == 3 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( nRows != nCols )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( nCols == 0 )  {^393^^^^^378^408^if  ( nRows == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Matrix must have at least one row.");^393^394^395^396^^378^408^if  ( nRows == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^393^394^395^396^^378^408^if  ( nRows == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^393^^^^^378^408^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "st have at least one roatrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Matrix must have at least one column." )  ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^394^^^^^379^409^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^394^^^^^379^409^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix musatrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "atrix must have " ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix must have at leatrix must have at least one row." ) ;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return 0;^394^395^^^^379^409^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nCols = subMatrix[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^int nCols = subMatrix[-6].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^int nCols = outData[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^int nCols = subMatrix[0].length[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = subMatrix.length;int nCols = subMatrix[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = v.length;int nCols = subMatrix[0].length;^397^^^^^382^412^int nCols = subMatrix[0].length;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( nCols != 0 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  ( nCols == 6 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( startRow == 0 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( nCols == 3 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( nRows != nCols )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( nRows == 0 )  {^398^^^^^383^413^if  ( nCols == 0 )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Matrix must have at least one column.");^398^399^400^401^^383^413^if  ( nCols == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^398^399^400^401^^383^413^if  ( nCols == 0 )  { throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^398^^^^^383^413^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e atrix must have at least one column." ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Matrix must have at least one row." )  ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^399^^^^^384^414^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^399^^^^^384^414^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix must have at least one column.least one" ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " have" ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "trix must hav" ) ;^399^400^^^^384^414^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( subMatrix[r].length == nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( outData[r].length != nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( subMatrix[r].length != parity )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nCols[r].length != subMatrix )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( subMatrix[r].length != subMatrix[r].length )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( subMatrix[r].length != nSum )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( b.length != nRows )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("All input rows must have the same length.");^403^404^405^406^^388^418^if  ( subMatrix[r].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^403^404^405^406^^388^418^if  ( subMatrix[r].length != nCols )  { throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^403^^^^^388^418^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "All input rows must have the same length.nput rows must " ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^404^^^^^389^419^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ll input roll input rows must have the same length." ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ;throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one column." ) ;throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^404^^^^^389^419^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^404^^^^^389^419^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  r = 1; r < nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int r = 1; r <= nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int r = 8; r < nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int startRow = 1; r < nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int r = 1; r < nSum; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int nRows = 1; r < nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( subMatrixData[r].length != nCols )  {^403^^^^^388^418^if  ( subMatrix[r].length != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "All input rows must have the same length.t rows m" ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "All input rows must have the same length. " ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e l" ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "must have the" ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "input rows mll input rows must have the same length." ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int r = rowDimension; r < nRows; r++ )  {^402^^^^^387^417^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "l " ) ;^404^405^^^^389^419^throw new IllegalArgumentException ( "All input rows must have the same length." ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( data != null )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( subMatrixData == null )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( row > 0 || column > 0 )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( row > 0 )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( column > 0 )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( data == true )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( lu == null )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( max != col )  {^408^^^^^393^423^if  ( data == null )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^if ((row > 0) || (column > 0))    throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");; data = new double[nRows][nCols]; java.lang.System.arraycopy(subMatrix, 0, data, 0, subMatrix.length);^408^409^410^411^412^393^423^if  ( data == null )  { if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new double[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^408^409^410^411^412^393^423^if  ( data == null )  { if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new double[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row > 0 ) && ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row >= 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row > 0 ) || ( column < 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > endColumn ) || ( column > endColumn )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > -8 ) || ( column > -8 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( " initatrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^if  (  ( row > 0 ) || ( column > 0 )  )  throw if  (  ( row > 0 ) || ( column > 0 )  )  throw  new MatrixIndexException ( "matrix entry does not exist" )  ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( startRow > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( row > 0 ) || ( startRow > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( column > 0 ) || ( row > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( row > 0 ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( column > 0 ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  ( row > 0L ) || ( column > 0L )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("matrix must be initialized to perfom this method");^409^410^411^412^413^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new double[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^409^410^411^412^413^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ; data = new double[nRows][nCols]; System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( data )  == null )  {     if  (  ( row > 0 )  ||  ( column > 0 )  )          throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;          data = new double[nRows][nCols];     arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  (  ( selectedRows.length )  *  ( selectedColumns.length )  )  == 0 )  {     throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, column )  )  )  {     throw new MatrixIndexException ( "matrix entry does not exist" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, 0 )  )  )  {     throw new MatrixIndexException ( "illegal row argument" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, col )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows != nCols )  {     throw new InvalidMatrixException ( "LU decomposition requires that the matrix be square." ) ; }^409^^^^^394^424^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "at" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this methodinitialized to " ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^data =  new double[rowDimension][nCols];^411^^^^^396^426^data = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^data = new double[nRows][1];data = new double[nRows][nCols];^411^^^^^396^426^data = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^data = new double[rowDimension][columnDimension];data = new double[nRows][nCols];^411^^^^^396^426^data = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "nitialized to atrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "ust batrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( subMatrix, col, data, col, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrixData, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix, 0, subMatrixData, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy (  0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix, 0,  0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix, 0, data, 0 ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data, 0, subMatrix, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix, 0, subMatrix.length, 0, data ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^System.arraycopy ( subMatrix, 0, data, 0, nRows ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out, 0, ncols ) ;System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  ( row > 0 ) || ( column >= 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > nCols ) || ( column > nCols )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > rowCount ) || ( column > rowCount )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( " be initialized to pe" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( parity > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  ( row > 0 ) || ( parity > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method must " ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "itialized to perfom tatrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^data =  new double[null][nCols];^411^^^^^396^426^data = new double[nRows][nCols];^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "ix must be initialiatrix must be initialized to perfom this method" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this methodaliz" ) ;^409^410^^^^394^424^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( subMatrix, -6, data, -6, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( subMatrix, column, data, column, subMatrix.length ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix.length, 0, data, 0, subMatrix ) ;^412^^^^^397^427^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  && ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  (  ( nRows + row )  >= this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  (  ( nRows  &&  row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column == this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols  &&  column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selectioncolumn inde" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw  new MatrixIndexException ( "selected row and column index arrays must be non-empty" )  ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( parity + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( nRows + nSum )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( startRow + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + parity > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( row + nRows )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( nCols + row )  > this.getRowDimension (  )  )  || ( nRows + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  (  ( nRows + column )  > this.getRowDimension (  )  )  || ( nCols + row > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( nRows + row > this.getRowDimension (  ) ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( nRows + row ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( nCols + column > this.getColumnDimension (  ) ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P6_Replace_Expression]^if  ( nCols + column ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  (  (  ( nRows + row )  > this.getColumnDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getRowDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  (  ( nRows + startRow )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^414^415^416^417^^399^429^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^414^^^^^399^429^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  (  (  (  (  ( startRow < 0 )  ||  ( startRow > endRow )  )  ||  ( endRow >  ( data.length )  )  )  ||  ( startColumn < 0 )  )  ||  ( startColumn > endColumn )  )  ||  ( endColumn >  ( data[0].length )  )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^414^^^^^399^429^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  (  ( selectedRows.length )  *  ( selectedColumns.length )  )  == 0 )  {     throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ; }^414^^^^^399^429^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^414^^^^^399^429^[Delete]^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "valid" ) ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "selected row and column index arrays must be non-empty" )  ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "nvalid row nvalid row or column index selection" ) ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException ( "selected row and column index arrays must be non-empty" ) ;throw new MatrixIndexException ( "invalid row or column index selection" ) ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "ow or " ) ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^throw new MatrixIndexException ( "nvalid row onvalid row or column index selection" ) ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; ;^416^417^^^^401^431^throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^( nCols + column > this.getRowDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^415^416^417^^^400^430^( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^415^416^417^^^400^430^( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 0; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i > nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = i; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -1; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( paritynt i = 0; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < rowCount; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nRowsnt i = 0; i < i; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = 0; i < r; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( subMatrix[i], 7, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrixData[i], 0, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + nSum], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[rowDimension + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i], parity, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, startColumn ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i],  nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i], column ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, i[row + data], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, column[row + i], data, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + nCols], column, i ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[i], 0, subMatrix[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^System.arraycopy ( subMatrix[i], 0, data[row + i], startRow, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out, 0, ncols ) ;System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  i = 0; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = col; i < nRows; i++ )  {^418^^^^^403^433^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( subMatrix[i], rowDimension, data[row + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + r], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[r + i], column, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i], row, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, parity ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + column], i, nCols ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[i], 0, data[row + i], nCols, column ) ;^419^^^^^404^434^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^lu = true;^421^^^^^406^436^lu = null;^[CLASS] RealMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   double[][] subMatrix int row int column [VARIABLES] double[][]  d  data  lu  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate (  row, -5 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate (  nSum, 0 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  (  !RealMatrixImpl (  row, 0 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  !isValidCoordinate (  row, 0 - 0 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate ( 0, col )   )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isValidCoordinate ( row,column )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  0, column )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("illegal row argument");^433^434^435^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^433^434^435^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "matrix entry does not exist" )   ;^434^^^^^432^440^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^434^^^^^432^440^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, 0 )  )  )  {     throw new MatrixIndexException ( "illegal row argument" ) ; }^434^^^^^432^440^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, col )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^434^^^^^432^440^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^434^^^^^432^440^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^434^^^^^432^440^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, column )  )  )  {     throw new MatrixIndexException ( "matrix entry does not exist" ) ; }^434^^^^^432^440^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^434^^^^^432^440^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate (  row,  )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate (  nRows, 0 )  )  {^433^^^^^432^440^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int ncols = this.getRowDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int ncols = this.getColumnDimension (  ) ; }^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^436^^^^^432^440^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double[][] out = new double[6][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] out = new double[1][ncols];^437^^^^^432^440^double[][] out = new double[1][ncols];^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( data[row], 4, out[4], 4, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( data[row], -9, out[-9], -9, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( data[row], -6, out[-6], -6, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, subMatrix[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, out[0], 0, nRows ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrix[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, out[0], 0 ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, ncols[0], 0, out ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( out[row], 0, data[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out, 0, ncols ) ;System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^438^^^^^432^440^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( outData )  ;^439^^^^^432^440^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return new RealMatrixImpl ( subMatrixData ) ;^439^^^^^432^440^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return  new RealMatrixImpl ( outData )  ;^439^^^^^432^440^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return new RealMatrixImpl ( subMatrix ) ;^439^^^^^432^440^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] RealMatrix   int row [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate (  column, column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate (  0, nSum )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  (  !RealMatrixImpl (  0, column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  !isValidCoordinate (  3, column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate ( 0, col )   )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  row, 0  )   )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isValidCoordinate ( row,column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("illegal column argument");^451^452^453^^^450^460^if  (  !isValidCoordinate (  0, column )  )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^451^452^453^^^450^460^if  (  !isValidCoordinate (  0, column )  )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "matrix entry does not exist" )   ;^452^^^^^450^460^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^452^^^^^450^460^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, 0 )  )  )  {     throw new MatrixIndexException ( "illegal row argument" ) ; }^452^^^^^450^460^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, col )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^452^^^^^450^460^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^452^^^^^450^460^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate (  8, column )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate (  0, parity )  )  {^451^^^^^450^460^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^long  nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^454^455^^^^450^460^int nRows = this.getRowDimension (  ) ; double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^454^^^^^450^460^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double[][] out = new double[nRows][7];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] out = new double[nRows][1];^455^^^^^450^460^double[][] out = new double[nRows][1];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  row = 0; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = endRow; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = startRow; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; row < ncols; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int ncols = 0; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^out[row][7] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row][0] = subMatrix[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[row][4] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];out[row][0] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;out[row][0] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^data[row][0] = v[row];out[row][0] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];out[row][0] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];out[row][0] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;out[row][0] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^out[row][row] = data[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row][0] = subMatrixData[row][column];^457^^^^^450^460^out[row][0] = data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = -6; row < nRows; row++ )  {^456^^^^^450^460^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( outData )  ;^459^^^^^450^460^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return new RealMatrixImpl ( outData ) ;^459^^^^^450^460^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return new RealMatrixImpl ( subMatrix ) ;^459^^^^^450^460^return new RealMatrixImpl ( out ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] RealMatrix   int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate (  row, -7  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate (  nRows, 0  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  (  !RealMatrixImpl (  row, 0  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  !RealMatrixImpl (  row, 1  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate ( 0, col )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isValidCoordinate ( row,column )  )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  0, column )  )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("illegal row argument");^473^474^475^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^473^474^475^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "matrix entry does not exist" )   ;^474^^^^^472^480^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^474^^^^^472^480^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, 0 )  )  )  {     throw new MatrixIndexException ( "illegal row argument" ) ; }^474^^^^^472^480^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, col )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^474^^^^^472^480^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^474^^^^^472^480^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^474^^^^^472^480^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, column )  )  )  {     throw new MatrixIndexException ( "matrix entry does not exist" ) ; }^474^^^^^472^480^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^474^^^^^472^480^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate (  row, startRow  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate (  r, 0  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  !RealMatrixImpl (  r, 0  )   )  {^473^^^^^472^480^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int ncols = this.getRowDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int ncols = this.getColumnDimension (  ) ;^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^476^^^^^472^480^int ncols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[] out = new double[ncols];^477^^^^^472^480^double[] out = new double[ncols];^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^System.arraycopy ( data[row], , out, , ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, out, 0, nSum ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( subMatrixData[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0,  0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, out, 0 ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^System.arraycopy ( data[row], 0, ncols, 0, out ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^System.arraycopy ( data[row], 0, out, 0, parity ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^478^479^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ; return out;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;System.arraycopy ( data[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;System.arraycopy ( data[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;System.arraycopy ( data[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;System.arraycopy ( data[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;System.arraycopy ( data[row], 0, out, 0, ncols ) ;^478^^^^^472^480^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] RealMatrixImpl  [METHOD] getRow [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate ( 0, nSum )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  (  !RealMatrixImpl ( 0, col )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  !isValidCoordinate ( 0 / 4, col )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  row, 0  )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isValidCoordinate ( row,column )  )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  0, column )  )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("illegal column argument");^493^494^495^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^493^494^495^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "matrix entry does not exist" )   ;^494^^^^^492^502^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^494^^^^^492^502^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, 0 )  )  )  {     throw new MatrixIndexException ( "illegal row argument" ) ; }^494^^^^^492^502^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, col )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^494^^^^^492^502^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return 0;^494^^^^^492^502^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^494^^^^^492^502^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return ;^494^^^^^492^502^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^if  (  !isValidCoordinate ( -9, col )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  (  !isValidCoordinate ( 0, ncols )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  (  !isValidCoordinate ( 0, startRow )   )  {^493^^^^^492^502^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^496^^^^^492^502^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[] out = new double[nRows];^497^^^^^492^502^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row > nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int parity = 0; row < nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; row < rowCount; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int row = 0; row < nSum; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row] = subMatrix[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[row]  =  out[row] ;^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row][0] = data[row][column];out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum = lu[row][col];out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum += Math.abs ( data[row][col] ) ;out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row] = solution[row][0];out[row] = data[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row] = subMatrixData[row][col];^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[row] ;^499^^^^^492^502^out[row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = i; row < nRows; row++ )  {^498^^^^^492^502^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] getColumn [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^if  ( !isValidCoordinate ( column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( !isValidCoordinate ( nSum,column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( !isValidCoordinate ( row,nSum )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( !RealMatrixImpl ( row,column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( !isValidCoordinate ( ncols,column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate ( 0, col )   )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  row, 0  )   )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  (  !isValidCoordinate (  0, column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.MatrixIndexException("matrix entry does not exist");^521^522^523^^^519^525^if  ( !isValidCoordinate ( row,column )  )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^521^522^523^^^519^525^if  ( !isValidCoordinate ( row,column )  )  { throw new MatrixIndexException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new MatrixIndexException ( "matrix must be initialized to perfom this method" )   ;^522^^^^^519^525^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^522^^^^^519^525^throw new MatrixIndexException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( !RealMatrixImpl ( ncols,column )  )  {^521^^^^^519^525^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return outData[row][column];^524^^^^^519^525^return data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return subMatrixData[row][column];^524^^^^^519^525^return data[row][column];^[CLASS] RealMatrixImpl  [METHOD] getEntry [RETURN_TYPE] double   int row int column [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^long  nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^533^534^^^^532^543^int nRows = this.getRowDimension (  ) ; int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^533^^^^^532^543^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nCols = this.getRowDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^534^535^^^^532^543^int nCols = this.getColumnDimension (  ) ; RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCols = this.getColumnDimension (  ) ; }^534^^^^^532^543^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrixImpl out = new RealMatrixImpl ( outData )  ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrixImpl out = new RealMatrixImpl (  nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrixImpl out = new RealMatrixImpl ( nCols ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl out = new RealMatrixImpl ( ncols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl out = new RealMatrixImpl ( nRows, nCols ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl out = new RealMatrixImpl ( rowCount, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nSum ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl out = new RealMatrixImpl ( row, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl subMatrix = new RealMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl subMatrix = new RealMatrixImpl ( selectedRows.length, selectedColumns.length ) ;RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrix m =  ( RealMatrix )  object;RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^535^^^^^532^543^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] outData = out.getRow (  ) ;^536^^^^^532^543^double[][] outData = out.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] outData = out .getData (  )  ;^536^^^^^532^543^double[][] outData = out.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] subMatrixData = subMatrix.getDataRef (  ) ;double[][] outData = out.getDataRef (  ) ;^536^^^^^532^543^double[][] outData = out.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] outData = out.getDataRef (  ) ;^536^^^^^532^543^double[][] outData = out.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^536^^^^^532^543^double[][] outData = out.getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = 8; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; row < nSum; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int row = 0; row < ncols; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  col = 0; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = -8; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int col = 0; col < startColumn; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int col = 0; col < row; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^outData[col][row] = subMatrixData[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^outData[col][row]  =  outData[col][row] ;^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^data[row][0] = v[row];outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row][0] = data[row][column];outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;outData[col][row] = data[row][col];^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^outData[col][row] ;^539^^^^^532^543^outData[col][row] = data[row][col];^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = col; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  col = 0; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = columnCount; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int r = 0; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int ncols = 0; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = startColumn; row < nRows; row++ )  {^537^^^^^532^543^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = -2; col < nCols; col++ )  {^538^^^^^532^543^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] transpose [RETURN_TYPE] RealMatrix   [VARIABLES] boolean  double  TOO_SMALL  d  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^return copyOut ( MatrixUtils.createRealIdentityMatrix ( this.getRowDimension (  )  )  ) ;^552^553^^^^551^554^return solve ( MatrixUtils.createRealIdentityMatrix ( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^return solve ( MatrixUtils.createRealIdentityMatrix ( this.getColumnDimension (  )  )  ) ;^552^553^^^^551^554^return solve ( MatrixUtils.createRealIdentityMatrix ( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^552^553^^^^551^554^return solve ( MatrixUtils.createRealIdentityMatrix ( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^( this.getColumnDimension (  )  )  ) ;^553^^^^^551^554^( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^553^^^^^551^554^( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;( this.getRowDimension (  )  )  ) ;^553^^^^^551^554^( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;( this.getRowDimension (  )  )  ) ;^553^^^^^551^554^( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;( this.getRowDimension (  )  )  ) ;^553^^^^^551^554^( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { ( this.getRowDimension (  )  )  ) ; }^553^^^^^551^554^( this.getRowDimension (  )  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] inverse [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( !isSingular (  )  )  {^561^^^^^560^573^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( this.isSingular (  )  )  {^561^^^^^560^573^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( isSingular (  )  )  {^561^^^^^560^573^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !this.isSquare (  )  )  {^561^^^^^560^573^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is not square");^561^562^563^^^560^573^if  ( !isSquare (  )  )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^561^562^563^^^560^573^if  ( !isSquare (  )  )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new InvalidMatrixException ( "Matrix is singular." )   ;^562^^^^^560^573^throw new InvalidMatrixException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( this.isSquare (  )  )  )  {     throw new InvalidMatrixException ( "coefficient matrix is not square" ) ; }^562^^^^^560^573^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^562^^^^^560^573^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^562^^^^^560^573^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows != nCols )  {     throw new InvalidMatrixException ( "LU decomposition requires that the matrix be square." ) ; }^562^^^^^560^573^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return false;^562^^^^^560^573^throw new InvalidMatrixException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( ncolssSingular (  )  )  {^564^^^^^560^573^if  ( isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( isSquare (  )  )  {^564^^^^^560^573^if  ( isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( this.isSingular (  )  )  {^564^^^^^560^573^if  ( isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isSquare (  )  )  {^564^^^^^560^573^if  ( isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !this.isSquare (  )  )  {^564^^^^^560^573^if  ( isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i == this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = 3; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( paritynt i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^for  ( int i = 0; i < this.getColumnDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^det *= subMatrixData[i][i];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^det *=  lu[startColumn][startColumn];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^tmp = lu[max][i];det *= lu[i][i];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^det *= subMatrix[i][i];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^det *=  lu[ncols][ncols];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return sum;^571^^^^^560^573^return det;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return maxColSum;^571^^^^^560^573^return det;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^int det = parity;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^double det = nSum;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double tmp = 0;double det = parity;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double sum = 0;double det = parity;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = parity; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^568^569^570^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  { det *= lu[i][i]; }^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i <= this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( ncolsnt i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( nSumnt i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^det *= outData[i][i];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^det *=  lu[nSum][nSum];^569^^^^^560^573^det *= lu[i][i];^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^double det = row;^567^^^^^560^573^double det = parity;^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  i = 0; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = endRow; i < this.getRowDimension (  ) ; i++ )  {^568^^^^^560^573^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^return  ( this.getColumnDimension (  )  != this.getRowDimension (  )  ) ;^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^return  ( this.getRowDimension (  )  == this.getRowDimension (  )  ) ;^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^return  ( this.getColumnDimension (  )  == this.getColumnDimension (  )  ) ;^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  { return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ; }^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  { return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ; }^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ; }^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^579^^^^^578^580^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( lu != null )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( subMatrixData == null )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( lu == this )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( data != null )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( max != col )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( data == null )  {^586^^^^^585^596^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^return true;^594^^^^^585^596^return false;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^return true;^589^^^^^585^596^return false;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^copyOut (  ) ;^588^^^^^585^596^luDecompose (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^588^^^^^585^596^luDecompose (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^return copyOut (  ) ;luDecompose (  ) ;^588^^^^^585^596^luDecompose (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^return false;^591^^^^^585^596^return true;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^588^589^^^^585^596^luDecompose (  ) ; return false;^[CLASS] RealMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  double  TOO_SMALL  d  det  maxColSum  sum  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return ncols;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return data;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return data.length.length;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return subMatrix.length;^602^^^^^601^603^return data.length;^[CLASS] RealMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^return data[-4].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return subMatrixData[0].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return data[0].length[0].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return data[0 ].length;^609^^^^^608^610^return data[0].length;^[CLASS] RealMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( !isSingular (  )  )  {^617^^^^^616^625^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( this.isSingular (  )  )  {^617^^^^^616^625^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( isSingular (  )  )  {^617^^^^^616^625^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !this.isSquare (  )  )  {^617^^^^^616^625^if  ( !isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("matrix is not square");^617^618^619^^^616^625^if  ( !isSquare (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^617^618^619^^^616^625^if  ( !isSquare (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( this.isSquare (  )  )  )  {     throw new InvalidMatrixException ( "coefficient matrix is not square" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^617^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "matrix dimension mismatch" )   ;^618^^^^^616^625^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^618^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^618^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^618^^^^^616^625^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^618^^^^^616^625^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^618^^^^^616^625^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^618^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^618^^^^^616^625^[Delete]^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^int trace = data[0][0];^620^^^^^616^625^double trace = data[0][0];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double trace = data[][];^620^^^^^616^625^double trace = data[0][0];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double trace = data[column][column];^620^^^^^616^625^double trace = data[0][0];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^double trace = subMatrix[0][0];^620^^^^^616^625^double trace = data[0][0];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 1; i <= this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  >>  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -5; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( ncolsnt i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^for  ( int i = 1; i < this.getColumnDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( nSumnt i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^trace += subMatrix[i][i];^622^^^^^616^625^trace += data[i][i];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^trace +=  data[ncols][ncols];^622^^^^^616^625^trace += data[i][i];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^trace += subMatrixData[i][i];^622^^^^^616^625^trace += data[i][i];^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 1; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = nRows; i < this.getRowDimension (  ) ; i++ )  {^621^^^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^621^622^623^^^616^625^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  { trace += data[i][i]; }^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return sum;^624^^^^^616^625^return trace;^[CLASS] RealMatrixImpl  [METHOD] getTrace [RETURN_TYPE] double   [VARIABLES] double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  maxColSum  sum  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( v.length <= this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( parity != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( v.length.length != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( v != this.getColumnDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( v.length != this.getRowDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( out.length != this.getRowDimension (  )  )  {^633^^^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("vector has wrong length");^633^634^635^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^633^634^635^^^632^647^if  ( v.length != this.getColumnDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  (  ( this.getColumnDimension (  )  )  !=  ( m.getColumnDimension (  )  )  )  ||  (  ( this.getRowDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  )  {     throw new IllegalArgumentException ( "matrix dimension mismatch" ) ; }^633^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Incorrect row dimension" )   ;^634^^^^^632^647^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^634^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^634^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^634^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return 0;^634^^^^^632^647^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^634^^^^^632^647^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^634^^^^^632^647^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^634^^^^^632^647^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^634^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^634^^^^^632^647^[Delete]^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^636^637^^^^632^647^int nRows = this.getRowDimension (  ) ; int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^636^^^^^632^647^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nCols = this.getRowDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCols = this.getColumnDimension (  ) ; }^637^^^^^632^647^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[] out = new double[v.length];^638^^^^^632^647^double[] out = new double[v.length];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row == nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  <=  ( int row = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = nSum; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = ; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int ncols = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; row < startRow; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt row = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int nRows = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i > nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = columnDimension; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < row; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nColsnt i = 0; i < i; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = 0; i < ncols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^sum - += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += data[row][i] * out[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += subMatrixData[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[null][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^data[row][0] = v[row];sum += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum = lu[row][col];sum += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum += data[i][col] * v[i];sum += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum -= lu[row][i] * lu[i][col];sum += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum += data[row][i] * m.getEntry ( i, col ) ;sum += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^sum / += data[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[nRows][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row] = maxColSum;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[row]  =  out[row] ;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[col] = sum;out[row] = sum;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[row][col] = sum;out[row] = sum;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = sum;out[row] = sum;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^int sum = 0;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double det = parity;double sum = 0;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double sum = 0;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double tmp = 0;double sum = 0;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double largest = 0d;double sum = 0;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -8; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  |  ( int i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = ; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( rnt i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( startRownt i = 0; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[nSum][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += outData[row][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[ncols][i] * v[i];^642^^^^^632^647^sum += data[row][i] * v[i];^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row] = trace;^644^^^^^632^647^out[row] = sum;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  row = 0; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = -5; row < nRows; row++ )  {^639^^^^^632^647^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double sum = row;^640^^^^^632^647^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = rowCount; i < nCols; i++ )  {^641^^^^^632^647^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return v;^646^^^^^632^647^return out;^[CLASS] RealMatrixImpl  [METHOD] operate [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^655^^^^^654^669^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( v.length < nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( out.length != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( v.length != nSum )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( rowDimension != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( v.length.length != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nRows.length != v )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nRows != v.length )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( b.length != nRows )  {^656^^^^^654^669^if  ( v.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("vector has wrong length");^656^657^658^^^654^669^if  ( v.length != nRows )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^656^657^658^^^654^669^if  ( v.length != nRows )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^656^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Incorrect row dimension" )   ;^657^^^^^654^669^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^657^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^657^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^657^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return false;^657^^^^^654^669^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^657^^^^^654^669^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^657^^^^^654^669^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^657^^^^^654^669^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^657^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^657^^^^^654^669^[Delete]^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^long  nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nCols = this.getRowDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^659^^^^^654^669^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^659^660^^^^654^669^int nCols = this.getColumnDimension (  ) ; double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[] out = new double[nCols];^660^^^^^654^669^double[] out = new double[nCols];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  col = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col == nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ||  ( int col = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = endColumn; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = ; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nSum = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int col = 0; col < r; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( ncolsnt col = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nCols = 0; col < col; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( colnt i = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int ncols = 0; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = row; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( startRownt i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < rowCount; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( nSumnt i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^sum / += data[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += data[i][col] * out[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += subMatrixData[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += v[i][col] * data[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[ncols][col] * v[ncols];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];sum += data[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^sum - += data[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[rowCount][col] * v[rowCount];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[col] = trace;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[col] ;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[col][i] = tmp;out[col] = sum;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row] = sum;out[col] = sum;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[row][col] = sum;out[col] = sum;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[row][col] = sum;out[col] = sum;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^int sum = 0;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double sum = -1;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double det = parity;double sum = 0;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double sum = 0;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double tmp = 0;double sum = 0;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double largest = 0d;double sum = 0;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -4; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = columnCount; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < ncols; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nRowsnt i = 0; i < i; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = 0; i < r; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^sum += outData[i][col] * v[i];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^sum +=  data[nSum][col] * v[nSum];^664^^^^^654^669^sum += data[i][col] * v[i];^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[col] = maxColSum;^666^^^^^654^669^out[col] = sum;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = i; col < nCols; col++ )  {^661^^^^^654^669^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^double sum = r;^662^^^^^654^669^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = 5; i < nRows; i++ )  {^663^^^^^654^669^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return v;^668^^^^^654^669^return out;^[CLASS] RealMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] double[]   double[] v [VARIABLES] boolean  double[]  out  v  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^683^^^^^682^694^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( b.length == nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( out.length != nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( b.length != nSum )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nSum != nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nRows.length != b )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^if  ( nRows != b.length )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^if  ( b.length != ncols )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( subMatrix[r].length != nCols )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( v.length != nRows )  {^684^^^^^682^694^if  ( b.length != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("constant vector has wrong length");^684^685^686^^^682^694^if  ( b.length != nRows )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^684^685^686^^^682^694^if  ( b.length != nRows )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( subMatrix[r].length )  != nCols )  {     throw new IllegalArgumentException ( "All input rows must have the same length." ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^684^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "vector has wrong length" )   ;^685^^^^^682^694^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^685^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^685^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^685^^^^^682^694^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^685^^^^^682^694^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^685^^^^^682^694^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^685^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nCols == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one column." ) ; }^685^^^^^682^694^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrix bMatrix = RealMatrix bMatrix =  new RealMatrixImpl ( outData )  ;^687^^^^^682^694^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrix outMatrix = new RealMatrixImpl ( b ) ;^687^^^^^682^694^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^687^^^^^682^694^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrix m =  ( RealMatrix )  object;RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^687^^^^^682^694^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^687^^^^^682^694^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getRow (  ) ;^688^^^^^682^694^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  )  .getData (  )  ;^688^^^^^682^694^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^double[][] solution =  (  ( RealMatrixImpl )   ( operate ( bMatrix )  )  ) .getDataRef (  ) ;^688^^^^^682^694^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] subMatrixData = subMatrix.getDataRef (  ) ;double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^688^^^^^682^694^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^688^^^^^682^694^double[][] solution =  (  ( RealMatrixImpl )   ( solve ( bMatrix )  )  ) .getDataRef (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[] out = new double[nRows];^689^^^^^682^694^double[] out = new double[nRows];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  row = 0; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row == nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = 8; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; row < startColumn; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int parity = 0; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^out[row] = solution[row][startRow];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row] = outData[row][0];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[row] = solution[row][4];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];out[row] = solution[row][0];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^out[row] = solution[row][endRow];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^out[row] = subMatrix[row][0];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^out[row] = solution[row][2];^691^^^^^682^694^out[row] = solution[row][0];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = -4; row < nRows; row++ )  {^690^^^^^682^694^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^return b;^693^^^^^682^694^return out;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] double[]   double[] b [VARIABLES] boolean  double[]  b  out  RealMatrix  bMatrix  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^if  ( b.getRowDimension (  )  == this.getRowDimension (  )  )  {^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( b.multiply (  )  != this.getRowDimension (  )  )  {^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( b.getColumnDimension (  )  != this.getRowDimension (  )  )  {^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Incorrect row dimension");^708^709^710^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^708^709^710^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.length )  != nRows )  {     throw new IllegalArgumentException ( "constant vector has wrong length" ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  !=  ( this.getColumnDimension (  )  )  )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( rowDimension <= 0 )  ||  ( columnDimension <= 0 )  )  {     throw new IllegalArgumentException ( "row and column dimensions must be postive" ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( this.getColumnDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Matrices are not multiplication compatible." ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  (  ( this.getColumnDimension (  )  )  !=  ( m.getColumnDimension (  )  )  )  ||  (  ( this.getRowDimension (  )  )  !=  ( m.getRowDimension (  )  )  )  )  {     throw new IllegalArgumentException ( "matrix dimension mismatch" ) ; }^708^^^^^693^723^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "matrix dimension mismatch" )   ;^709^^^^^694^724^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix must have at least one row." ) ;throw new IllegalArgumentException  (" ")  ;^709^^^^^694^724^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new InvalidMatrixException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^709^^^^^694^724^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^throw new MatrixIndexException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^709^^^^^694^724^throw new IllegalArgumentException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^709^^^^^694^724^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows == 0 )  {     throw new IllegalArgumentException ( "Matrix must have at least one row." ) ; }^709^^^^^694^724^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( v.length )  != nRows )  {     throw new IllegalArgumentException ( "vector has wrong length" ) ; }^709^^^^^694^724^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( b.getRowDimension (  )  )  !=  ( this.getRowDimension (  )  )  )  {     throw new IllegalArgumentException ( "Incorrect row dimension" ) ; }^709^^^^^694^724^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( b .getColumnDimension (  )   != this^708^^^^^693^723^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( !this.isSingular (  )  )  {^711^^^^^696^726^if  ( !this.isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( this.isSingular (  )  )  {^711^^^^^696^726^if  ( !this.isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( isSingular (  )  )  {^711^^^^^696^726^if  ( !this.isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isSquare (  )  )  {^711^^^^^696^726^if  ( !this.isSquare (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.InvalidMatrixException("coefficient matrix is not square");^711^712^713^^^696^726^if  ( !this.isSquare (  )  )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^711^712^713^^^696^726^if  ( !this.isSquare (  )  )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new IllegalArgumentException ( "matrix is not square" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, column )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, column )  )  )  {     throw new MatrixIndexException ( "matrix entry does not exist" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( row, 0 )  )  )  {     throw new MatrixIndexException ( "illegal row argument" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  (  ( row < 0 )  ||  ( column < 0 )  )  {     throw new MatrixIndexException ( "invalid row or column index selection" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isValidCoordinate ( 0, col )  )  )  {     throw new MatrixIndexException ( "illegal column argument" ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows != nCols )  {     throw new InvalidMatrixException ( "LU decomposition requires that the matrix be square." ) ; }^711^^^^^696^726^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new InvalidMatrixException ( "matrix is not square" )   ;^712^^^^^697^727^throw new InvalidMatrixException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( this.isSquare (  )  )  )  {     throw new InvalidMatrixException ( "coefficient matrix is not square" ) ; }^712^^^^^697^727^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^712^^^^^697^727^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^712^^^^^697^727^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows != nCols )  {     throw new InvalidMatrixException ( "LU decomposition requires that the matrix be square." ) ; }^712^^^^^697^727^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^if  ( this.isSquare (  )  )  {^714^^^^^699^729^if  ( this.isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( isSingular (  )  )  {^714^^^^^699^729^if  ( this.isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !isSquare (  )  )  {^714^^^^^699^729^if  ( this.isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P9_Replace_Statement]^if  ( !this.isSquare (  )  )  {^714^^^^^699^729^if  ( this.isSingular (  )  )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.InvalidMatrixException("Matrix is singular.");^714^715^716^^^699^729^if  ( this.isSingular (  )  )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P16_Remove_Block]^^714^715^716^^^699^729^if  ( this.isSingular (  )  )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^throw throw  new InvalidMatrixException ( "matrix is not square" )   ;^715^^^^^700^730^throw new InvalidMatrixException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( this.isSquare (  )  )  )  {     throw new InvalidMatrixException ( "coefficient matrix is not square" ) ; }^715^^^^^700^730^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( ! ( isSquare (  )  )  )  {     throw new InvalidMatrixException ( "matrix is not square" ) ; }^715^^^^^700^730^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^715^^^^^700^730^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^return true;^715^^^^^700^730^throw new InvalidMatrixException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P13_Insert_Block]^if  ( nRows != nCols )  {     throw new InvalidMatrixException ( "LU decomposition requires that the matrix be square." ) ; }^715^^^^^700^730^[Delete]^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nCol = this.getRowDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCol = this.getColumnDimension (  ) ;^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCol = this.getColumnDimension (  ) ; }^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^718^^^^^703^733^int nCol = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^long  nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nColB = b.multiply (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nColB = b.getColumnDimension (  ) ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nColB = b.getColumnDimension (  ) ; }^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nColB = b .getRowDimension (  )  ;^719^^^^^704^734^int nColB = b.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^719^720^^^^704^734^int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  { int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ; }^719^720^^^^704^734^int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  { int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ; }^719^720^^^^704^734^int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ; }^719^720^^^^704^734^int nColB = b.getColumnDimension (  ) ; int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRowB = b.multiply (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P7_Replace_Invocation]^int nRowB = b .getColumnDimension (  )  ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRowB = b.getRowDimension (  ) ;^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^720^^^^^705^735^int nRowB = b.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[ncols];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nRows];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[v.length];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[] out = new double[nCols];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] bp = new double[nRowB][nColB];^723^^^^^708^738^double[][] bp = new double[nRowB][nColB];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  row = 0; row < nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = 5; row < nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRowB = 0; row < nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; row < rowCount; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRowB = 0; row < row; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int row = 0; row < r; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  col = 0; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col <= nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = 2; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int ncols = 0; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int col = 0; col < parity; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nColB = 0; col < col; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int col = 0; col < r; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = b.getEntry ( permutation[row], nSum ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = b.getEntry ( selectedRows[row], col ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = b.getEntry ( permutation[row] ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = b.getEntry ( col[row], permutation ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[row][col]  = null ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = permutation.getEntry ( b[row], col ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[row][col] = b .getRowDimension (  )  ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P14_Delete_Statement]^^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  col = 0; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = 5; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = b.getEntry ( permutation[row], ncols ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[row][col] = b.getEntry ( permutation[row], rowDimension ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = endColumn; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int col = 0; col < row; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int col = 0; col < ncols; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[row][col]  =  bp[row][col] ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = col.getEntry ( permutation[row], b ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int row = -3; row < nRowB; row++ )  {^724^^^^^709^739^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = r; col < nColB; col++ )  {^725^^^^^710^740^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[row][col] = b.getEntry ( permutation[row], startRow ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[row][col] = b.getEntry ( permutation[row], startColumn ) ;^726^^^^^711^741^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  col = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col > nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  <  ( int col = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col == nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = ; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = 8; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int startColumn = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int col = 0; col < ncols; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( paritynt col = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nColnt col = 0; col < i; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int ncols = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  &  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = col + 1; i <= nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = col ; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = ncols + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( colnt i = i + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nColnt i = col + 1; i < i; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = col + 1; i < parity; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = startRow; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int rowCount = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < r; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( rownt j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nColBnt j = 0; j < i; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] + -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] += bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= solution[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= bp[col][j] * solution[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= lu[col][j] * bp[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[i][j] -;^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];bp[i][j] -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum -= lu[row][i] * lu[i][col];bp[i][j] -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] / -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= bp[col][j] * subMatrixData[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = -1; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = j; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < nSum; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( jnt i = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int j = 0; j < parity; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] - -= bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] = bp[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= subMatrix[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[i][j] - = null ;^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= subMatrixData[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= bp[col][j] * outData[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[i][j] - =  bp[i][j] -;^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  >  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = col + endColumn; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int i = row + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  !=  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = col + nCols; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = nSum + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( ncolsnt i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = nCol + 1; i < col; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( nRowsnt i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j > nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = nCols; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int r = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= outData[col][j] * lu[i][col];^734^^^^^719^749^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = 8; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = columnCount; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( ncolsnt j = 0; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nColB = 0; j < j; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  col = 0; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = nRowB; col < nCol; col++ )  {^731^^^^^716^746^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ||  ( int i = col + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = r + 1; i < nCol; i++ )  {^732^^^^^717^747^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = r; j < nColB; j++ )  {^733^^^^^718^748^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  col = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = nCol  >=  1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = nCol - 1; col > 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = nCol  <  1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = nCol ; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = nCol - 1; col >= r; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = nCol - 1; col >= endRow; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = nCol - 1; col >= 1; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int col = row - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( ncolsnt col = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( nSumnt col = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  j = 0; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j > nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = r; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int parity = 0; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < r; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int nRows = 0; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[col][j] /= subMatrix[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[col][j] /;^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];bp[col][j] /= lu[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^lu[max][i] = lu[col][i];bp[col][j] /= lu[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum = lu[row][col];bp[col][j] /= lu[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];bp[col][j] /= lu[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^bp[i][j] -= bp[col][j] * lu[i][col];bp[col][j] /= lu[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  i = 0; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i <= col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int i = 0; i == col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -5; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = nSum; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt i = 0; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < row; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( colnt i = 0; i < i; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( ncolsnt i = 0; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j == nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = columnDimension; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int ncols = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < nSum; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nSumnt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int j = 0; j < row; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] + -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] = bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= subMatrixData[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= lu[col][j] * bp[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[i][j] - =  bp[i][j] -;^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];bp[i][j] -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^sum -= lu[row][i] * lu[i][col];bp[i][j] -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] / -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] += bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= solution[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= bp[col][j] * solution[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[i][j] -;^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = startRow; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = -3; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int row = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < startRow; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( paritynt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( jnt i = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nColBnt j = 0; j < i; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int j = 0; j < ncols; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[col][j] / =  bp[col][j] /;^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= bp[col][j] * subMatrix[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = 3; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  i = 0; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = 1; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = 3; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = 4; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int j = 0; j < nSum; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nColB = 0; j < j; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[col][j] /= subMatrixData[col][col];^742^^^^^727^757^bp[col][j] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = r; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = -2; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( nRowsnt i = 0; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int i = 0; i < parity; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = -1; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nSum = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nColB = 0; j < j; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int r = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= outData[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^bp[i][j] - -= bp[col][j] * lu[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^bp[i][j] - = null ;^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  long  j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = r; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = ; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( int nRows = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^for  ( rnt j = 0; j < nColB; j++ )  {^745^^^^^730^760^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^bp[i][j] -= bp[col][j] * subMatrixData[i][col];^746^^^^^731^761^bp[i][j] -= bp[col][j] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^for  (  short  col = nCol - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P2_Replace_Operator]^for  ( int col = nCol  ^  1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int col = nCol - i; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^for  ( int col = parity - 1; col >= 0; col-- )  {^740^^^^^725^755^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int j = -6; j < nColB; j++ )  {^741^^^^^726^756^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P3_Replace_Literal]^for  ( int i = 4; i < col; i++ )  {^744^^^^^729^759^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P4_Replace_Constructor]^RealMatrixImpl outMat = new RealMatrixImpl ( outData )  ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P8_Replace_Mix]^RealMatrixImpl outMat = new RealMatrixImpl ( subMatrixData ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P5_Replace_Variable]^RealMatrixImpl outMat = new RealMatrixImpl ( solution ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrix m =  ( RealMatrix )  object;RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P11_Insert_Donor_Statement]^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^751^^^^^736^766^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;^[CLASS] RealMatrixImpl  [METHOD] solve [RETURN_TYPE] RealMatrix   RealMatrix b [VARIABLES] boolean  RealMatrix  b  double  TOO_SMALL  d  det  maxColSum  sum  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  RealMatrixImpl  outMat  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^775^^^^^760^790^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^long  nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nCols = this.getRowDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCols = this.getColumnDimension (  ) ; }^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^776^^^^^761^791^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( nRows == nCols )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( r != nCols )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( nCols != nRows )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( nRows != rowCount )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( nRows == 0 )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( data != null )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( max != col )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( nCols == 0 )  {^777^^^^^762^792^if  ( nRows != nCols )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^throw new org.apache.commons.math.linear.InvalidMatrixException("LU decomposition requires that the matrix be square.");^777^778^779^^^762^792^if  ( nRows != nCols )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^777^778^779^^^762^792^if  ( nRows != nCols )  { throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P13_Insert_Block]^if  ( nRows != nCols )  {     throw new InvalidMatrixException ( "LU decomposition requires that the matrix be square." ) ; }^778^^^^^763^793^[Delete]^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^lu = this.getDataRef (  ) ;^780^^^^^765^795^lu = this.getData (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu ;^780^^^^^765^795^lu = this.getData (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^780^^^^^765^795^lu = this.getData (  ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation =  new int[r];^783^^^^^768^798^permutation = new int[nRows];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[row] = row;permutation = new int[nRows];^783^^^^^768^798^permutation = new int[nRows];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[max] = permutation[col];permutation = new int[nRows];^783^^^^^768^798^permutation = new int[nRows];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = 0; row > nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = -6; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nSum = 0; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = 0; row < nRowB; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nRows = 0; row < row; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int row = 0; row < ncols; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[row] = nSum;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation[row]  =  permutation[row] ;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[col] = temp;permutation[row] = row;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[max] = permutation[col];permutation[row] = row;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation = new int[nRows];permutation[row] = row;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[row] = nRows;^785^^^^^770^800^permutation[row] = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = rowDimension; row < nRows; row++ )  {^784^^^^^769^799^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^parity = 10;^787^^^^^772^802^parity = 1;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^parity = 3;^787^^^^^772^802^parity = 1;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^parity = -parity;parity = 1;^787^^^^^772^802^parity = 1;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( Math.abs ( sum )  < largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( sum )  > trace )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( largest )  > sum )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^largest = java.lang.Math.abs(sum); max = row;^814^815^816^817^^799^829^if  ( Math.abs ( sum )  > largest )  { largest = Math.abs ( sum ) ; max = row; }^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^814^815^816^817^^799^829^if  ( Math.abs ( sum )  > largest )  { largest = Math.abs ( sum ) ; max = row; }^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^largest = Math.abs ( maxColSum ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^largest =  Math.abs ( trace ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^max = ncols;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^max =  nRows;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^largest = Math.abs ( tmp ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( Math.abs ( lu[max][col] )  > TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( subMatrixData[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( lu[max][col] )  < trace )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( TOO_SMALL[max][col] )  < lu )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( Math.max ( lu[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^lu = null; throw new org.apache.commons.math.linear.InvalidMatrixException("matrix is singular");^821^822^823^824^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  { lu = null; throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^821^822^823^824^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  { lu = null; throw new InvalidMatrixException  (" ")  ; }^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P13_Insert_Block]^if  ( this.isSingular (  )  )  {     throw new InvalidMatrixException ( "Matrix is singular." ) ; }^821^^^^^806^836^[Delete]^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu = false;^822^^^^^807^837^lu = null;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P4_Replace_Constructor]^throw throw  new InvalidMatrixException ( "matrix is not square" )   ;^823^^^^^808^838^throw new InvalidMatrixException  (" ")  ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( max <= col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( r != col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( max != ncols )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( i < nCols )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( nRows != nCols )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( lu == null )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( data != null )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( data == null )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i <= nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = temp; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( ncolsnt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < parity; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int i = 0; i < ncols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^tmp = subMatrixData[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^tmp =  lu[parity][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^det *= lu[i][i];tmp = lu[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum = lu[row][col];tmp = lu[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[max][i] = outData[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[max][i]  = null ;^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];lu[max][i] = lu[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];lu[max][i] = lu[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[col][i] = trace;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[col][i] ;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[col] = sum;lu[col][i] = tmp;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] = sum;lu[col][i] = tmp;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^tmp = outData[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^tmp =  lu[nSum][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[max][i] = solution[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[max][i] ;^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[max] = selectedRows[col];^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation[max]  = null ;^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[col] = temp;permutation[max] = permutation[col];^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[row] = row;permutation[max] = permutation[col];^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation = new int[nRows];permutation[max] = permutation[col];^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[col] = ncols;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation[col]  = null ;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[row] = row;permutation[col] = temp;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^permutation[max] = permutation[col];permutation[col] = temp;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^nRowB = -parity;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^parity  =  parity ;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^parity = 1;parity = -parity;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^int tmp = 0;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^double tmp = column;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double det = parity;double tmp = 0;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double tmp = 0;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double sum = 0;double tmp = 0;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double largest = 0d;double tmp = 0;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = nRows; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^short  temp = permutation[max];^834^^^^^819^849^int temp = permutation[max];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^int temp = selectedRows[max];^834^^^^^819^849^int temp = permutation[max];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  <=  ( int col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = 4; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = -6; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = nCol; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = 9; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = 1; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = -2; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nSum = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int col = 0; col < temp; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( ncolsnt col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( colnt i = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( rowCountnt col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( Math.abs ( sum )  == largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( tmp )  > largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( sum )  > tmp )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^max = nRowB;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^max =  parity;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( solution[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( max == col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( nRows != col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( max != rowCount )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( max = col )  {^827^^^^^812^842^if  ( max != col )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i == nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 3; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( paritynt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < nSum; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nColsnt i = 0; i < i; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^tmp =  lu[ncols][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[max][i] = subMatrixData[col][i];^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[max][i]  =  lu[max][i] ;^831^^^^^816^846^lu[max][i] = lu[col][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[col][i] = sum;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[col][i]  =  lu[col][i] ;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^tmp =  lu[nRows][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[col][i] = maxColSum;^832^^^^^817^847^lu[col][i] = tmp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation[max]  =  permutation[max] ;^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[col] = nSum;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation[col] ;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^nSum = -parity;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^double tmp = -7;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = 0; row <= col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = 1; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = 2; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nSum = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = 0; row < parity; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( rnt row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( rownt i = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int col = 0; row < row; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int rowCount = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i <= row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 8; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nSumnt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < r; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( nRowsnt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum + -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum += lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= subMatrix[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[nRowB][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];sum -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];sum -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum = lu[row][col];sum -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^bp[i][j] -= bp[col][j] * lu[i][col];sum -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum = solution[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[nSum][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];sum = lu[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];sum = lu[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];sum = lu[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum -= lu[row][i] * lu[i][col];sum = lu[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];sum = lu[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^tmp = lu[max][i];sum = lu[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum / -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= solution[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[null][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[row][col] = trace;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[row][col]  =  lu[row][col] ;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];lu[row][col] = sum;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[col][i] = tmp;lu[row][col] = sum;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[row] = sum;lu[row][col] = sum;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[col] = sum;lu[row][col] = sum;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^outData[row][col] = sum;lu[row][col] = sum;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 5; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( rownt i = 0; i < i; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum = lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  row = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = col; row <= nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = col; row == nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = ncols; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nRowB = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = col; row < nRowB; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nRowsnt row = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = nRows; row < col; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( Math.abs ( sum )  >= largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( trace )  > largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^largest =  Math.abs ( null ) ;^815^^^^^800^830^largest = Math.abs ( sum ) ;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^max =  null;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^815^816^^^^800^830^largest = Math.abs ( sum ) ; max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i <= col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = columnDimension; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nRowsnt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < r; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( colnt i = 0; i < i; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( ncolsnt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum - -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum += lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= outData[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[nRows][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];sum -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];sum -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum = lu[row][col];sum -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^bp[i][j] -= bp[col][j] * lu[i][col];sum -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum = subMatrixData[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[ncols][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum += data[row][i] * v[i];sum = lu[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];sum = lu[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];sum = lu[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum -= lu[row][i] * lu[i][col];sum = lu[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];sum = lu[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^tmp = lu[max][i];sum = lu[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum + -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum = lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= solution[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[nSum][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[row][col] ;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] /= lu[col][col];lu[row][col] = sum;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[col][i] = tmp;lu[row][col] = sum;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[row] = sum;lu[row][col] = sum;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[col] = sum;lu[row][col] = sum;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^outData[row][col] = sum;lu[row][col] = sum;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^max = temp;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = nColB; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = -3; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( paritynt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( nSumnt i = 0; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum / -= lu[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = endRow; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nRowsnt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < rowCount; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( startColumnnt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^tmp = subMatrix[max][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^tmp =  lu[rowDimension][i];^830^^^^^815^845^tmp = lu[max][i];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ^  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = col + 1; row == nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = col + i; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = nSum + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nRowB = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = col + 1; row < nSum; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int col = row + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nRows = col + 1; row < row; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int row = rowCount + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[row][col] /= subMatrixData[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[row][col] / =  lu[row][col] /;^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^bp[col][j] /= lu[col][col];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] + d;lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[max][i] = lu[col][i];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[row][0] = data[row][column];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum = lu[row][col];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^outData[col][row] = data[row][col];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum -= lu[row][i] * lu[i][col];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^out[row] = data[row][col];lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^outData[row][col] = data[row][col] * d;lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^lu[row][col] = sum;lu[row][col] /= lu[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[nRows][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^sum - -= lu[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= subMatrixData[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[rowCount][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum = solution[row][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[nSum][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[startRow][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[row][col] = maxColSum;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^max =  nSum;^816^^^^^801^831^max = row;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu = this;^822^^^^^807^837^lu = null;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^permutation[max] ;^835^^^^^820^850^permutation[max] = permutation[col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[col] = r;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^parity  = null ;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^lu[row][col] /= solution[col][col];^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[row][col] / = null ;^842^^^^^827^857^lu[row][col] /= lu[col][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^float sum = 0;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^double sum = ;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double det = parity;double sum = 0;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double sum = 0;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double tmp = 0;double sum = 0;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double largest = 0d;double sum = 0;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = rowDimension; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = -7; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^long  max = col;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^int max = ncols;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^int max = rowDimension;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ret = 7;int max = col;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^int largest = 0d;^805^^^^^790^820^double largest = 0d;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double maxColSum = 0;double largest = 0d;^805^^^^^790^820^double largest = 0d;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double tmp = 0;double largest = 0d;^805^^^^^790^820^double largest = 0d;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double sum = 0;double largest = 0d;^805^^^^^790^820^double largest = 0d;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = nRows; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = col; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^double tmp = nRowB;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 9; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ||  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = col ; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = nRows + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int row = ncols + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( Math.abs ( maxColSum )  > largest )  {^814^^^^^799^829^if  ( Math.abs ( sum )  > largest )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Math.abs ( outData[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( Math.abs ( subMatrix[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = 0; row == col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = -9; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nRowB = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = 0; row < ncols; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( startRownt row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( colnt row = 0; row < i; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( ncolsnt row = 0; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i == row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 1; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( paritynt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < nRows; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[nRows][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum = outData[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[ncols][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[nSum][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[row][col] ;^800^^^^^785^815^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 3; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = nColB; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( rowDimensionnt i = 0; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int i = 0; i < parity; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  row = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = parity; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( paritynt row = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( colnt row = i; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( rownt i = col; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i > col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = startRow; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < nSum; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[nRowB][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[parity][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum -=  lu[null][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = endColumn; i < col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i == col; i++ )  {^808^^^^^793^823^for  ( int i = 0; i < col; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = -5; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( nSumnt i = 0; i < nCols; i++ )  {^829^^^^^814^844^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  <=  ( int row = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = col + 1; row <= nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = col + nCols; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int ncols = col + 1; row < nRows; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = col + 1; row < rowDimension; row++ )  {^841^^^^^826^856^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum = subMatrixData[row][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[nRowB][col];^796^^^^^781^811^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= outData[row][i] * lu[i][col];^798^^^^^783^813^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^sum =  lu[nRows][col];^807^^^^^792^822^sum = lu[row][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^sum -= subMatrixData[row][i] * lu[i][col];^809^^^^^794^824^sum -= lu[row][i] * lu[i][col];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^lu[row][col]  =  lu[row][col] ;^811^^^^^796^826^lu[row][col] = sum;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^permutation[col] = parity;^836^^^^^821^851^permutation[col] = temp;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ncols = -parity;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^parity ;^837^^^^^822^852^parity = -parity;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  col = 0; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = i; col < nCols; col++ )  {^790^^^^^775^805^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^int sum = 0;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^double sum = 8;^792^^^^^777^807^double sum = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = -1; row < col; row++ )  {^795^^^^^780^810^for  ( int row = 0; row < col; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = j; i < row; i++ )  {^797^^^^^782^812^for  ( int i = 0; i < row; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^int max = temp;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^int max = rowCount;^804^^^^^789^819^int max = col;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = nSum; row < nRows; row++ )  {^806^^^^^791^821^for  ( int row = col; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^double tmp = endColumn;^828^^^^^813^843^double tmp = 0;^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^long  temp = permutation[max];^834^^^^^819^849^int temp = permutation[max];^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( Math.max ( solution[max][col] )  < TOO_SMALL )  {^821^^^^^806^836^if  ( Math.abs ( lu[max][col] )  < TOO_SMALL )  {^[CLASS] RealMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^res.append ( "RealMatrixImpl{RealMa" ) ;^853^^^^^851^869^res.append ( "RealMatrixImpl{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^853^^^^^851^869^res.append ( "RealMatrixImpl{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "," ) ;res.append ( "RealMatrixImpl{" ) ;^853^^^^^851^869^res.append ( "RealMatrixImpl{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "{" ) ;res.append ( "RealMatrixImpl{" ) ;^853^^^^^851^869^res.append ( "RealMatrixImpl{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( data[i][j] ) ;res.append ( "RealMatrixImpl{" ) ;^853^^^^^851^869^res.append ( "RealMatrixImpl{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "}" ) ;res.append ( "RealMatrixImpl{" ) ;^853^^^^^851^869^res.append ( "RealMatrixImpl{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( data == null )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( subMatrixData != null )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( i < data.length )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( i > 0 )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( j < data[0].length )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( j > 0 )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( data != true )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( nRows != nCols )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( lu == null )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( max != col )  {^854^^^^^851^869^if  ( data != null )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( i >= 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( i > -4 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( i > 0 ) res.append ( "" ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( parity > 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( res > 0 ) i.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( i > 0 + 1 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^res.append ( "" ) ;^857^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^857^858^^^^851^869^res.append ( "," ) ; res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "{" ) ;res.append ( "," ) ;^857^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( data[i][j] ) ;res.append ( "," ) ;^857^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "}" ) ;res.append ( "," ) ;^857^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "RealMatrixImpl{" ) ;res.append ( "," ) ;^857^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( j == 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > 2 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( nRows > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( res > 0 ) j.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( j > 0 * 1 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^res.append(",");^860^861^862^863^^851^869^if  ( j > 0 ) res.append ( "," ) ; res.append ( data[i][j] ) ; }^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^860^861^862^863^^851^869^if  ( j > 0 ) res.append ( "," ) ; res.append ( data[i][j] ) ; }^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^res.append ( "" ) ;^861^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^861^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "{" ) ;res.append ( "," ) ;^861^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( data[i][j] ) ;res.append ( "," ) ;^861^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "}" ) ;res.append ( "," ) ;^861^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "RealMatrixImpl{" ) ;res.append ( "," ) ;^861^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  i = 0; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i <= data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 3; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = columnCount; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = nSum; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = rowDimension; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = -8; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < solution.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( data.lengthnt i = 0; i < i; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( paritynt i = 0; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( i == 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( i > row ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( nSum > 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( nRows > 0L ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^857^^^^^851^869^res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( j >= 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > 9 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > 0 ) res.append ( "" ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( j > 4 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^861^862^^^^851^869^res.append ( "," ) ; res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int j = 0; j > data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = endRow; j < data[endRow].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = max; j < data[max].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( rowCountnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int j = 0; j < subMatrix[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int data[0].length = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( data[0].lengthnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int data = 0; j < j[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int nRows = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > rowCount ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( nRows > 4 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^res.append ( subMatrixData[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^res.append ( outData[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "," ) ;res.append ( data[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "{" ) ;res.append ( data[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "}" ) ;res.append ( data[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "RealMatrixImpl{" ) ;res.append ( data[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = nRows; j < data[nRows].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^858^^^^^851^869^res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "," ) ;res.append ( "{" ) ;^858^^^^^851^869^res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( data[i][j] ) ;res.append ( "{" ) ;^858^^^^^851^869^res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "}" ) ;res.append ( "{" ) ;^858^^^^^851^869^res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "RealMatrixImpl{" ) ;res.append ( "{" ) ;^858^^^^^851^869^res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^res.append ( "" ) ;^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "," ) ;res.append ( "}" ) ;^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "{" ) ;res.append ( "}" ) ;^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( data[i][j] ) ;res.append ( "}" ) ;^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "RealMatrixImpl{" ) ;res.append ( "}" ) ;^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int j = 0; j <= data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = -3; j < data[-3].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = j; j < data[j].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = ; j < data[].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int rowCount = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int j = 0; j < solution[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( rownt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j >  ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( parity > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( j > 0 >> 1 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^res.append ( solution[i][j] ) ;^862^^^^^851^869^res.append ( data[i][j] ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = -7; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = rowCount; j < data[rowCount].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^res.append ( "" ) ;^858^^^^^851^869^res.append ( "{" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( i > startRow ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( nRows > 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( i > 0 ) res .append ( null )  ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( i > 0 + 0 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > nCol ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( rowCount > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( j > 0L ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = row; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 8; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = parity; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = ; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = startRow; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nSumnt i = 0; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < nRows; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < subMatrix.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < data.length.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int i = 0; i < outData.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( i > nCol ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( i > 0 - 4 ) res.append ( "," ) ;^856^857^^^^851^869^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > 6 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( r > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = -2; j < data[-2].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = r; j < data[r].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nSumnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int j = 0; j < outData[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( datant j = 0; j < i[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > -7 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( rowDimension > 0 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( j > 1 ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = nCols; j < data[nCols].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^res .append ( null )  ;^864^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = -7; j < data[-7].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = -8; j < data[-8].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nSum = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( ncolsnt j = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( jnt i = 0; j < data[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int j = 0; j < subMatrixData[0].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( j > r ) res.append ( "," ) ;^860^861^^^^851^869^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  i = 0; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 6; i < data.length; i++ )  {^855^^^^^851^869^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int j = 8; j < data[8].length; j++ )  {^859^^^^^851^869^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^res.append ( "" ) ;^867^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^867^868^^^^851^869^res.append ( "}" ) ; return res.toString (  ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "," ) ;res.append ( "}" ) ;^867^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "{" ) ;res.append ( "}" ) ;^867^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( data[i][j] ) ;res.append ( "}" ) ;^867^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^res.append ( "RealMatrixImpl{" ) ;res.append ( "}" ) ;^867^^^^^851^869^res.append ( "}" ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^return res.append (  ) ;^868^^^^^851^869^return res.toString (  ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^868^^^^^851^869^return res.toString (  ) ;^[CLASS] RealMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( object != this  )  {^881^^^^^880^902^if  ( object == this  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^return true;^881^882^883^^^880^902^if  ( object == this  )  { return true; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^881^882^883^^^880^902^if  ( object == this  )  { return true; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return false;^882^^^^^880^902^return true;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( object instanceof RealMatrixImpl != false )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( object  &  RealMatrixImpl == false )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^if  ( object instanceof RealMatrixImpl == true )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( object instanceof RealMatrixImpl )  {^884^^^^^880^902^if  ( object instanceof RealMatrixImpl == false )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^return false;^884^885^886^^^880^902^if  ( object instanceof RealMatrixImpl == false )  { return false; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^884^885^886^^^880^902^if  ( object instanceof RealMatrixImpl == false )  { return false; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return true;^885^^^^^880^902^return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^RealMatrixImpl out = new RealMatrixImpl ( nCols, nRows ) ;RealMatrix m =  ( RealMatrix )  object;^887^^^^^880^902^RealMatrix m =  ( RealMatrix )  object;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^RealMatrix bMatrix = new RealMatrixImpl ( b ) ;RealMatrix m =  ( RealMatrix )  object;^887^^^^^880^902^RealMatrix m =  ( RealMatrix )  object;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^RealMatrixImpl outMat = new RealMatrixImpl ( bp ) ;RealMatrix m =  ( RealMatrix )  object;^887^^^^^880^902^RealMatrix m =  ( RealMatrix )  object;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^long  nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nRows = getColumnDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = getRowDimension (  ) ;^888^^^^^880^902^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^long  nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nCols = getRowDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCols = getColumnDimension (  ) ; }^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( rowDimension <= 0 || columnDimension <= 0 )  { int nCols = getColumnDimension (  ) ; }^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^889^^^^^880^902^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( m.getColumnDimension (  )  != nCols && m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( m.getColumnDimension (  )  == nCols || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  == nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( m.getColumnDimension (  )  != nSum || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( nCols.getColumnDimension (  )  != m || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( m.getColumnDimension (  )  != nRows || m.getRowDimension (  )  != nCols )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  ( m.getColumnDimension (  )  != nCols ) {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P6_Replace_Expression]^if  (  m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( m.multiply (  )  != nCols || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( m.getColumnDimension (  )  != nCols || m.multiply (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( m.getColumnDimension (  )  != nCols || m .getColumnDimension (  )   != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( m.getColumnDimension (  )  != temp ) {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^return false;^890^891^892^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  { return false; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^890^891^892^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  { return false; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return true;^891^^^^^880^902^return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( m .getRowDimension (  )   != nCols || m.getRowDimension (  )  != nRows )  {^890^^^^^880^902^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( Double.doubleToLongBits ( data[row][col] )  == Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( ncols, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, nRows )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( solution[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry (  col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( col, row )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( col.getEntry ( row, m )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( row[row][col] )  != Double.doubleToLongBits ( m.getEntry ( data, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, ncols )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^return false;^895^896^897^898^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  { return false; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^895^896^897^898^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  { return false; }^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return true;^897^^^^^880^902^return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  row = 0; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = 0; row == nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = -2; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = 6; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nRows = 0; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = 0; row < nSum; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int nSum = 0; row < nRows; row++ )  {^893^^^^^880^902^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, parity )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( subMatrixData[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( row.getEntry ( m, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, temp )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  col = 0; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = endColumn; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int ncols = 0; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int col = 0; col < ncols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int col = 0; col < startRow; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( Double.doubleToLongBits ( data[row][col] )  < Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( nRows, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( outData[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( col[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, data )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry (  col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( row )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( col.getEntry ( row, m )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( col, row )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^Double.doubleToLongBits ( m.getEntry ( row, ncols )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^896^897^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  { return false;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( r, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( row, r )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^Double.doubleToLongBits ( m.getEntry ( ncols, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  col = 0; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = -7; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( nSum, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( rowCount, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( row, nRows )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^Double.doubleToLongBits ( m.getEntry ( nRowB, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( nSum, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^Double.doubleToLongBits ( m .getRowDimension (  )   )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = -5; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nSum = 0; col < nCols; col++ )  {^894^^^^^880^902^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( parity, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( m[row][col] )  != Double.doubleToLongBits ( data.getEntry ( row, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m .getRowDimension (  )   )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( rowCount, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( nRows, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( row, nSum )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( row.getEntry ( m, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( nRowB, col )  )  )  {^895^896^^^^880^902^if  ( Double.doubleToLongBits ( data[row][col] )  != Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^Double.doubleToLongBits ( m.getEntry ( rowDimension, col )  )  )  {^896^^^^^880^902^Double.doubleToLongBits ( m.getEntry ( row, col )  )  )  {^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return false;^901^^^^^880^902^return true;^[CLASS] RealMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  RealMatrix  m  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^short  ret = 7;^910^^^^^909^922^int ret = 7;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^int ret = temp;^910^^^^^909^922^int ret = 7;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int max = col;int ret = 7;^910^^^^^909^922^int ret = 7;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^long  nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nRows = getColumnDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = getRowDimension (  ) ;^911^^^^^909^922^int nRows = getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^short  nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nCols = getRowDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = getColumnDimension (  ) ;^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCols = getColumnDimension (  ) ; }^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( rowDimension <= 0 || columnDimension <= 0 )  { int nCols = getColumnDimension (  ) ; }^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^912^^^^^909^922^int nCols = getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret - 31 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * temp + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nSum * 31 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 + nRowB;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nRows * 31 + ret;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^ret = ret * 12 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^ret = ret * 31 + nCols;ret = ret * 31 + nRows;^913^^^^^909^922^ret = ret * 31 + nRows;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret + 31 + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * nColB + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nRows * 31 + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 + nRows;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nCols * 31 + ret;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^ret = ret * 31 >> 0 + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^ret = ret * 31 + nRows;ret = ret * 31 + nCols;^914^^^^^909^922^ret = ret * 31 + nCols;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  !=  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ||  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  &  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  <  ( int row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = rowDimension; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = ; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int ncols = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int row = 0; row < nSum; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int row = 0; row < ncols; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  !=  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  <<  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  <  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  >>  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = parity; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nSum = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int col = 0; col < ncols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int nCols = 0; col < col; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int parity = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  >=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret / 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret - = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  !=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  &&  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret / = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  |  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 29 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( 8 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  7 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )   *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nRows * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( nSum+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( parity+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( subMatrixData[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = row * 31 +  ( 11 *  ( ret+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = col * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ret+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = data * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( ret[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^ret = ret * 31 * 4 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^MathUtils.hash ( outData[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^MathUtils.hash ( solution[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^sum += Math.abs ( data[row][col] ) ;MathUtils.hash ( data[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  <=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret + 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  <<  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  ^  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( 12 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 3nColB +  ( nColBnColB *  ( row+nColB )  + nColB7 *  ( col+nColB )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 3max +  ( maxmax *  ( row+max )  + max7 *  ( col+max )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nSum * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( r+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( col+1 )  + 17 *  ( row+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^ret = ret * 0 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = columnDimension; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^MathUtils.hash ( subMatrixData[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for   instanceof   ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ||  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  |  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ^  ( int col = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = nRowB; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int startRow = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int col = 0; col < nSum; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^for  ( int nRows = 0; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret * 31 +  ||  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret + = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 37 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( rowCount *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 3column +  ( columncolumn *  ( row+column )  + column7 *  ( col+column )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + nRows *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( outData[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( data+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( row[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^ret = ret * 7 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^ret = ret - 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * column +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 31 +  ( 14 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^ret = ret * 3 +  (  *  ( row+ )  + 7 *  ( col+ )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = nRowB * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( nRows+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ncols+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( subMatrix[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^ret = ret * 31L +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^917^918^^^^909^922^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  long  row = 0; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int row = 6; row < nRows; row++ )  {^915^^^^^909^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int col = col; col < nCols; col++ )  {^916^^^^^909^922^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^MathUtils.hash ( subMatrix[row][col] ) ;^918^^^^^909^922^MathUtils.hash ( data[row][col] ) ;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return nSum;^921^^^^^909^922^return ret;^[CLASS] RealMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return MatrixUtils.createRealIdentityMatrix ( r ) ;^935^^^^^934^936^return MatrixUtils.createRealIdentityMatrix ( dimension ) ;^[CLASS] RealMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^return MatrixUtils.createRealIdentityMatrix ( nRows ) ;^935^^^^^934^936^return MatrixUtils.createRealIdentityMatrix ( dimension ) ;^[CLASS] RealMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^return MatrixUtils.createRealIdentityMatrix ( row ) ;^935^^^^^934^936^return MatrixUtils.createRealIdentityMatrix ( dimension ) ;^[CLASS] RealMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^935^^^^^934^936^return MatrixUtils.createRealIdentityMatrix ( dimension ) ;^[CLASS] RealMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] RealMatrix   int dimension [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^if  ( lu != null )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^if  ( outData == null )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^if  ( outData == this )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( data != null )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( max != col )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P9_Replace_Statement]^if  ( data == null )  {^966^^^^^965^970^if  ( lu == null )  {^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P15_Unwrap_Block]^luDecompose();^966^967^968^^^965^970^if  ( lu == null )  { luDecompose (  ) ; }^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P16_Remove_Block]^^966^967^968^^^965^970^if  ( lu == null )  { luDecompose (  ) ; }^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^copyOut (  ) ;^967^^^^^965^970^luDecompose (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^967^^^^^965^970^luDecompose (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^return copyOut (  ) ;luDecompose (  ) ;^967^^^^^965^970^luDecompose (  ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P4_Replace_Constructor]^return return  new RealMatrixImpl ( outData )  ;^969^^^^^965^970^return new RealMatrixImpl ( lu ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return new RealMatrixImpl ( subMatrixData ) ;^969^^^^^965^970^return new RealMatrixImpl ( lu ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^return  new RealMatrixImpl ( outData )  ;^969^^^^^965^970^return new RealMatrixImpl ( lu ) ;^[CLASS] RealMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] RealMatrix   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^System.arraycopy ( permutation, -1, out, -1, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^System.arraycopy ( permutation, -8, out, -8, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( permutation, 0, selectedRows, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( selectedRows, 0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( permutation, 0, out, 0, r ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( permutation, 0,  0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy (  0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( permutation, 0, out, 0 ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( out, 0, permutation, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( permutation.length, 0, out, 0, permutation ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out, 0, ncols ) ;System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^986^^^^^984^988^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return selectedRows;^987^^^^^984^988^return out;^[CLASS] RealMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^998^^^^^997^1005^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^double[][] out = new double[nRows][this.getRowDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] out = new double[1][ncols];double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] outData = new double[rowCount][columnCount];double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] bp = new double[nRowB][nColB];double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][1];double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] outData = new double[nRows][nCols];double[][] out = new double[nRows][this.getColumnDimension (  ) ];^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^999^^^^^997^1005^double[][] out = new double[nRows][this.getColumnDimension (  ) ];^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^for  (  short  i = 0; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^for  ( int i = 0; i == nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = column; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 9; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = 5; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( nRowsnt i = 0; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^for  ( int i = 0; i < ncols; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^System.arraycopy ( data[i], 5, out[i], 5, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( data[i], 0, subMatrixData[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( subMatrixData[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( data[i], 0[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( data[i], 0, out[i], 0[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( out[i], 0, data[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( data[row], 0, out, 0, ncols ) ;System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^for  ( int i = -3; i < nRows; i++ )  {^1001^^^^^997^1005^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^System.arraycopy ( data[i], -6, out[i], -6, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( data[i], 0, subMatrix[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( solution[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( data[i].length[i], 0, out[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^System.arraycopy ( data[i], 0, data[i].length[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^System.arraycopy ( data[i], 0, solution[i], 0, data[i].length ) ;^1002^^^^^997^1005^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return subMatrixData;^1004^^^^^997^1005^return out;^[CLASS] RealMatrixImpl  [METHOD] copyOut [RETURN_TYPE] double[][]   [VARIABLES] double[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^setSubMatrix ( in,-8,-8 ) ;^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^setSubMatrix ( in,-1,-1 ) ;^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^setSubMatrix ( subMatrixData,0,0 ) ;^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^1018^^^^^1017^1019^setSubMatrix ( in,0,0 ) ;^[CLASS] RealMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^short  nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nRows = this.getColumnDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nRows = this.getRowDimension (  ) ; }^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^1029^1030^^^^1028^1033^int nRows = this.getRowDimension (  ) ; int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^( this.getRowDimension (  )  )  ) ;int nRows = this.getRowDimension (  ) ;^1029^^^^^1028^1033^int nRows = this.getRowDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P1_Replace_Type]^short  nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P7_Replace_Invocation]^int nCols = this.getRowDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCol = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int columnCount = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nColB = b.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRowB = b.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^double[][] out = new double[nRows][this.getColumnDimension (  ) ];int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int rowCount = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int ncols = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nRows = this.getRowDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nSum = this.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P11_Insert_Donor_Statement]^int nCols = m.getColumnDimension (  ) ;int nCols = this.getColumnDimension (  ) ;^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P12_Insert_Condition]^if  ( v.length != this.getColumnDimension (  )  )  { int nCols = this.getColumnDimension (  ) ; }^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P14_Delete_Statement]^^1030^^^^^1028^1033^int nCols = this.getColumnDimension (  ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row < 0 && row > nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row == 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row < 0 || row < nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row < 0 || row > nRows  <  1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row < 0 || row > nRows - 1 || col <= 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row < 0 || row >= nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P2_Replace_Operator]^return ! ( row < 0 || row > nRows  <=  1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return ! ( row < -6 || row > nRows - 1 || col < -6 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return ! ( row < 0 || row > nRows  || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P3_Replace_Literal]^return ! ( row < 4 || row > nRows - 1 || col < 4 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( ncols < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( row < 0 || row > ncols - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( row < 0 || row > nRows - 1 || nSum < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > ncols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( col < 0 || row > nRows - 1 || row < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( nRows < 0 || row > row - 1 || col < 0 || col > nCols -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( row < 0 || row > nRows - 1 || nCols < 0 || col > col -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P5_Replace_Variable]^return ! ( nCols < 0 || row > nRows - 1 || col < 0 || col > row -1 ) ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
[P8_Replace_Mix]^return false ;^1032^^^^^1028^1033^return ! ( row < 0 || row > nRows - 1 || col < 0 || col > nCols -1 ) ;^[CLASS] RealMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] double[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  int[]  out  permutation  selectedColumns  selectedRows  boolean  double  TOO_SMALL  d  det  largest  maxColSum  sum  tmp  trace  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  parity  r  ret  row  rowCount  rowDimension  startColumn  startRow  temp  
