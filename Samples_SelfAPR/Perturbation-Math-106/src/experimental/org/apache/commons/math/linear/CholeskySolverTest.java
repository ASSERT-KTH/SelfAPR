[P3_Replace_Literal]^private double[][] m6 = {{6}};^34^^^^^29^39^private double[][] m1 = {{1}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m1  = null ;^34^^^^^29^39^private double[][] m1 = {{1}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P1_Replace_Type]^private int m1Det = 1.0d;^35^^^^^30^40^private double m1Det = 1.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double m1Det = 2.0f;^35^^^^^30^40^private double m1Det = 1.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m2 = {{6, 0} , {0, 2}};^37^38^^^^37^38^private double[][] m2 = {{1, 0} , {0, 2}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m2 = {{1, -1} , {-1, 2}};^37^38^^^^37^38^private double[][] m2 = {{1, 0} , {0, 2}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m2 = {{1, -4} , {-4, 2}};^37^38^^^^37^38^private double[][] m2 = {{1, 0} , {0, 2}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m-7 = {{1, 0} , {0, -7}};^37^38^^^^37^38^private double[][] m2 = {{1, 0} , {0, 2}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m2  = null ;^37^38^^^^37^38^private double[][] m2 = {{1, 0} , {0, 2}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P1_Replace_Type]^private int m2Det = 2.0d;^39^^^^^34^44^private double m2Det = 2.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double m2Det = 0.2857142857142857d;^39^^^^^34^44^private double m2Det = 2.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double m2Det = 4.0f;^39^^^^^34^44^private double m2Det = 2.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m3 = {{4, 0, 0}, {0, 2, 0}, {0, 0, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m3 = {{1, 8, 8}, {8, 2, 8}, {8, 8, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m3 = {{1, this, this}, {this, 2, this}, {this, this, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m3 = {{1, 0, 0}, {0, this, 0}, {0, 0, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m3 = {{1, -9, -9}, {-9, 2, -9}, {-9, -9, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m3 = {{1, 1, 1}, {1, 2, 1}, {1, 1, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m3 = {{2, 0, 0}, {0, 2, 0}, {0, 0, 3}};^41^42^43^^^41^43^private double[][] m3 = {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P1_Replace_Type]^private int m3Det = 6.0d;^44^^^^^39^49^private double m3Det = 6.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double m3Det = 1.2d;^44^^^^^39^49^private double m3Det = 6.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double m3Det  = null ;^44^^^^^39^49^private double m3Det = 6.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, -7, -7}, {2, 3, -7}, {4, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, 4, 4}, {2, 3, 4}, {4, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, 0, 0}, {-6, 3, 0}, {4, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, 0, 0}, {2, 11, 0}, {4, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, -9, -9}, {2, 3, -9}, {4, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m8 = {{1, 0, 0}, {2, 3, 0}, {8, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 2, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 3}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m4 = {{1 - 2, 0, 0}, {2, 3, 0}, {4, 5, 6}};^46^47^48^^^46^48^private double[][] m4 = {{1, 0, 0}, {2, 3, 0}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P1_Replace_Type]^private int m4Det = 18.0d;^49^^^^^44^54^private double m4Det = 18.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double m4Det = 108.0d;^49^^^^^44^54^private double m4Det = 18.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double m4Det ;^49^^^^^44^54^private double m4Det = 18.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 0,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 00,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  8,  8,  8,  8}, {-2,  3,  8,  8,  8}, { 4, -5,  6,  8,  8}, { 7,  8, -9, 18,  8},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  1,  1,  1,  1}, {-2,  3,  1,  1,  1}, { 4, -5,  6,  1,  1}, { 7,  8, -9, 11,  1},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  2,  2,  2,  2}, {-2,  3,  2,  2,  2}, { 4, -5,  6,  2,  2}, { 7,  8, -9, 12,  2},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  -3,  -3,  -3,  -3}, {-2,  3,  -3,  -3,  -3}, { 4, -5,  6,  -3,  -3}, { 7,  8, -9, 1-3,  -3},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  7,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  7,  7,  7,  7}, {-2,  3,  7,  7,  7}, { 4, -5,  6,  7,  7}, { 7,  8, -9, 17,  7},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 0, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -6,  6,  0,  0}, { 7,  8, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  13,  0,  0}, { 7,  8, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  -5,  -5,  -5,  -5}, {-2,  3,  -5,  -5,  -5}, { 4, -5,  6,  -5,  -5}, { 7,  8, -9, 1-5,  -5},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  -8,  -8,  -8,  -8}, {-2,  3,  -8,  -8,  -8}, { 4, -5,  6,  -8,  -8}, { 7,  8, -9, 1-8,  -8},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 1,  8, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  2, -9, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -2, 10,  0},^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m5  = null ;^51^52^53^54^^51^55^private double[][] m5 = {{ 1,  0,  0,  0,  0}, {-2,  3,  0,  0,  0}, { 4, -5,  6,  0,  0}, { 7,  8, -9, 10,  0},^[CLASS] CholeskySolverTest   [VARIABLES] 
[P1_Replace_Type]^private int m5Det = 2700.0d;^56^^^^^51^61^private double m5Det = 2700.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double m5Det = 5400.0d;^56^^^^^51^61^private double m5Det = 2700.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double m5Det ;^56^^^^^51^61^private double m5Det = 2700.0d;^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{-7, 0,  0}, {2, 0,  0}, {4, 5,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{1, 4,  4}, {2, 4,  4}, {4, 5,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{1, -2,  -2}, {2, -2,  -2}, {4, 5,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{1, -5,  -5}, {2, -5,  -5}, {4, 5,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {8, 5,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, -1,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m5 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  5}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m6 = {{0, 0,  0}, {2, 0,  0}, {4, 5,  6}};^59^60^61^^^59^61^private double[][] m6 = {{1, 0,  0}, {2, 0,  0}, {4, 5,  6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m7 = {{5, 2, 3}, {4, 5, 6}};^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m7 = {{1, -3, 3}, {4, 5, 6}};^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m7 = {{1, 2, -4}, {4, 5, 6}};^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m7 = {{1, 2, 3}, {0, 5, 6}};^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m7 = {{1, 2, 3}, {4, 13, 6}};^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P3_Replace_Literal]^private double[][] m7 = {{1, 2, 3}, {4, 5, 7}};^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P8_Replace_Mix]^private double[][] m7  = null ;^63^64^^^^63^64^private double[][] m7 = {{1, 2, 3}, {4, 5, 6}};^[CLASS] CholeskySolverTest   [VARIABLES] 
[P14_Delete_Statement]^^70^^^^^69^71^super ( nameOfTest ) ;^[CLASS] CholeskySolverTest  [METHOD] <init> [RETURN_TYPE] String)   String nameOfTest [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  String  nameOfTest  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  
[P7_Replace_Invocation]^super.fail (  ) ;^75^^^^^73^76^super.setUp (  ) ;^[CLASS] CholeskySolverTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P14_Delete_Statement]^^75^^^^^73^76^super.setUp (  ) ;^[CLASS] CholeskySolverTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P11_Insert_Donor_Statement]^super.tearDown (  ) ;super.setUp (  ) ;^75^^^^^73^76^super.setUp (  ) ;^[CLASS] CholeskySolverTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P7_Replace_Invocation]^super.fail (  ) ;^81^^^^^79^82^super.tearDown (  ) ;^[CLASS] CholeskySolverTest  [METHOD] tearDown [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P14_Delete_Statement]^^81^^^^^79^82^super.tearDown (  ) ;^[CLASS] CholeskySolverTest  [METHOD] tearDown [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P11_Insert_Donor_Statement]^super.setUp (  ) ;super.tearDown (  ) ;^81^^^^^79^82^super.tearDown (  ) ;^[CLASS] CholeskySolverTest  [METHOD] tearDown [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P11_Insert_Donor_Statement]^solver.getDeterminant (  ) ;super.tearDown (  ) ;^81^^^^^79^82^super.tearDown (  ) ;^[CLASS] CholeskySolverTest  [METHOD] tearDown [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  double  m1Det  m2Det  m3Det  m4Det  m5Det  boolean  
[P3_Replace_Literal]^suite.setName ( "Solve" ) ;^86^^^^^84^88^suite.setName ( "CholeskySolver Tests" ) ;^[CLASS] CholeskySolverTest  [METHOD] suite [RETURN_TYPE] Test   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  boolean  TestSuite  suite  double  m1Det  m2Det  m3Det  m4Det  m5Det  
[P14_Delete_Statement]^^86^87^^^^84^88^suite.setName ( "CholeskySolver Tests" ) ; return suite;^[CLASS] CholeskySolverTest  [METHOD] suite [RETURN_TYPE] Test   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  boolean  TestSuite  suite  double  m1Det  m2Det  m3Det  m4Det  m5Det  
[P11_Insert_Donor_Statement]^runner.doRun ( CholeskySolverTest.suite (  )  ) ;suite.setName ( "CholeskySolver Tests" ) ;^86^^^^^84^88^suite.setName ( "CholeskySolver Tests" ) ;^[CLASS] CholeskySolverTest  [METHOD] suite [RETURN_TYPE] Test   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  boolean  TestSuite  suite  double  m1Det  m2Det  m3Det  m4Det  m5Det  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^95^^^^^94^107^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^95^^^^^94^107^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P1_Replace_Type]^int numericalZero = 77.77d;^96^^^^^94^107^double numericalZero = 77.77d;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^double numericalZero = 699.93d;^96^^^^^94^107^double numericalZero = 77.77d;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^solver.setNumericalZero ( m5Det ) ;^97^^^^^94^107^solver.setNumericalZero ( numericalZero ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^solver.solve ( numericalZero ) ;^97^^^^^94^107^solver.setNumericalZero ( numericalZero ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^solver.solve ( m5Det ) ;^97^^^^^94^107^solver.setNumericalZero ( numericalZero ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^97^^^^^94^107^solver.setNumericalZero ( numericalZero ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;solver.setNumericalZero ( numericalZero ) ;^97^^^^^94^107^solver.setNumericalZero ( numericalZero ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^assertEquals ( solver.getNumericalZero (  ) , m5Det, 0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^assertEquals ( solver.getNumericalZero (  ) ,  0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^assertEquals ( numericalZero.getNumericalZero (  ) , solver, 0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^assertEquals ( solver.setNumericalZero (  ) , numericalZero, 0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^assertEquals ( solver .setNumericalZero ( m4Det )  , numericalZero, 0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^solver.setNumericalZero ( numericalZero ) ;assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^98^^^^^94^107^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^new RealMatrixImpl ( new double[][]{{numericalZero/4, 0}, {0, numericalZero/4}} )  ) ;^102^103^^^^94^107^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^new RealMatrixImpl ( new double[][]{{numericalZero/2, }, {, numericalZero/2}} )  ) ;^102^103^^^^94^107^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^new RealMatrixImpl ( new double[][]{{numericalZero/11, 0}, {0, numericalZero/11}} )  ) ;^102^103^^^^94^107^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, m5Det/2}} )  ) ;^102^103^^^^94^107^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/-1, 0}, {0, numericalZero/-1}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, -8}, {-8, numericalZero/2}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, -7}, {-7, numericalZero/2}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/, 0}, {0, numericalZero/}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0/2}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, m5Det/2}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "testing numericalZerotes" ) ;^104^^^^^94^107^fail ( "testing numericalZero" ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^104^^^^^94^107^fail ( "testing numericalZero" ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;fail ( "testing numericalZero" ) ;^104^^^^^94^107^fail ( "testing numericalZero" ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^new RealMatrixImpl ( new double[][]{{numericalZero/2, 9}, {9, numericalZero/2}} )  ) ;^102^103^^^^94^107^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^new RealMatrixImpl ( new double[][]{{numericalZero/2, 4}, {4, numericalZero/2}} )  ) ;^102^103^^^^94^107^new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/0, 0}, {0, numericalZero/0}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 9}, {9, numericalZero/2}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, -2}, {-2, numericalZero/2}} )  ) ;^101^102^103^^^94^107^solver.decompose ( new RealMatrixImpl ( new double[][]{{numericalZero/2, 0}, {0, numericalZero/2}} )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "icalZeresting numericalZero" ) ;^104^^^^^94^107^fail ( "testing numericalZero" ) ;^[CLASS] CholeskySolverTest  [METHOD] testNumericalZero [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testDecompose ( m1, "Deco" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testDecompose ( m7, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^116^117^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ; testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testDecompose ( m1, "Decomposing matrix m1" ) ;^116^^^^^113^135^testDecompose ( m1, "Decomposing matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testDecompose ( m2, "Decomposing matrix m2ng" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testDecompose ( m7, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^117^118^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ; testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testDecompose ( m2, "Decomposing matrix m2" ) ;^117^^^^^113^135^testDecompose ( m2, "Decomposing matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testDecompose ( m3, "mecomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testDecompose ( m7, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^CholeskySolverTest ( m7, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testDecompose ( m3, "Decomposing matrix m3" ) ;^118^^^^^113^135^testDecompose ( m3, "Decomposing matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testDecompose ( m6, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^CholeskySolverTest ( m5, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^119^120^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ; testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testDecompose ( m4, "Decomposing matrix m4" ) ;^119^^^^^113^135^testDecompose ( m4, "Decomposing matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testDecompose ( m5, "D" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testDecompose ( m7, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testDecompose ( m5, "Decomposing matrix m5" ) ;^120^^^^^113^135^testDecompose ( m5, "Decomposing matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testDecompose ( m6, "eecomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testDecompose ( m4, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^CholeskySolverTest ( m5, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^125^126^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ; fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testDecompose ( m6, "Decomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "Decomp" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m3[3x3], v[4]" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^solver.decompose ( pdMatrix ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;fail ( "Decomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testDecompose ( m6, "omposing matriecomposing matrix m6" ) ;^125^^^^^113^135^testDecompose ( m6, "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "mecomposing matrix m6" ) ;^126^^^^^113^135^fail ( "Decomposing matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^130^^^^^113^135^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^solver.decompose ( solver.decompose (  new RealMatrixImpl ( solver.solve ( c )  )   ) ;^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^solver.decompose ( new RealMatrixImpl ( m5 )  ) ;^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^solver.decompose ( new RealMatrixImpl ( m6 )  ) ;^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^130^^^^^113^135^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^solver .getDecomposition (  )  ;^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^solver.decompose ( pdMatrix ) ;solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "Decomposing matrix m7Decompos" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m3[3x3], v[4]" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^solver.decompose ( pdMatrix ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;fail ( "Decomposing matrix m7" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^solver.decompose ( new RealMatrixImpl ( m4 )  ) ;^131^^^^^113^135^solver.decompose ( new RealMatrixImpl ( m7 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "Decomposi" ) ;^132^^^^^113^135^fail ( "Decomposing matrix m7" ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^145^^^^^141^170^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^145^^^^^141^170^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new double[] {1,-4,3} ) ;^146^^^^^141^170^solver.solve ( new double[] {1,2,3} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new double[] {1,2,-1} ) ;^146^^^^^141^170^solver.solve ( new double[] {1,2,3} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^146^147^^^^141^170^solver.solve ( new double[] {1,2,3} ) ; fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "solving a liniar equitation with a missing matrix should faillvi" ) ;^147^^^^^141^170^fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^147^^^^^141^170^fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Calculating determinant of missing matrix should fail" ) ;fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^147^^^^^141^170^fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new double[] {4,2,3} ) ;^146^^^^^141^170^solver.solve ( new double[] {1,2,3} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "olving a liniar equitation with a missiolving a liniar equitation with a missing matrix should fail" ) ;^147^^^^^141^170^fail ( "solving a liniar equitation with a missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testSolve ( m1, "S" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m7, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^CholeskySolverTest ( m6, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testSolve ( m1, "Solving matrix m1" ) ;^151^^^^^141^170^testSolve ( m1, "Solving matrix m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testSolve ( m2, "m" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m7, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^152^153^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ; testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testSolve ( m2, "Solving matrix m2" ) ;^152^^^^^141^170^testSolve ( m2, "Solving matrix m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testSolve ( m3, "ving molving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m5, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^153^154^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ; testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testSolve ( m3, "Solving matrix m3" ) ;^153^^^^^141^170^testSolve ( m3, "Solving matrix m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m7, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testSolve ( m4, "Solving matrix m4" ) ;^154^^^^^141^170^testSolve ( m4, "Solving matrix m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testSolve ( m5, "Solving matrix m5i" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m7, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testSolve ( m5, "Solving matrix m5" ) ;^155^^^^^141^170^testSolve ( m5, "Solving matrix m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testSolve ( m6, "atrolving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m7, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^CholeskySolverTest ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^CholeskySolverTest ( m7, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m6, "Decomposing matrix m6" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m5, "Decomposing matrix m5" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m4, "Decomposing matrix m4" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m3, "Decomposing matrix m3" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m2, "Decomposing matrix m2" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testDecompose ( m1, "Decomposing matrix m1" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;testSolve ( m6, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "Solving matrix m6rix " ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m3[3x3], v[4]" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "testing numericalZero" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m1, "Solving matrix m1" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m4, "Solving matrix m4" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m6, "Solving matrix m6" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m2, "Solving matrix m2" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m5, "Solving matrix m5" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^testSolve ( m3, "Solving matrix m3" ) ;fail ( "Solving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^testSolve ( m6, "nolving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^testSolve ( m4, "Solving matrix m6" ) ;^160^^^^^141^170^testSolve ( m6, "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "maolving matrix m6" ) ;^161^^^^^141^170^fail ( "Solving matrix m6" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^165^^^^^141^170^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^solver.solve ( solver.solve (  new RealMatrixImpl ( solver.solve ( c )  )  , new double[] {1, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P5_Replace_Variable]^solver.solve ( new RealMatrixImpl ( m5 ) , new double[] {1, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^solver.solve ( new RealMatrixImpl ( m6 ) , new double[] {1, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^165^^^^^141^170^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {7, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 11, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 9} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P7_Replace_Invocation]^solver .solve ( 1 )  ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P8_Replace_Mix]^solver.solve ( new RealMatrixImpl ( m7 ) , new double[] {1, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^166^167^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ; fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^solver.solve ( new double[] {1,2,3} ) ;solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "Solving matrix m3[3x3], v[4]Solving matrix m3" ) ;^167^^^^^141^170^fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P14_Delete_Statement]^^167^^^^^141^170^fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;fail ( "Solving matrix m3[3x3], v[4]" ) ;^167^^^^^141^170^fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Solving matrix m6" ) ;fail ( "Solving matrix m3[3x3], v[4]" ) ;^167^^^^^141^170^fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;fail ( "Solving matrix m3[3x3], v[4]" ) ;^167^^^^^141^170^fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {3, 2, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 8, 3, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m-5 ) , new double[] {1, 2, -5, 4} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 1} ) ;^166^^^^^141^170^solver.solve ( new RealMatrixImpl ( m3 ) , new double[] {1, 2, 3, 4} ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P3_Replace_Literal]^fail ( "Solving matrix m3[3x3], v[4] m3[" ) ;^167^^^^^141^170^fail ( "Solving matrix m3[3x3], v[4]" ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  IllegalArgumentException  e  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^180^^^^^176^191^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^180^^^^^176^191^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^solver.solve (  ) ;^181^^^^^176^191^solver.getDeterminant (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^181^^^^^176^191^solver.getDeterminant (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^super.tearDown (  ) ;solver.getDeterminant (  ) ;^181^^^^^176^191^solver.getDeterminant (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^fail ( "lating deter" ) ;^182^^^^^176^191^fail ( "Calculating determinant of missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^182^^^^^176^191^fail ( "Calculating determinant of missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^fail ( "solving a liniar equitation with a missing matrix should fail" ) ;fail ( "Calculating determinant of missing matrix should fail" ) ;^182^^^^^176^191^fail ( "Calculating determinant of missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^solver .getNumericalZero (  )  ;^181^^^^^176^191^solver.getDeterminant (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^fail ( "Calculating determinant of missing matrix should failalcul" ) ;^182^^^^^176^191^fail ( "Calculating determinant of missing matrix should fail" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^testGetDeterminant ( m1, m1Det, "t" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m7, m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m1, numericalZero, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant (  m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m1,  "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m1Det, m1, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^CholeskySolverTest ( m1, m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^186^^^^^176^191^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^testGetDeterminant ( m2, m2Det, "ating dealculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m7, m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m2, numericalZero, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant (  m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m2,  "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m2Det, m2, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^CholeskySolverTest ( m2, m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^187^188^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ; testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^187^^^^^176^191^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3ermina" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m7, m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m3, numericalZero, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant (  m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m3,  "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m3Det, m3, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^CholeskySolverTest ( m3, m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P8_Replace_Mix]^testGetDeterminant ( m3, m5Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^188^^^^^176^191^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^testGetDeterminant ( m4, m4Det, " determinantalculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m7, m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m4, m5Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant (  m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m4,  "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m4Det, m4, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^CholeskySolverTest ( m4, m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P8_Replace_Mix]^CholeskySolverTest ( m4, numericalZero, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^189^^^^^176^191^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P3_Replace_Literal]^testGetDeterminant ( m5, m5Det, "determinant of malculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m7, m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m5, m4Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant (  m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m5,  "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^testGetDeterminant ( m5Det, m5, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^CholeskySolverTest ( m5, m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m1, m1Det, "Calculating determinant of m1" ) ;testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m2, m2Det, "Calculating determinant of m2" ) ;testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m3, m3Det, "Calculating determinant of m3" ) ;testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^testGetDeterminant ( m4, m4Det, "Calculating determinant of m4" ) ;testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^190^^^^^176^191^testGetDeterminant ( m5, m5Det, "Calculating determinant of m5" ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   [VARIABLES] double[][]  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  IllegalStateException  e  boolean  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P4_Replace_Constructor]^RealMatrix triangularMatrix = RealMatrix triangularMatrix =  new RealMatrixImpl ( solver.solve ( c )  )  ;^205^^^^^202^215^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^RealMatrix triangularMatrix = new RealMatrixImpl ( m6 ) ;^205^^^^^202^215^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P8_Replace_Mix]^RealMatrix triangularMatrix = new RealMatrixImpl ( m5 ) ;^205^^^^^202^215^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^205^^^^^202^215^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^RealMatrix pdMatrix = triangularMatrix .multiply (  )  ;^206^207^^^^202^215^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix .multiply (  )   ) ;^206^207^^^^202^215^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^206^207^^^^202^215^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^triangularMatrix.multiply ( pdMatrix.transpose (  )  ) ;^207^^^^^202^215^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^207^^^^^202^215^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^207^^^^^202^215^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^209^^^^^202^215^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^209^^^^^202^215^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^solver.decompose ( triangularMatrix ) ;^210^^^^^202^215^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^solver.solve ( pdMatrix ) ;^210^^^^^202^215^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^210^^^^^202^215^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;solver.decompose ( pdMatrix ) ;^210^^^^^202^215^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;solver.decompose ( pdMatrix ) ;^210^^^^^202^215^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^assertTrue (  areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^assertTrue ( message, areEqual (  solver.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^assertTrue ( message, areEqual ( triangularMatrix.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^assertTrue ( solver, areEqual ( triangularMatrix, message.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^assertTrue ( message, areEqual ( solver, triangularMatrix.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^assertTrue ( message, testGetDeterminant ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^assertTrue ( message, areEqual ( triangularMatrix, solver.solve (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P8_Replace_Mix]^assertTrue ( message, areEqual ( pdMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^212^213^^^^202^215^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^areEqual ( pdMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^areEqual (  solver.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^areEqual ( triangularMatrix.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P5_Replace_Variable]^areEqual ( solver, triangularMatrix.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^testGetDeterminant ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P7_Replace_Invocation]^areEqual ( triangularMatrix, solver.solve (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P14_Delete_Statement]^^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P11_Insert_Donor_Statement]^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^213^^^^^202^215^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testDecompose [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  
[P4_Replace_Constructor]^new RealMatrixImpl ( solver.solve ( c )  )  ;^224^^^^^221^240^new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P8_Replace_Mix]^new RealMatrixImpl ( m6 ) ;^224^^^^^221^240^new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^RealMatrix triangularMatrix = RealMatrix triangularMatrix =  new RealMatrixImpl ( solver.solve ( c )  )  ;^223^224^^^^221^240^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^RealMatrix triangularMatrix = new RealMatrixImpl ( m7 ) ;^223^224^^^^221^240^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^223^224^^^^221^240^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  x.multiply ( triangularMatrix.transpose (  )  ) ;^225^226^^^^221^240^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P7_Replace_Invocation]^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix .multiply (  )  ;^225^226^^^^221^240^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^225^226^^^^221^240^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^( RealMatrixImpl )  x.multiply ( triangularMatrix.transpose (  )  ) ;^226^^^^^221^240^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P14_Delete_Statement]^^226^^^^^221^240^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^226^^^^^221^240^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P7_Replace_Invocation]^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix .multiply (  )   ) ;^226^^^^^221^240^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^new RealMatrixImpl ( c )  ;^228^^^^^221^240^new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^227^228^^^^221^240^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^227^228^^^^221^240^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P1_Replace_Type]^for  (  short  i=0; i<c.length; i++ ) for  (  short  j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P3_Replace_Literal]^for  ( int i=i; i<c.length; i++ ) for  ( int j=i; j<lowerTriangularMatrix[i].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P3_Replace_Literal]^for  ( int i=6; i<c.length; i++ ) for  ( int j=6; j<lowerTriangularMatrix[6].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P3_Replace_Literal]^for  ( int i=j; i<c.length; i++ ) for  ( int j=j; j<lowerTriangularMatrix[j].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( jnt i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += m6[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( lowerTriangularMatrixnt i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += i[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) lowerTriangularMatrix[i] += c[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P8_Replace_Mix]^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += m7[i][j];^231^232^233^^^221^240^for  ( int i=0; i<c.length; i++ ) for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P1_Replace_Type]^for  (  short  j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P3_Replace_Literal]^for  ( int j=i; j<lowerTriangularMatrix[i].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += m5[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( cnt j=0; j<lowerTriangularMatrix[0].length; j++ ) i[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( jnt i=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^c[i] += m6[i][j];^233^^^^^221^240^c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P8_Replace_Mix]^c[i] + =  c[i] +;^233^^^^^221^240^c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^c[i] += m7[i][j];^233^^^^^221^240^c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P3_Replace_Literal]^for  ( int j=8; j<lowerTriangularMatrix[8].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( int i=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += m6[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) lowerTriangularMatrix[i] += c[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P8_Replace_Mix]^c[i] + = null ;^233^^^^^221^240^c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P1_Replace_Type]^for  (  long  j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^232^233^^^^221^240^for  ( int j=0; j<lowerTriangularMatrix[0].length; j++ ) c[i] += lowerTriangularMatrix[i][j];^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P7_Replace_Invocation]^solver.solve ( pdMatrix ) ;^235^^^^^221^240^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P8_Replace_Mix]^solver .decompose ( pdMatrix )  ;^235^^^^^221^240^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P14_Delete_Statement]^^235^236^^^^221^240^solver.decompose ( pdMatrix ) ; RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;solver.decompose ( pdMatrix ) ;^235^^^^^221^240^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;solver.decompose ( pdMatrix ) ;^235^^^^^221^240^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^RealMatrix x = new RealMatrixImpl ( c.solve ( solver )  ) ;^236^^^^^221^240^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P7_Replace_Invocation]^RealMatrix x = new RealMatrixImpl ( solver .solve ( c )   ) ;^236^^^^^221^240^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^236^^^^^221^240^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P14_Delete_Statement]^^236^^^^^221^240^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^236^^^^^221^240^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^areEqual ( pdMatrix.multiply ( x ) ,  areEqual ( pdMatrix.multiply ( x ) ,   new RealMatrixImpl ( solver.solve ( c )  )  , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,   new RealMatrixImpl ( solver.solve ( c )  )  , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^assertTrue (  areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^assertTrue ( message, areEqual ( pdMatrix.multiply ( triangularMatrix ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^assertTrue ( x, areEqual ( pdMatrix.multiply ( message ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^assertTrue ( pdMatrix, areEqual ( message.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^assertTrue ( message, areEqual ( pdMatrix.multiply ( c ) ,  new RealMatrixImpl ( x ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^assertTrue ( c, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( message ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P14_Delete_Statement]^^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^assertTrue ( message, areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^238^239^^^^221^240^assertTrue ( message, areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^areEqual ( pdMatrix.multiply ( triangularMatrix ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^areEqual ( x.multiply ( pdMatrix ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P5_Replace_Variable]^areEqual ( c.multiply ( x ) ,  new RealMatrixImpl ( pdMatrix ) , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P14_Delete_Statement]^^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P11_Insert_Donor_Statement]^areEqual ( triangularMatrix, solver.getDecomposition (  ) , 1.0E-10 )  ) ;areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P7_Replace_Invocation]^areEqual ( pdMatrix .multiply (  )  ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^239^^^^^221^240^areEqual ( pdMatrix.multiply ( x ) ,  new RealMatrixImpl ( c ) , 1.0E-10 )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testSolve [RETURN_TYPE] void   double[][] lowerTriangularMatrix String message [VARIABLES] CholeskySolver  solver  boolean  RealMatrix  triangularMatrix  x  double[]  c  double  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  RealMatrixImpl  pdMatrix  String  message  int  i  j  
[P4_Replace_Constructor]^RealMatrix triangularMatrix = RealMatrix triangularMatrix =  new RealMatrixImpl ( solver.solve ( c )  )  ;^251^^^^^246^259^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P8_Replace_Mix]^RealMatrix triangularMatrix = new RealMatrixImpl ( m5 ) ;^251^^^^^246^259^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P8_Replace_Mix]^RealMatrix triangularMatrix = new RealMatrixImpl ( m6 ) ;^251^^^^^246^259^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^RealMatrix x = new RealMatrixImpl ( solver.solve ( c )  ) ;RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^251^^^^^246^259^RealMatrix triangularMatrix = new RealMatrixImpl ( lowerTriangularMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P8_Replace_Mix]^RealMatrix pdMatrix = triangularMatrix .multiply (  )  ;^252^253^^^^246^259^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^RealMatrixImpl pdMatrix = ( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^252^253^^^^246^259^RealMatrix pdMatrix = triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^triangularMatrix.multiply ( pdMatrix.transpose (  )  ) ;^253^^^^^246^259^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P7_Replace_Invocation]^triangularMatrix .multiply (  )  ;^253^^^^^246^259^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P14_Delete_Statement]^^253^^^^^246^259^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^( RealMatrixImpl )  triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^253^^^^^246^259^triangularMatrix.multiply ( triangularMatrix.transpose (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P1_Replace_Type]^int pdDeterminant = determinant * determinant;^254^^^^^246^259^double pdDeterminant = determinant * determinant;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P2_Replace_Operator]^double + pdDeterminant = determinant * determinant;^254^^^^^246^259^double pdDeterminant = determinant * determinant;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^double pdDeterminant = m5Det * determinant;^254^^^^^246^259^double pdDeterminant = determinant * determinant;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P4_Replace_Constructor]^CholeskySolver solver = new RealMatrixImpl ( c )  ;^256^^^^^246^259^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^TestRunner runner = new TestRunner (  ) ;CholeskySolver solver = new CholeskySolver (  ) ;^256^^^^^246^259^CholeskySolver solver = new CholeskySolver (  ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^solver.decompose ( triangularMatrix ) ;^257^^^^^246^259^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P7_Replace_Invocation]^solver.solve ( pdMatrix ) ;^257^^^^^246^259^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P8_Replace_Mix]^solver.solve ( triangularMatrix ) ;^257^^^^^246^259^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P14_Delete_Statement]^^257^^^^^246^259^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m7" ) ;solver.decompose ( pdMatrix ) ;^257^^^^^246^259^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^fail ( "Decomposing matrix m6" ) ;solver.decompose ( pdMatrix ) ;^257^^^^^246^259^solver.decompose ( pdMatrix ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^assertEquals ( message, solver.getDeterminant (  ) , m5Det, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^assertEquals (  solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^assertEquals ( message.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^assertEquals ( message, solver.getDeterminant (  ) ,  1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^assertEquals ( solver, message.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^assertEquals ( message, pdDeterminant.getDeterminant (  ) , solver, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P7_Replace_Invocation]^assertEquals ( message, solver.solve (  ) , pdDeterminant, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P8_Replace_Mix]^assertEquals ( message, solver.solve (  ) , numericalZero, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P14_Delete_Statement]^^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P11_Insert_Donor_Statement]^assertEquals ( solver.getNumericalZero (  ) , numericalZero, 0.0d ) ;assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P7_Replace_Invocation]^assertEquals ( message, solver .getNumericalZero (  )  , pdDeterminant, 1.0E-10 ) ;^258^^^^^246^259^assertEquals ( message, solver.getDeterminant (  ) , pdDeterminant, 1.0E-10 ) ;^[CLASS] CholeskySolverTest  [METHOD] testGetDeterminant [RETURN_TYPE] void   double[][] lowerTriangularMatrix double determinant String message [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  CholeskySolver  solver  String  message  boolean  RealMatrix  pdMatrix  triangularMatrix  double  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  
[P5_Replace_Variable]^double[][] mv1 = m2.getData (  ) ;^267^^^^^265^280^double[][] mv1 = m1.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P7_Replace_Invocation]^double[][] mv1 = m1 .multiply (  )  ;^267^^^^^265^280^double[][] mv1 = m1.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P11_Insert_Donor_Statement]^double[][] mv2 = m2.getData (  ) ;double[][] mv1 = m1.getData (  ) ;^267^^^^^265^280^double[][] mv1 = m1.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P14_Delete_Statement]^^267^^^^^265^280^double[][] mv1 = m1.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^double[][] mv2 = m1.getData (  ) ;^268^^^^^265^280^double[][] mv2 = m2.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P11_Insert_Donor_Statement]^double[][] mv1 = m1.getData (  ) ;double[][] mv2 = m2.getData (  ) ;^268^^^^^265^280^double[][] mv2 = m2.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P14_Delete_Statement]^^268^^^^^265^280^double[][] mv2 = m2.getData (  ) ;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P2_Replace_Operator]^if  ( mv1.length != mv1.length  && mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P2_Replace_Operator]^if  ( mv1.length == mv1.length  || mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P2_Replace_Operator]^if  ( mv1.length != mv1.length  || mv1[0].length >= mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^if  ( mv1.length != mv1.length  || mv1[-9].length != mv2[-9].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^if  ( mv1.length != mv1.length  || mv1[j].length != mv2[j].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return true;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( m5.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( mv1.length != mv1.length  || mv1[0].length != m5[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( j != mv1.length  || mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( mv2[0].length.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( mv2.length != mv1.length  || mv1[0].length != mv1[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( mv1[0].length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( mv1[0].length.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P6_Replace_Expression]^if  ( mv1.length != mv1.length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P6_Replace_Expression]^if  ( mv1[0].length != mv2[0].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P8_Replace_Mix]^if  ( mv1.length != mv1.length  || mv1[0 ].length != mv2[0 ].length ) return false;^270^271^272^^^265^280^if  ( mv1.length != mv1.length  || mv1[0].length != mv2[0].length ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^return true;^272^^^^^265^280^return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P2_Replace_Operator]^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  >= delta ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return true;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( m7[i][j] -mv2[i][j] )  > delta ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > pdDeterminant ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( delta[i][j] -mv2[i][j] )  > mv1 ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P6_Replace_Expression]^if  ( mv1[i][j] - mv2[i][j] ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P15_Unwrap_Block]^return false;^276^277^^279^280^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false; return true; }^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P16_Remove_Block]^^276^277^^279^280^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false; return true; }^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^return true;^277^^^^^265^280^return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P1_Replace_Type]^for  (  long  i=0; i<mv1.length; i++ ) for  (  long  j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P2_Replace_Operator]^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  >= delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int i=i; i<mv1.length; i++ ) for  ( int j=i; j<mv1[i].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int i=2; i<mv1.length; i++ ) for  ( int j=2; j<mv1[2].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int i=j; i<mv1.length; i++ ) for  ( int j=j; j<mv1[j].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return true;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( jnt i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > numericalZero ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( mv1nt i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( i[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int i=0; i<mv1.length; i++ ) for  ( int delta=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > j ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P8_Replace_Mix]^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( m6[i][j] -mv2[i][j] )  > delta ) return false;^274^275^276^277^^265^280^for  ( int i=0; i<mv1.length; i++ ) for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > m4Det ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P1_Replace_Type]^for  (  short  j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P2_Replace_Operator]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  >= delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int j=j; j<mv1[j].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return true;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int i=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv2[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > m4Det ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( jnt i=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int delta=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > j ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P8_Replace_Mix]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > m5Det ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( m5[i][j] -mv2[i][j] )  > delta ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P1_Replace_Type]^for  (  long  j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int j=-4; j<mv1[-4].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int j=i; j<mv1[i].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int j=4; j<mv1[4].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( m6[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > numericalZero ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^for  ( int mv1=0; j<mv1[0].length; j++ ) if  ( Math.abs ( j[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( mv2[i][j] -mv2[i][j] )  > delta ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P8_Replace_Mix]^if  ( Math.abs ( m7[i][j] -mv2[i][j] )  > delta ) return true;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P5_Replace_Variable]^if  ( Math.abs ( m6[i][j] -mv2[i][j] )  > delta ) return false;^276^277^^^^265^280^if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^for  ( int j=2; j<mv1[2].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^275^276^277^^^265^280^for  ( int j=0; j<mv1[0].length; j++ ) if  ( Math.abs ( mv1[i][j] -mv2[i][j] )  > delta ) return false;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^return false;^279^^^^^265^280^return true;^[CLASS] CholeskySolverTest  [METHOD] areEqual [RETURN_TYPE] boolean   RealMatrix m1 RealMatrix m2 double delta [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  boolean  RealMatrix  m1  m2  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  int  i  j  
[P3_Replace_Literal]^System.out.println ( "Startart" ) ;^287^^^^^286^291^System.out.println ( "Start" ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P14_Delete_Statement]^^287^288^^^^286^291^System.out.println ( "Start" ) ; TestRunner runner = new TestRunner (  ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P11_Insert_Donor_Statement]^System.out.println ( "End" ) ;System.out.println ( "Start" ) ;^287^^^^^286^291^System.out.println ( "Start" ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P11_Insert_Donor_Statement]^CholeskySolver solver = new CholeskySolver (  ) ;TestRunner runner = new TestRunner (  ) ;^288^^^^^286^291^TestRunner runner = new TestRunner (  ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P7_Replace_Invocation]^runner .TestRunner (  )  ;^289^^^^^286^291^runner.doRun ( CholeskySolverTest.suite (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P14_Delete_Statement]^^289^290^^^^286^291^runner.doRun ( CholeskySolverTest.suite (  )  ) ; System.out.println ( "End" ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P11_Insert_Donor_Statement]^suite.setName ( "CholeskySolver Tests" ) ;runner.doRun ( CholeskySolverTest.suite (  )  ) ;^289^^^^^286^291^runner.doRun ( CholeskySolverTest.suite (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P14_Delete_Statement]^^289^^^^^286^291^runner.doRun ( CholeskySolverTest.suite (  )  ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P3_Replace_Literal]^System.out.println ( "nnd" ) ;^290^^^^^286^291^System.out.println ( "End" ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P14_Delete_Statement]^^290^^^^^286^291^System.out.println ( "End" ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
[P11_Insert_Donor_Statement]^System.out.println ( "Start" ) ;System.out.println ( "End" ) ;^290^^^^^286^291^System.out.println ( "End" ) ;^[CLASS] CholeskySolverTest  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] double[][]  lowerTriangularMatrix  m1  m2  m3  m4  m5  m6  m7  mv1  mv2  String[]  args  boolean  double  delta  determinant  m1Det  m2Det  m3Det  m4Det  m5Det  numericalZero  pdDeterminant  TestRunner  runner  
