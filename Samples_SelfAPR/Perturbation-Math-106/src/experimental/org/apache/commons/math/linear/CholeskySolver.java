[P1_Replace_Type]^private int numericalZero = 10E-12;^38^^^^^33^43^private double numericalZero = 10E-12;^[CLASS] CholeskySolver   [VARIABLES] 
[P3_Replace_Literal]^private double numericalZero = 10E-7;^38^^^^^33^43^private double numericalZero = 10E-12;^[CLASS] CholeskySolver   [VARIABLES] 
[P8_Replace_Mix]^private double numericalZero  = null ;^38^^^^^33^43^private double numericalZero = 10E-12;^[CLASS] CholeskySolver   [VARIABLES] 
[P8_Replace_Mix]^this.numericalZero =  null;^57^^^^^56^58^this.numericalZero = numericalZero;^[CLASS] CholeskySolver  [METHOD] setNumericalZero [RETURN_TYPE] void   double numericalZero [VARIABLES] double  numericalZero  RealMatrixImpl  decompMatrix  boolean  
[P8_Replace_Mix]^decompMatrix = this;^80^^^^^65^95^decompMatrix = null;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^double[][] data = decompMatrix.getData (  ) ;double[][] mval = m.getData (  ) ;^81^^^^^66^96^double[][] mval = m.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^double[][] decomp = decompMatrix.getData (  ) ;double[][] mval = m.getData (  ) ;^81^^^^^66^96^double[][] mval = m.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^double[][] mval = m .getRowDimension (  )  ;^81^^^^^66^96^double[][] mval = m.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P14_Delete_Statement]^^81^^^^^66^96^double[][] mval = m.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^long  numRows = m.getRowDimension (  ) ;^82^^^^^67^97^int numRows = m.getRowDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P7_Replace_Invocation]^int numRows = m .getColumnDimension (  )  ;^82^^^^^67^97^int numRows = m.getRowDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^int numCols = m.getColumnDimension (  ) ;int numRows = m.getRowDimension (  ) ;^82^^^^^67^97^int numRows = m.getRowDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P14_Delete_Statement]^^82^83^^^^67^97^int numRows = m.getRowDimension (  ) ; int numCols = m.getColumnDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^short  numCols = m.getColumnDimension (  ) ;^83^^^^^68^98^int numCols = m.getColumnDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^int numRows = m.getRowDimension (  ) ;int numCols = m.getColumnDimension (  ) ;^83^^^^^68^98^int numCols = m.getColumnDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P7_Replace_Invocation]^int numCols = m .getRowDimension (  )  ;^83^^^^^68^98^int numCols = m.getColumnDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P14_Delete_Statement]^^83^^^^^68^98^int numCols = m.getColumnDimension (  ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^if  ( numRows >= numCols ) throw new IllegalArgumentException  (" ")  ;^84^85^^^^69^99^if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P4_Replace_Constructor]^if  ( numRows != numCols ) throw if  ( numRows != numCols ) throw  new IllegalArgumentException ( "matrix dimension mismatch" )   ;^84^85^^^^69^99^if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^if  ( row != numCols ) throw new IllegalArgumentException  (" ")  ;^84^85^^^^69^99^if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^if  ( numCols != numRows ) throw new IllegalArgumentException  (" ")  ;^84^85^^^^69^99^if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "matrix dimension mismatch" )   ;^85^^^^^70^100^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^85^^^^^70^100^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;throw new IllegalArgumentException  (" ")  ;^85^^^^^70^100^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^double[] x = new double[decomp.length];double[][] decomp = new double[numRows][numCols];^86^^^^^71^101^double[][] decomp = new double[numRows][numCols];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^int sum;^87^^^^^72^102^double sum;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^if  ( sum < numericalZero )  {^96^^^^^81^111^if  ( sum <= numericalZero )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^if  ( numericalZero <= sum )  {^96^^^^^81^111^if  ( sum <= numericalZero )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Matrix is not positiv definit");^96^97^98^99^^81^111^if  ( sum <= numericalZero )  { throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ; }^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P16_Remove_Block]^^96^97^98^99^^81^111^if  ( sum <= numericalZero )  { throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ; }^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix is not positiv definittiv " ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "matrix dimension mismatch" )  ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P13_Insert_Block]^if  ( sum <=  ( numericalZero )  )  {     throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ; }^97^^^^^82^112^[Delete]^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " is not positiv" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  short  col=0; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  |  ( int col=0; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  &&  ( int col=0; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int col=; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int col=row; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int col=7; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int row=0; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix is not positiv definitMatrix" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix is notatrix is not positiv definit" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  long  k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  ( int k=0; k<col; k++ ) sum = sum  >  decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for / ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=numCols; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int row=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int k=0; k<col; k++ ) numericalZero = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int k=0; k<col; k++ ) sum = sum - mval[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int k=0; k<col; k++ ) decomp = sum - sum[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  ^  decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum + = sum - decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = numericalZero - decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = sum - decomp[i][k]*x[k];sum = sum - decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = sum - decomp[col][k]*decomp[row][k];sum = sum - decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = sum - decomp[k][i]*x[k];sum = sum - decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  short  row=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for   instanceof   ( int row=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int row=col+5; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int numCols=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^for  ( int numRows=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  short  k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  ( int k=0; k<col; k++ ) sum = sum  &&  decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for + ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=-8; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int row=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int k=0; k<col; k++ ) numericalZero = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int sum=0; k<col; k++ ) k = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int decomp=0; k<col; k++ ) sum = sum - k[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^for  ( int k=0; k<col; k++ ) sum = sum - mval[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum   instanceof   decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum + = sum - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = numericalZero - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = sum - mval[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = sum - decomp[i][k]*x[k];sum = sum - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = sum - decomp[k][i]*x[k];sum = sum - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = sum - decomp[col][k]*decomp[col][k];sum = sum - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = decomp[row][col];^104^^^^^89^119^sum = mval[row][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = mval[col][col];sum = mval[row][col];^104^^^^^89^119^sum = mval[row][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  >  decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^decomp[row][col] ;^107^^^^^92^122^decomp[row][col] = sum/decomp[col][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  long  k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  ( int k=0; k<col; k++ ) sum = sum  >=  decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for / ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=numRows; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int numRows=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = decomp - sum[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = decomp[col][col];^93^^^^^78^108^sum = mval[col][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P11_Insert_Donor_Statement]^sum = mval[row][col];sum = mval[col][col];^93^^^^^78^108^sum = mval[col][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  ||  decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum / = sum - decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = sum - mval[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^sum = decomp - sum[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^decomp[col][col] + = null ;^100^^^^^85^115^decomp[col][col] += Math.sqrt ( sum ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  <  decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum / = sum - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^decomp[row][col] = numericalZero/decomp[col][col];^107^^^^^92^122^decomp[row][col] = sum/decomp[col][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " not " ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  short  k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=col; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  ==  ( int row=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int row=col+8; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=k; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Matrix is not positiv definitsitiv defin" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^decomp[col][col] += Math.sqrt ( numericalZero ) ;^100^^^^^85^115^decomp[col][col] += Math.sqrt ( sum ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P14_Delete_Statement]^^100^^^^^85^115^decomp[col][col] += Math.sqrt ( sum ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  ( int k=0; k<col; k++ ) sum = sum  &  decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for - ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=4; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int sum=0; k<col; k++ ) k = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int decomp=0; k<col; k++ ) sum = sum - k[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  >  decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  <=  ( int row=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int row=col+numCols; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^for  ( int k=0; k<col; k++ ) decomp = sum - sum[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  |  decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum - = sum - decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^decomp[row][col]  =  decomp[row][col] ;^107^^^^^92^122^decomp[row][col] = sum/decomp[col][col];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  ( int k=0; k<col; k++ ) sum = sum  |  decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for - ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=row; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^90^120^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  !=  decomp[col][k]*decomp[col][k];^95^^^^^80^110^sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P8_Replace_Mix]^decomp[col][col] + =  decomp[col][col] +;^100^^^^^85^115^decomp[col][col] += Math.sqrt ( sum ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^sum = sum  >>  decomp[col][k]*decomp[row][k];^106^^^^^91^121^sum = sum - decomp[col][k]*decomp[row][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "rix is not positatrix is not positiv definit" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int col=8; col<numCols; col++ )  {^90^^^^^75^105^for  ( int col=0; col<numCols; col++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int k=row; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^94^95^^^^79^109^for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k];^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P1_Replace_Type]^for  (  long  row=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^for  &  ( int row=col+1; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^for  ( int row=col+-4; row<numRows; row++ )  {^103^^^^^88^118^for  ( int row=col+1; row<numRows; row++ )  {^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " is not posi" ) ;^97^98^^^^82^112^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P5_Replace_Variable]^decompMatrix = new RealMatrixImpl ( mval ) ;^112^^^^^97^127^decompMatrix = new RealMatrixImpl ( decomp ) ;^[CLASS] CholeskySolver  [METHOD] decompose [RETURN_TYPE] void   RealMatrix m [VARIABLES] double[][]  decomp  mval  RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double  numericalZero  sum  int  col  k  numCols  numRows  row  
[P2_Replace_Operator]^if  ( decompMatrix != null )  {^143^^^^^141^170^if  ( decompMatrix == null )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^if  ( decompMatrix == this )  {^143^^^^^141^170^if  ( decompMatrix == null )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("no decomposed matrix available");^143^144^145^^^141^170^if  ( decompMatrix == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P16_Remove_Block]^^143^144^145^^^141^170^if  ( decompMatrix == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P13_Insert_Block]^if  (  ( decompMatrix )  == null )  {     throw new IllegalStateException ( "no decomposed matrix available" ) ; }^144^^^^^141^170^[Delete]^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^144^^^^^141^170^throw new IllegalStateException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^if  ( decompMatrix.getColumnDimension (  )  == c.length ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P4_Replace_Constructor]^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw  new IllegalArgumentException ( "Matrix is not positiv definit" )   ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^if  ( decompMatrix.getColumnDimension (  )  != x.length ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^if  ( decompMatrix.getColumnDimension (  )  != k ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^if  ( c.getColumnDimension (  )  != decompMatrix.length ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^if  ( c.length.getColumnDimension (  )  != decompMatrix ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P7_Replace_Invocation]^if  ( decompMatrix.getData (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^if  ( decompMatrix .getRowDimension (  )   != x.length ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Matrix is not positiv definit" )   ;^147^^^^^141^170^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^147^^^^^141^170^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^147^^^^^141^170^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;throw new IllegalArgumentException  (" ")  ;^147^^^^^141^170^throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P7_Replace_Invocation]^if  ( decompMatrix .getRowDimension (  )   != c.length ) throw new IllegalArgumentException  (" ")  ;^146^147^^^^141^170^if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P7_Replace_Invocation]^double[][] decomp = decompMatrix.getColumnDimension (  ) ;^149^^^^^141^170^double[][] decomp = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^double[][] data = decompMatrix.getData (  ) ;double[][] decomp = decompMatrix.getData (  ) ;^149^^^^^141^170^double[][] decomp = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^double[][] mval = m.getData (  ) ;double[][] decomp = decompMatrix.getData (  ) ;^149^^^^^141^170^double[][] decomp = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P14_Delete_Statement]^^149^^^^^141^170^double[][] decomp = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^double[][] decomp = new double[numRows][numCols];double[] x = new double[decomp.length];^150^^^^^141^170^double[] x = new double[decomp.length];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^int sum;^151^^^^^141^170^double sum;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  short  i=0; i<x.length; i++ )  {^154^^^^^141^170^for  ( int i=0; i<x.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int i=7; i<x.length; i++ )  {^154^^^^^141^170^for  ( int i=0; i<x.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int i=-7; i<x.length; i++ )  {^154^^^^^141^170^for  ( int i=0; i<x.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( knt i=0; i<x.length; i++ )  {^154^^^^^141^170^for  ( int i=0; i<x.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  short  k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for  ( int k=0; k<i; k++ ) sum = sum  <  decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for - ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=8; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int i=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int k=0; k<i; k++ ) numericalZero = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( knt i=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int k=0; k<i; k++ ) decomp = sum - sum[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum = sum  &  decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum + = sum - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^sum = decomp - sum[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^sum =  numericalZero - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[col][k]*decomp[row][k];sum = sum - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^x[i] = sum / decomp[i][i];sum = sum - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[k][i]*x[k];sum = sum - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[col][k]*decomp[col][k];sum = sum - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^sum = x[i];^155^^^^^141^170^sum = c[i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = x[i];sum = c[i];^155^^^^^141^170^sum = c[i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum = sum  |  decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^x[i] = sum - decomp[i][i];^158^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^x[i] = numericalZero / decomp[i][i];^158^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^x[i]  =  x[i] ;^158^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[i][k]*x[k];x[i] = sum / decomp[i][i];^158^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[k][i]*x[k];x[i] = sum / decomp[i][i];^158^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  long  k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=k; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for / ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=i; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int sum=0; k<i; k++ ) k = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum = sum  >=  decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum - = sum - decomp[i][k]*x[k];^157^^^^^141^170^sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^x[i] = decomp / sum[i][i];^158^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  long  i=0; i<x.length; i++ )  {^154^^^^^141^170^for  ( int i=0; i<x.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int i=i; i<x.length; i++ )  {^154^^^^^141^170^for  ( int i=0; i<x.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  long  i=x.length-1; i>=0; i-- )  {^162^^^^^141^170^for  ( int i=x.length-1; i>=0; i-- )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int i=x.length-k; i>=0; i-- )  {^162^^^^^141^170^for  ( int i=x.length-1; i>=0; i-- )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int i=x.length-1; i>=-2; i-- )  {^162^^^^^141^170^for  ( int i=x.length-1; i>=0; i-- )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int i=x.length--7; i>=0; i-- )  {^162^^^^^141^170^for  ( int i=x.length-1; i>=0; i-- )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( knt i=x.length-1; i>=0; i-- )  {^162^^^^^141^170^for  ( int i=x.length-1; i>=0; i-- )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  long  k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for   instanceof   ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for  ( int k=i+1; k<x.length; k++ ) sum = sum  ^  decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for - ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=i+; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int i=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int k=i+1; k<x.length; k++ ) numericalZero = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( knt i=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int k=i+1; k<x.length; k++ ) decomp = sum - sum[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum = sum  <<  decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum + = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^sum = numericalZero - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^sum = decomp - sum[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[i][k]*x[k];sum = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[col][k]*decomp[row][k];sum = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^x[i] = sum / decomp[i][i];sum = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[col][k]*decomp[col][k];sum = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^sum = c[i];^163^^^^^141^170^sum = x[i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = c[i];sum = x[i];^163^^^^^141^170^sum = x[i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum = sum  ==  decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^x[i] = sum * decomp[i][i];^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^x[i] = numericalZero / decomp[i][i];^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^x[i]  = null ;^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[i][k]*x[k];x[i] = sum / decomp[i][i];^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P11_Insert_Donor_Statement]^sum = sum - decomp[k][i]*x[k];x[i] = sum / decomp[i][i];^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  short  k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for  !=  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=i+-8; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for  ^  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for  ( int k=i+1; k<x.length; k++ ) sum = sum  !=  decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for + ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^for  ( int decomp=i+1; k<x.length; k++ ) sum = sum - k[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum = sum  &&  decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum - = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^sum / = sum - decomp[k][i]*x[k];^165^^^^^141^170^sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^x[i] = sum + decomp[i][i];^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^x[i] = decomp / sum[i][i];^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P8_Replace_Mix]^x[i]  =  x[i] ;^166^^^^^141^170^x[i] = sum / decomp[i][i];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P1_Replace_Type]^for  (  short  i=x.length-1; i>=0; i-- )  {^162^^^^^141^170^for  ( int i=x.length-1; i>=0; i-- )  {^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P2_Replace_Operator]^for  ||  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P3_Replace_Literal]^for  ( int k=i+8; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^164^165^^^^141^170^for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k];^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P5_Replace_Variable]^return c;^169^^^^^141^170^return x;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   double[] c [VARIABLES] double[][]  decomp  RealMatrixImpl  decompMatrix  boolean  double[]  c  x  double  numericalZero  sum  int  i  k  
[P7_Replace_Invocation]^solve ( m ) ;^191^^^^^189^193^decompose ( m ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   RealMatrix m double[] c [VARIABLES] RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double[]  c  double  numericalZero  sum  
[P14_Delete_Statement]^^191^^^^^189^193^decompose ( m ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   RealMatrix m double[] c [VARIABLES] RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double[]  c  double  numericalZero  sum  
[P7_Replace_Invocation]^return decompose ( c ) ;^192^^^^^189^193^return solve ( c ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   RealMatrix m double[] c [VARIABLES] RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double[]  c  double  numericalZero  sum  
[P14_Delete_Statement]^^192^^^^^189^193^return solve ( c ) ;^[CLASS] CholeskySolver  [METHOD] solve [RETURN_TYPE] double[]   RealMatrix m double[] c [VARIABLES] RealMatrixImpl  decompMatrix  boolean  RealMatrix  m  double[]  c  double  numericalZero  sum  
[P2_Replace_Operator]^if  ( decompMatrix != null )  {^207^^^^^205^219^if  ( decompMatrix == null )  {^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P8_Replace_Mix]^if  ( decompMatrix == true )  {^207^^^^^205^219^if  ( decompMatrix == null )  {^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("no decomposed matrix available");^207^208^209^^^205^219^if  ( decompMatrix == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P16_Remove_Block]^^207^208^209^^^205^219^if  ( decompMatrix == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P13_Insert_Block]^if  (  ( decompMatrix )  == null )  {     throw new IllegalStateException ( "no decomposed matrix available" ) ; }^208^^^^^205^219^[Delete]^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^208^^^^^205^219^throw new IllegalStateException  (" ")  ;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P7_Replace_Invocation]^double[][] data = decompMatrix.getColumnDimension (  ) ;^211^^^^^205^219^double[][] data = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P11_Insert_Donor_Statement]^double[][] mval = m.getData (  ) ;double[][] data = decompMatrix.getData (  ) ;^211^^^^^205^219^double[][] data = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P11_Insert_Donor_Statement]^double[][] decomp = decompMatrix.getData (  ) ;double[][] data = decompMatrix.getData (  ) ;^211^^^^^205^219^double[][] data = decompMatrix.getData (  ) ;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P14_Delete_Statement]^^211^212^^^^205^219^double[][] data = decompMatrix.getData (  ) ; double res = 1.0d;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P1_Replace_Type]^float res = 1.0d;^212^^^^^205^219^double res = 1.0d;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P3_Replace_Literal]^double res = 9.0d;^212^^^^^205^219^double res = 1.0d;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P1_Replace_Type]^for  (  short  i=0; i<data.length; i++ )  {^213^^^^^205^219^for  ( int i=0; i<data.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P3_Replace_Literal]^for  ( int i=8; i<data.length; i++ )  {^213^^^^^205^219^for  ( int i=0; i<data.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P8_Replace_Mix]^res *=  null[i][i];^214^^^^^205^219^res *= data[i][i];^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P3_Replace_Literal]^for  ( int i=i; i<data.length; i++ )  {^213^^^^^205^219^for  ( int i=0; i<data.length; i++ )  {^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P2_Replace_Operator]^res - = res*res;^216^^^^^205^219^res = res*res;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P5_Replace_Variable]^res = sum*res;^216^^^^^205^219^res = res*res;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P8_Replace_Mix]^res =  sum*sum;^216^^^^^205^219^res = res*res;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
[P5_Replace_Variable]^return sum;^218^^^^^205^219^return res;^[CLASS] CholeskySolver  [METHOD] getDeterminant [RETURN_TYPE] double   [VARIABLES] double[][]  data  RealMatrixImpl  decompMatrix  boolean  double  numericalZero  res  sum  int  i  
