[P8_Replace_Mix]^private static final Set<Integer> ALLOWED_TYPES ;^89^90^^^^89^90^private static final Set<Integer> ALLOWED_TYPES = ImmutableSet.of ( Token.NAME, Token.GETPROP, Token.GETELEM ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition   [VARIABLES] 
[P8_Replace_Mix]^private  Node lValue;^91^^^^^86^96^private final Node lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition   [VARIABLES] 
[P8_Replace_Mix]^private  Node name;^295^^^^^290^300^private final Node name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition   [VARIABLES] 
[P5_Replace_Variable]^Preconditions.checkNotNull ( value ) ;^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( lValue ) ;^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( value ) ;^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  ||  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "ue tnexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( value.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( lValue.contains ( ALLOWED_TYPES.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.newString (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( name.newString (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^ALLOWED_TYPES.contains ( name.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^ALLOWED_TYPES.contains ( lValue.newString (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^ALLOWED_TYPES.contains ( value.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^ALLOWED_TYPES.contains ( lValue .getString (  )   ) , "Unexpected lValue type " + Token.name ( lValue^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^ALLOWED_TYPES.contains ( value.newString (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^"Unexpected value type " + Token.name ( lValue.getType (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^"Unexpected lValue type " + Token.name ( lValue.newString (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^"Unexpected lValue type " + Token.name ( lValue .getString (  )   )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^"Unexpected value type " + Token.name ( lValue.newString (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^97^98^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ; this.lValue = lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^this.lValue = value;^98^^^^^93^99^this.lValue = lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^this.value = value;this.lValue = lValue;^98^^^^^93^99^this.lValue = lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^this.name = name;this.lValue = lValue;^98^^^^^93^99^this.lValue = lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^super ( value ) ;^118^^^^^117^119^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^super ( name ) ;^118^^^^^117^119^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^118^^^^^117^119^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^super ( argumentName ) ;super ( lValue ) ;^118^^^^^117^119^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^super ( node ) ;super ( lValue ) ;^118^^^^^117^119^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^super ( value ) ;^134^^^^^133^135^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^134^^^^^133^135^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^super ( argumentName ) ;super ( lValue ) ;^134^^^^^133^135^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^super ( node ) ;super ( lValue ) ;^134^^^^^133^135^super ( lValue ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^super ( value ) ;^150^^^^^149^153^super ( argumentName ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^150^151^^^^149^153^super ( argumentName ) ; Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^super ( node ) ;super ( argumentName ) ;^150^^^^^149^153^super ( argumentName ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^super ( lValue ) ;super ( argumentName ) ;^150^^^^^149^153^super ( argumentName ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isFunction ( name )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isFunction ( function )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isAssign ( function )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isFunction ( literal )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^151^152^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ; Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .isAnonymousFunction ( argumentName )   ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isName ( literal )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isName ( argumentName )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isAssign ( argumentName )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .isFunction ( argumentName )   ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isName ( value )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P14_Delete_Statement]^^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isAssign ( value )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isFunction ( node )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .isAnonymousFunction ( assignment )   ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isFunction ( value )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isAssign ( value )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^170^171^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ; function = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^function = value;^171^^^^^169^172^function = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P8_Replace_Mix]^function =  name;^171^^^^^169^172^function = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^name = node;function = node;^171^^^^^169^172^function = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^super ( value ) ;^191^^^^^190^192^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^191^^^^^190^192^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^super ( argumentName ) ;super ( node ) ;^191^^^^^190^192^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^super ( lValue ) ;super ( node ) ;^191^^^^^190^192^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^super ( value ) ;^206^^^^^205^209^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^206^^^^^205^209^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^super ( argumentName ) ;super ( node ) ;^206^^^^^205^209^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^super ( lValue ) ;super ( node ) ;^206^^^^^205^209^super ( node ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( literal )  ) ;^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isAnonymousFunction ( node )  ) ;^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( value )  ) ;^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^NodeUtil.isAnonymousFunction ( value )  ) ;^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^NodeUtil.isFunction ( node )  ) ;^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;NodeUtil.isAnonymousFunction ( node )  ) ;^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P12_Insert_Condition]^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  { NodeUtil.isAnonymousFunction ( node )  ) ; }^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isAssign ( value )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isAssign ( node )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isAssign ( literal )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil .isFunction ( lValue )   ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P14_Delete_Statement]^^226^227^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ; assignment = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P8_Replace_Mix]^assignment =  name;^227^^^^^225^228^assignment = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^name = node;assignment = node;^227^^^^^225^228^assignment = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  literal  name  node  value  boolean  
[P5_Replace_Variable]^this.literal = node;^262^^^^^261^265^this.literal = lit;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P8_Replace_Mix]^this.literal =  null;^262^^^^^261^265^this.literal = lit;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^this.name = node;^263^^^^^261^265^this.name = name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^this.value = value;this.name = name;^263^^^^^261^265^this.name = name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^name = node;this.name = name;^263^^^^^261^265^this.name = name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^this.lValue = lValue;this.name = name;^263^^^^^261^265^this.name = name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^this.value = name;^264^^^^^261^265^this.value = value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P8_Replace_Mix]^this.value =  lit;^264^^^^^261^265^this.value = value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^this.name = name;this.value = value;^264^^^^^261^265^this.value = value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^this.lValue = lValue;this.value = value;^264^^^^^261^265^this.value = value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( lit )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isVarDeclaration ( node )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P14_Delete_Statement]^^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( value )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( node.hasChildren (  <=  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of "  <<  node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of V" + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value.should be assigne" ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( literal.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node.newString (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.newString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( name.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P14_Delete_Statement]^^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( lit.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node .getLastChild (  )  , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^"VAR Declaration of " + value.getString (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P7_Replace_Invocation]^"VAR Declaration of " + node.newString (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P8_Replace_Mix]^"VAR Declaration of " + literal.newString (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P14_Delete_Statement]^^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P5_Replace_Variable]^name = name;^301^^^^^296^302^name = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P8_Replace_Mix]^name =  literal;^301^^^^^296^302^name = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^assignment = node;name = node;^301^^^^^296^302^name = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^function = node;name = node;^301^^^^^296^302^name = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P11_Insert_Donor_Statement]^this.name = name;name = node;^301^^^^^296^302^name = node;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  name  node  value  boolean  
[P2_Replace_Operator]^if  ( parent != null )  {^40^^^^^37^61^if  ( parent == null )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^if  ( name == true )  {^40^^^^^37^61^if  ( parent == null )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P15_Unwrap_Block]^return null;^40^41^42^^^37^61^if  ( parent == null )  { return null; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P16_Remove_Block]^^40^41^42^^^37^61^if  ( parent == null )  { return null; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return true;^41^^^^^37^61^return null;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return this;^41^^^^^37^61^return null;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^if  ( NodeUtil.isVarDeclaration ( n )  || n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^if  ( NodeUtil.isVarDeclaration ( name )  && n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^if  ( NodeUtil.isVarDeclaration ( n )  ) {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^if  (  n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^if  ( isFunction(parent) && parent.getFirstChild() == n )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^if  ( isAssign(parent) && parent.getFirstChild() == n )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^if  ( parent.getType() == LP )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunction ( n )  && n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( NodeUtil.isVarDeclaration ( n )  && n.newString (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( NodeUtil.isVarDeclaration ( n )  && n .getLastChild (  )   )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^if  ( NodeUtil.isVarDeclaration ( value )  ) {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if ( NodeUtil.isFunction ( parent )  || parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  != n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  >= n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  < n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if ( NodeUtil.isFunction ( n )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == name )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if ( NodeUtil.isFunction ( n )  && parent.getFirstChild (  )  == parent )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if ( NodeUtil.isFunction ( parent )  ) {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if (  parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if ( isAssign(parent) && parent.getFirstChild() == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if ( parent.getType() == LP )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if ( NodeUtil.isFunction ( parent )  && parent.newString (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if (  parent.getFirstChild (  )  == parent )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P15_Unwrap_Block]^if (!(com.google.javascript.jscomp.NodeUtil.isAnonymousFunction(parent))) {    return new com.google.javascript.jscomp.DefinitionsRemover.NamedFunctionDefinition(parent);}else    if (!(n.getString().equals(""))) {        return new com.google.javascript.jscomp.DefinitionsRemover.AnonymousFunctionDefinition(parent);    };^46^47^48^49^50^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  { if  ( !NodeUtil.isAnonymousFunction ( parent )  )  { return new NamedFunctionDefinition ( parent ) ; } else if  ( !n.getString (  ) .equals ( "" )  )  { return new AnonymousFunctionDefinition ( parent ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P16_Remove_Block]^^46^47^48^49^50^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  { if  ( !NodeUtil.isAnonymousFunction ( parent )  )  { return new NamedFunctionDefinition ( parent ) ; } else if  ( !n.getString (  ) .equals ( "" )  )  { return new AnonymousFunctionDefinition ( parent ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( NodeUtil.isAssign ( parent )  || parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  != n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( name )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == parent )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( n )  && parent.getFirstChild (  )  == parent )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if  ( NodeUtil.isAssign ( parent )  ) {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if  (  parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else if  ( parent.getType() == LP )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isAssign ( parent )  && parent.newString (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  (  parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^} else if  ( NodeUtil.isObjectLitKey (  parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^} else if  ( NodeUtil.isObjectLitKey ( n )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( value, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( n, node )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( parent, n )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( literal )   )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P15_Unwrap_Block]^return new com.google.javascript.jscomp.DefinitionsRemover.ObjectLiteralPropertyDefinition(parent, n, n.getNext());^54^55^56^57^58^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  { return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ; } else if  ( parent.getType (  )  == Token.LP )  { Node function = parent.getParent (  ) ; return new FunctionArgumentDefinition ( function, n ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P16_Remove_Block]^^54^55^56^57^58^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  { return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ; } else if  ( parent.getType (  )  == Token.LP )  { Node function = parent.getParent (  ) ; return new FunctionArgumentDefinition ( function, n ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  (  ( isAssign ( parent )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     return new AssignmentDefinition ( parent ) ; }else     if  ( isObjectLitKey ( n, parent )  )  {         return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;     }else         if  (  ( parent.getType (  )  )  ==  ( LP )  )  {             Node function = parent.getParent (  ) ;             return new FunctionArgumentDefinition ( function, n ) ;         }^54^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  (  ( parent.getType (  )  )  ==  ( LP )  )  {     Node function = parent.getParent (  ) ;     return new FunctionArgumentDefinition ( function, n ) ; }^54^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( ! ( isAnonymousFunction ( parent )  )  )  {     return new NamedFunctionDefinition ( parent ) ; }else     if  ( ! ( n.getString (  ) .equals ( "" )  )  )  {         return new AnonymousFunctionDefinition ( parent ) ;     }^54^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  != Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( n.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( parent.newString (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( parent .getString (  )   == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( name.newString (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node function = parent.getParent(); return new com.google.javascript.jscomp.DefinitionsRemover.FunctionArgumentDefinition(function, n);^56^57^58^59^^37^61^} else if  ( parent.getType (  )  == Token.LP )  { Node function = parent.getParent (  ) ; return new FunctionArgumentDefinition ( function, n ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P16_Remove_Block]^^56^57^58^59^^37^61^} else if  ( parent.getType (  )  == Token.LP )  { Node function = parent.getParent (  ) ; return new FunctionArgumentDefinition ( function, n ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( isObjectLitKey ( n, parent )  )  {     return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ; }else     if  (  ( parent.getType (  )  )  ==  ( LP )  )  {         Node function = parent.getParent (  ) ;         return new FunctionArgumentDefinition ( function, n ) ;     }^56^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return return  new AssignmentDefinition ( parent )  ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return new FunctionArgumentDefinition (  n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return new FunctionArgumentDefinition ( functio n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new FunctionArgumentDefinition ( value, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return valueew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return functionew FunctionArgumentDefinition ( n, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new AssignmentDefinition ( parent )  ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return parentew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node function = node.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^Node function = parent.newString (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = name.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node parent = assignment.getParent (  ) ;Node function = parent.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node parent = var.getParent (  ) ;Node function = parent.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node function = parent.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node function = value.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = literal.newString (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^57^58^^^^37^61^Node function = parent.getParent (  ) ; return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^function.detachFromParent (  ) ;Node function = parent.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new FunctionArgumentDefinition ( name, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return nameew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = name .getString (  )  ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( literal.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( name.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node function = n.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return return  new FunctionArgumentDefinition ( function, n )   ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return new ObjectLiteralPropertyDefinition (  n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return new ObjectLiteralPropertyDefinition ( parent,  n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new ObjectLiteralPropertyDefinition ( literal, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return valueew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return parentew ObjectLiteralPropertyDefinition ( n, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^return new ObjectLiteralPropertyDefinition ( parent, n, n.newString (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^return new ObjectLiteralPropertyDefinition ( parent, n, n .getParent (  )   ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new FunctionArgumentDefinition ( function, n )   ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new ObjectLiteralPropertyDefinition ( value, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return valueew ObjectLiteralPropertyDefinition ( parent, n, n .getParent (  )   ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return nameew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return literalew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  >= Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( n.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return nodeew FunctionArgumentDefinition ( function, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node function = literal.getParent (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new FunctionArgumentDefinition ( parent, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new ObjectLiteralPropertyDefinition ( name, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^Node function = parent .getString (  )  ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( literal, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return return  new VarDefinition ( n )  ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AssignmentDefinition ( value ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new VarDefinition ( n )  ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( ! ( n.getString (  ) .equals ( "" )  )  )  {     return new AnonymousFunctionDefinition ( parent ) ; }^53^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new AssignmentDefinition ( name ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( n, n )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  <= Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new FunctionArgumentDefinition ( node, n ) ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( value.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return nodeew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AssignmentDefinition ( literal ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new ObjectLiteralPropertyDefinition ( value, n, n.newString (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( node )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( value )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = node.newString (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^if  ( !NodeUtil.isAnonymousFunction ( literal )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^if  ( !NodeUtil.isAnonymousFunctioname ( parent )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( !NodeUtil.isFunction ( parent )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( !NodeUtil .isFunction ( name )   )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P15_Unwrap_Block]^return new com.google.javascript.jscomp.DefinitionsRemover.NamedFunctionDefinition(parent);^47^48^49^50^51^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  { return new NamedFunctionDefinition ( parent ) ; } else if  ( !n.getString (  ) .equals ( "" )  )  { return new AnonymousFunctionDefinition ( parent ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P16_Remove_Block]^^47^48^49^50^51^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  { return new NamedFunctionDefinition ( parent ) ; } else if  ( !n.getString (  ) .equals ( "" )  )  { return new AnonymousFunctionDefinition ( parent ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( isObjectLitKey ( n, parent )  )  {     return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ; }else     if  (  ( parent.getType (  )  )  ==  ( LP )  )  {         Node function = parent.getParent (  ) ;         return new FunctionArgumentDefinition ( function, n ) ;     }^47^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P6_Replace_Expression]^} else {^49^^^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( !n.newString (  ) .equals ( "" )  )  {^49^^^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( !n .newString ( 2 )  .equals ( "" )  )  {^49^^^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P15_Unwrap_Block]^return new com.google.javascript.jscomp.DefinitionsRemover.AnonymousFunctionDefinition(parent);^49^50^51^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  { return new AnonymousFunctionDefinition ( parent ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P16_Remove_Block]^^49^50^51^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  { return new AnonymousFunctionDefinition ( parent ) ; }^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return return  new AssignmentDefinition ( parent )  ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AnonymousFunctionDefinition ( literal ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new AssignmentDefinition ( parent )  ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( ! ( n.getString (  ) .equals ( "" )  )  )  {     return new AnonymousFunctionDefinition ( parent ) ; }^50^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AnonymousFunctionDefinition ( node ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new AnonymousFunctionDefinition ( n ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AnonymousFunctionDefinition ( name ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AnonymousFunctionDefinition ( value ) ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return return  new AssignmentDefinition ( parent )  ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new NamedFunctionDefinition ( literal ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new AssignmentDefinition ( parent )  ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( ! ( n.getString (  ) .equals ( "" )  )  )  {     return new AnonymousFunctionDefinition ( parent ) ; }^48^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new NamedFunctionDefinition ( n ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new NamedFunctionDefinition ( value ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^if  ( !NodeUtil.isFunction ( literal )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( !NodeUtil .isFunction ( assignment )   )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( !n.newString (  ) .equals ( "" )  )  {^49^^^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  > n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == node )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isAssign ( parent )  && parent .getLastChild (  )   == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( node, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( lit )   )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( node.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return parentew ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( lValue )   )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( NodeUtil.isObjectLitKey ( name, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AssignmentDefinition ( n ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( parent, parent )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isObjectLitKey ( n, value )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = n.newString (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = n .getString (  )  ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( name .getString (  )   == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return literalew ObjectLiteralPropertyDefinition ( parent, n, n.newString (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new AssignmentDefinition ( n )  ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  nodeew AssignmentDefinition ( parent )  ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new NamedFunctionDefinition ( name ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new NamedFunctionDefinition ( node ) ;^48^^^^^37^61^return new NamedFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if ( NodeUtil.isFunction ( literal )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if ( NodeUtil.isFunction ( value )  && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^if  ( !NodeUtil.isAnonymousFunction ( value )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( n )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( argumentName )   && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( NodeUtil.isAssign ( literal )  && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^return return  new AssignmentDefinition ( parent )  ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new AssignmentDefinition ( parent )  ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P13_Insert_Block]^if  ( ! ( n.getString (  ) .equals ( "" )  )  )  {     return new AnonymousFunctionDefinition ( parent ) ; }^45^^^^^37^61^[Delete]^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return literalew VarDefinition ( n ) ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return parentew VarDefinition ( n ) ;^45^^^^^37^61^return new VarDefinition ( n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == value )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if ( NodeUtil .isAnonymousFunction ( n )   && parent.getFirstChild (  )  == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if ( NodeUtil.isFunction ( parent )  && parent .getLastChild (  )   == n )  {^46^^^^^37^61^} else if ( NodeUtil.isFunction ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  >= n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == name )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.0 )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return literalew ObjectLiteralPropertyDefinition ( parent, n, n .getParent (  )   ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( parent.newString (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new ObjectLiteralPropertyDefinition ( node, n, n.getNext (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( NodeUtil .isFunction ( node )   )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return parentew ObjectLiteralPropertyDefinition ( parent, n, n.newString (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = value.newString (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = name.newString (  ) ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( node.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  valueew AssignmentDefinition ( parent )  ;^58^^^^^37^61^return new FunctionArgumentDefinition ( function, n ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( node )   && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( assignment )   )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( NodeUtil.isObjectLitKey ( n, literal )  )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^if  ( !NodeUtil.isAnonymousFunctioliteral ( parent )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  new AssignmentDefinition ( node )  ;^50^^^^^37^61^return new AnonymousFunctionDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^if  ( !NodeUtil.isAnonymousFunction ( n )  )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^if  ( !NodeUtil .isFunction ( argumentName )   )  {^47^^^^^37^61^if  ( !NodeUtil.isAnonymousFunction ( parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( !n .newString ( 1 )  .equals ( "" )  )  {^49^^^^^37^61^} else if  ( !n.getString (  ) .equals ( "" )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  < n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = node .getString (  )  ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return nameew ObjectLiteralPropertyDefinition ( parent, n, n .getParent (  )   ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return nameew ObjectLiteralPropertyDefinition ( parent, n, n.newString (  )  ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( NodeUtil .isFunction ( argumentName )   )  {^54^^^^^37^61^} else if  ( NodeUtil.isObjectLitKey ( n, parent )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  > Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.2 )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^}  if  ( value.getType (  )  == Token.LP )  {^56^^^^^37^61^} else if  ( parent.getType (  )  == Token.LP )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node function = value .getString (  )  ;^57^^^^^37^61^Node function = parent.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return  valueew FunctionArgumentDefinition ( function, n )    ) ;^55^^^^^37^61^return new ObjectLiteralPropertyDefinition ( parent, n, n.getNext (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new AssignmentDefinition ( node ) ;^53^^^^^37^61^return new AssignmentDefinition ( parent ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^if  ( NodeUtil.isVarDeclaration ( parent )  && n.hasChildren (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^if  ( NodeUtil.isVarDeclaration ( literal )  && n.newString (  )  )  {^44^^^^^37^61^if  ( NodeUtil.isVarDeclaration ( n )  && n.hasChildren (  )  )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( function )   && parent.getFirstChild (  )  == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^} else if  ( NodeUtil.isAssign ( name )  && parent .getLastChild (  )   == n )  {^52^^^^^37^61^} else if  ( NodeUtil.isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return false;^60^^^^^37^61^return null;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getDefinition [RETURN_TYPE] DefinitionsRemover$Definition   Node n Node parent [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return value;^103^^^^^102^104^return lValue;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return true;^108^^^^^107^109^return null;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Can't remove external name-only definition" )   ;^123^^^^^122^124^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Can't remove external nan't remove external name-only definition" ) ;^139^140^^^^138^141^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Can't remove an UnknownDefinition" )  ;^139^140^^^^138^141^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Can't remove external name-only definitionCan't remove external name-only defini" ) ;^139^140^^^^138^141^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^139^140^^^^138^141^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "unction" ) ;^157^158^^^^156^159^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Can't remove external name-only definition" )  ;^157^158^^^^156^159^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinitionefini" ) ;^157^158^^^^156^159^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^157^158^^^^156^159^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return name.getFirstChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^return function.getLastChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return n.getLastChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return n;^181^^^^^180^182^return function;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return name;^181^^^^^180^182^return function;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^function.getParent (  ) ;^196^^^^^195^197^function.detachFromParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^196^^^^^195^197^function.detachFromParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node function = parent.getParent (  ) ;function.detachFromParent (  ) ;^196^^^^^195^197^function.detachFromParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^function.replaceChild ( n.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^function.newString ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^function .replaceChild ( name , function )   ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^function.replaceChild ( function.getLastChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^function.replaceChild ( function.getFirstChild (  ) , Node.removeChild ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^function.replaceChild ( value.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^Node.removeChild ( Token.NAME, "" )  ) ;^215^^^^^212^216^Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^215^^^^^212^216^Node.newString ( Token.NAME, "" )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node parent = value.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^Node parent = assignment.getString (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node parent = n.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node last = assignment.getLastChild (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node function = parent.getParent (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node parent = var.getParent (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node parent = node.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node parent = name.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^233^234^^^^231^237^Node parent = assignment.getParent (  ) ; Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return assignment.getLastChild (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return assignment.getFirstChild (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node last = value.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^Node last = assignment.getFirstChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^Node last = name.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node parent = assignment.getParent (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node rValue = name.removeFirstChild (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^234^235^^^^231^237^Node last = assignment.getLastChild (  ) ; assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return assignment.getLastChild (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return assignment.getFirstChild (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return name.getFirstChild (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^assignment.replaceChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^assignment.removeChild ( value ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return assignment.getLastChild (  ) ;assignment.removeChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^return assignment.getFirstChild (  ) ;assignment.removeChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^literal.removeChild ( value ) ;assignment.removeChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^literal.removeChild ( name ) ;assignment.removeChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^parent.replaceChild ( assignment, value ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^parent.replaceChild ( name, last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^parent.replaceChild ( assignment ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^parent.replaceChild (  last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^parent.replaceChild ( last, assignment ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^parent.replaceChild ( value, last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;parent.replaceChild ( assignment, last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return parent.getFirstChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^return assignment.getLastChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return name.getFirstChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return name.getLastChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return n.getLastChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^return assignment.getFirstChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^literal.removeChild ( n ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^literal.removeFirstChild ( name ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^literal.removeFirstChild ( value ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^269^270^^^^268^271^literal.removeChild ( name ) ; literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^literal.removeChild ( value ) ;literal.removeChild ( name ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^assignment.removeChild ( last ) ;literal.removeChild ( name ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^literal.removeChild ( n ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^literal.removeFirstChild ( value ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^literal .removeFirstChild (  )  ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^literal.removeChild ( node ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^assignment.removeChild ( last ) ;literal.removeChild ( value ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P11_Insert_Donor_Statement]^literal.removeChild ( name ) ;literal.removeChild ( value ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , value.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new Node ( Token. new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) .cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.getNext (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , n.getNext (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new Node ( Token.GETPROP, new Node ( Token.0 ) , name.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , literal.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return new Node ( Token.GETPROP, new Node ( Token.0 ) , name.getNext (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P7_Replace_Invocation]^name.getNext (  )  ) ;^282^^^^^274^283^name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P14_Delete_Statement]^^282^^^^^274^283^name.cloneNode (  )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^return literal;^287^^^^^286^288^return value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P8_Replace_Mix]^return parent;^287^^^^^286^288^return value;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  value  boolean  
[P5_Replace_Variable]^Node var = n.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Node var = name.getString (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node parent = assignment.getParent (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node last = assignment.getLastChild (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node function = parent.getParent (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node parent = var.getParent (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node rValue = name.removeFirstChild (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Node var = var.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Node var = n .getString (  )  ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P2_Replace_Operator]^Preconditions.checkState ( var.getFirstChild (  )  != var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P3_Replace_Literal]^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "A" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( value.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var.newString (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var .getLastChild (  )   == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var.getFirstChild (  )  == var.newString (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var.getFirstChild (  )  == var .getFirstChild (  )  , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( node.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( name.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( n.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Node parent = var.newString (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Node parent = var .getString (  )  ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Node parent = name.newString (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node parent = assignment.getParent (  ) ;Node parent = var.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node function = parent.getParent (  ) ;Node parent = var.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node parent = var.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Node parent = value.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^309^310^^^^305^313^Node parent = var.getParent (  ) ; Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Node rValue = var.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Node rValue = name.getFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Node rValue = value .getFirstChild (  )  ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node last = assignment.getLastChild (  ) ;Node rValue = name.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node rValue = name.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Node rValue = n.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^return name.getFirstChild (  ) ;Node rValue = name.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P2_Replace_Operator]^Preconditions.checkState ( parent.getType (  )  == Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( parent.getType (  )  != Token.null ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( parent.newString (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( parent .getString (  )   != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( n.getType (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( name.getType (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( var.newString (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^311^312^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ; parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^parent.replaceChild ( n, NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^parent.replaceChild ( var, NodeUtil.newExpr ( name )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^parent.replaceChild (  NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^parent .replaceChild (  )  ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^parent.replaceChild ( var, NodeUtil.isName ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^parent.replaceChild ( name, NodeUtil.isName ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P11_Insert_Donor_Statement]^parent.replaceChild ( assignment, last ) ;parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^parent.replaceChild ( var, NodeUtil.newExpr ( n )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^parent.replaceChild ( var, NodeUtil .isVarDeclaration ( assignment )   ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^parent.replaceChild ( var, NodeUtil.newExpr ( parent )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^return n;^317^^^^^316^318^return name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^return var;^317^^^^^316^318^return name;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^return rValue.getFirstChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^return name.getLastChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P5_Replace_Variable]^return n.getFirstChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^return value.getLastChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P14_Delete_Statement]^^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] DefinitionsRemover IncompleteDefinition UnknownDefinition ExternalNameOnlyDefinition FunctionArgumentDefinition FunctionDefinition NamedFunctionDefinition AnonymousFunctionDefinition AssignmentDefinition ObjectLiteralPropertyDefinition VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P8_Replace_Mix]^private static final Set<Integer> ALLOWED_TYPES ;^89^90^^^^89^90^private static final Set<Integer> ALLOWED_TYPES = ImmutableSet.of ( Token.NAME, Token.GETPROP, Token.GETELEM ) ;^[CLASS] IncompleteDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  argumentName  assignment  function  lValue  last  lit  literal  n  name  node  parent  rValue  value  var  boolean  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )  ;^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P14_Delete_Statement]^^94^^^^^93^99^Preconditions.checkNotNull ( lValue ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  ||  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type e" + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( lValue.contains ( ALLOWED_TYPES.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P8_Replace_Mix]^Preconditions .checkNotNull ( lValue )  , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P14_Delete_Statement]^^95^96^97^^^93^99^Preconditions.checkArgument ( ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P14_Delete_Statement]^^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P11_Insert_Donor_Statement]^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^96^97^^^^93^99^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P14_Delete_Statement]^^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P11_Insert_Donor_Statement]^ALLOWED_TYPES.contains ( lValue.getType (  )  ) , "Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^97^^^^^93^99^"Unexpected lValue type " + Token.name ( lValue.getType (  )  )  ) ;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P8_Replace_Mix]^this.lValue =  null;^98^^^^^93^99^this.lValue = lValue;^[CLASS] IncompleteDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P8_Replace_Mix]^return false;^108^^^^^107^109^return null;^[CLASS] IncompleteDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Set  ALLOWED_TYPES  Node  lValue  boolean  
[P14_Delete_Statement]^^118^^^^^117^119^super ( lValue ) ;^[CLASS] UnknownDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] boolean  Node  lValue  
[P14_Delete_Statement]^^134^^^^^133^135^super ( lValue ) ;^[CLASS] ExternalNameOnlyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lValue [VARIABLES] boolean  Node  lValue  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Can't rean't remove external name-only definition" ) ;^139^140^^^^138^141^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^[CLASS] ExternalNameOnlyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "'t reman't remove external name-only definition" ) ;^139^140^^^^138^141^throw new IllegalArgumentException ( "Can't remove external name-only definition" ) ;^[CLASS] ExternalNameOnlyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P5_Replace_Variable]^super ( function ) ;^150^^^^^149^153^super ( argumentName ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P14_Delete_Statement]^^150^^^^^149^153^super ( argumentName ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isFunction ( argumentName )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isName ( function )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .isName ( argumentName )   ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P14_Delete_Statement]^^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^151^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isName ( function )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.isFunction ( argumentName )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P14_Delete_Statement]^^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .isFunction ( function )   ) ;^152^^^^^149^153^Preconditions.checkArgument ( NodeUtil.isName ( argumentName )  ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node function Node argumentName [VARIABLES] boolean  Node  argumentName  function  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " FunctionArgan't remove a FunctionArgumentDefinition" ) ;^157^158^^^^156^159^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" ) ;^157^158^^^^156^159^throw new IllegalArgumentException ( "Can't remove a FunctionArgumentDefinition" ) ;^[CLASS] FunctionArgumentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^private final Node function;^167^^^^^162^172^protected final Node function;^[CLASS] FunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( NodeUtil.isFunction ( function )  ) ;^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[P14_Delete_Statement]^^170^171^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ; function = node;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[P14_Delete_Statement]^^170^^^^^169^172^Preconditions.checkArgument ( NodeUtil.isFunction ( node )  ) ;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[P5_Replace_Variable]^function = function;^171^^^^^169^172^function = node;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[P8_Replace_Mix]^function =  null;^171^^^^^169^172^function = node;^[CLASS] FunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  function  node  boolean  
[P5_Replace_Variable]^return node.getFirstChild (  ) ;^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] FunctionDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  function  node  boolean  
[P14_Delete_Statement]^^176^^^^^175^177^return function.getFirstChild (  ) ;^[CLASS] FunctionDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  function  node  boolean  
[P5_Replace_Variable]^return node;^181^^^^^180^182^return function;^[CLASS] FunctionDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  function  node  boolean  
[P14_Delete_Statement]^^191^^^^^190^192^super ( node ) ;^[CLASS] NamedFunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] boolean  Node  node  
[P14_Delete_Statement]^^196^^^^^195^197^function.detachFromParent (  ) ;^[CLASS] NamedFunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P14_Delete_Statement]^^206^^^^^205^209^super ( node ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] boolean  Node  node  
[P14_Delete_Statement]^^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] boolean  Node  node  
[P11_Insert_Donor_Statement]^NodeUtil.isAnonymousFunction ( node )  ) ;Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^207^208^^^^205^209^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] boolean  Node  node  
[P14_Delete_Statement]^^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] boolean  Node  node  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( NodeUtil.isAnonymousFunction ( node )  ) ;NodeUtil.isAnonymousFunction ( node )  ) ;^208^^^^^205^209^NodeUtil.isAnonymousFunction ( node )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] boolean  Node  node  
[P7_Replace_Invocation]^function.newString ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P7_Replace_Invocation]^function .getFirstChild (  )   ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P7_Replace_Invocation]^function.replaceChild ( function.replaceChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P14_Delete_Statement]^^214^215^^^^212^216^function.replaceChild ( function.getFirstChild (  ) , Node.newString ( Token.NAME, "" )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P14_Delete_Statement]^^215^^^^^212^216^Node.newString ( Token.NAME, "" )  ) ;^[CLASS] AnonymousFunctionDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isAssign ( assignment )  ) ;^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[P14_Delete_Statement]^^226^^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[P14_Delete_Statement]^^226^227^^^^225^228^Preconditions.checkArgument ( NodeUtil.isAssign ( node )  ) ; assignment = node;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[P5_Replace_Variable]^assignment = assignment;^227^^^^^225^228^assignment = node;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[P8_Replace_Mix]^assignment =  null;^227^^^^^225^228^assignment = node;^[CLASS] AssignmentDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  assignment  node  boolean  
[P5_Replace_Variable]^Node parent = node.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P7_Replace_Invocation]^Node parent = assignment.getLastChild (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node last = assignment.getLastChild (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P14_Delete_Statement]^^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^return assignment.getLastChild (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^return assignment.getFirstChild (  ) ;Node parent = assignment.getParent (  ) ;^233^^^^^231^237^Node parent = assignment.getParent (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^Node last = parent.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P7_Replace_Invocation]^Node last = assignment.getFirstChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^Node parent = assignment.getParent (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P14_Delete_Statement]^^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^return assignment.getLastChild (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^return assignment.getFirstChild (  ) ;Node last = assignment.getLastChild (  ) ;^234^^^^^231^237^Node last = assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^assignment.removeChild ( parent ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P14_Delete_Statement]^^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^return assignment.getLastChild (  ) ;assignment.removeChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P11_Insert_Donor_Statement]^return assignment.getFirstChild (  ) ;assignment.removeChild ( last ) ;^235^^^^^231^237^assignment.removeChild ( last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^parent.replaceChild ( assignment, parent ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^parent.replaceChild ( assignment ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^parent.replaceChild (  last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^parent.replaceChild ( last, assignment ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P7_Replace_Invocation]^parent .getLastChild (  )  ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P8_Replace_Mix]^parent.replaceChild ( parent, last ) ;^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P14_Delete_Statement]^^236^^^^^231^237^parent.replaceChild ( assignment, last ) ;^[CLASS] AssignmentDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^return parent.getFirstChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P7_Replace_Invocation]^return assignment.getLastChild (  ) ;^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P14_Delete_Statement]^^241^^^^^240^242^return assignment.getFirstChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^return parent.getLastChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P7_Replace_Invocation]^return assignment.getFirstChild (  ) ;^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P14_Delete_Statement]^^246^^^^^245^247^return assignment.getLastChild (  ) ;^[CLASS] AssignmentDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P8_Replace_Mix]^private  Node literal;^256^^^^^251^261^private final Node literal;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P8_Replace_Mix]^private  Node name;^257^^^^^252^262^private final Node name;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P8_Replace_Mix]^private  Node value;^258^^^^^253^263^private final Node value;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  assignment  last  node  parent  boolean  
[P5_Replace_Variable]^this.literal = value;^262^^^^^261^265^this.literal = lit;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^this.name = value;^263^^^^^261^265^this.name = name;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^this.value = value;this.name = name;^263^^^^^261^265^this.name = name;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^this.value = name;^264^^^^^261^265^this.value = value;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^this.name = name;this.value = value;^264^^^^^261^265^this.value = value;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node lit Node name Node value [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^literal.removeChild ( value ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P7_Replace_Invocation]^literal.cloneNode ( name ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P8_Replace_Mix]^literal.cloneNode ( value ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P14_Delete_Statement]^^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^literal.removeChild ( value ) ;literal.removeChild ( name ) ;^269^^^^^268^271^literal.removeChild ( name ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^literal.removeChild ( name ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P7_Replace_Invocation]^literal.cloneNode ( value ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P8_Replace_Mix]^literal.cloneNode ( name ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P14_Delete_Statement]^^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P11_Insert_Donor_Statement]^literal.removeChild ( name ) ;literal.removeChild ( value ) ;^270^^^^^268^271^literal.removeChild ( value ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , value.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^return new Node ( Token. new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) .cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P7_Replace_Invocation]^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name .removeChild ( lit )   ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P8_Replace_Mix]^return new Node ( Token.GETPROP, new Node ( Token.null ) , name.cloneNode (  )  ) ;^280^281^282^^^274^283^return new Node ( Token.GETPROP, new Node ( Token.OBJECTLIT ) , name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P14_Delete_Statement]^^282^^^^^274^283^name.cloneNode (  )  ) ;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P8_Replace_Mix]^return name;^287^^^^^286^288^return value;^[CLASS] ObjectLiteralPropertyDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  lit  literal  name  value  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( name )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( NodeUtil.isVarDeclaration ( node )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil.newExpr ( node )  ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( NodeUtil .newExpr ( name )   ) ;^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P14_Delete_Statement]^^297^^^^^296^302^Preconditions.checkArgument ( NodeUtil.isVarDeclaration ( node )  ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( node.hasChildren (  ==  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of "  >  node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( node.hasChildren (  ) , "clara" + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "shohould be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( name.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node.replaceChild (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node .getLastChild (  )  , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.replaceChild (  )  + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node .getParent (  )   + "should be assigned a value." ) ;^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P14_Delete_Statement]^^298^299^300^^^296^302^Preconditions.checkArgument ( node.hasChildren (  ) , "VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P5_Replace_Variable]^"VAR Declaration of " + name.getString (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P7_Replace_Invocation]^"VAR Declaration of " + node.replaceChild (  )  + "should be assigned a value." ) ;^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P14_Delete_Statement]^^299^300^^^^296^302^"VAR Declaration of " + node.getString (  )  + "should be assigned a value." ) ;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P5_Replace_Variable]^name = name;^301^^^^^296^302^name = node;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P8_Replace_Mix]^name =  null;^301^^^^^296^302^name = node;^[CLASS] VarDefinition  [METHOD] <init> [RETURN_TYPE] Node)   Node node [VARIABLES] Node  name  node  boolean  
[P5_Replace_Variable]^Node var = rValue.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Node var = name.getString (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P11_Insert_Donor_Statement]^Node parent = var.getParent (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P11_Insert_Donor_Statement]^Node rValue = name.removeFirstChild (  ) ;Node var = name.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^Node var = var.getParent (  ) ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P8_Replace_Mix]^Node var = var .getString (  )  ;^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^306^^^^^305^313^Node var = name.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P2_Replace_Operator]^Preconditions.checkState ( var.getFirstChild (  )  < var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P3_Replace_Literal]^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized firstalized fi" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( rValue.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var.replaceChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var.getFirstChild (  )  == var.replaceChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( var.getFirstChild (  )  == var .getFirstChild (  )  , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( rValue .getLastChild (  )   == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( parent.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^307^308^^^^305^313^Preconditions.checkState ( var.getFirstChild (  )  == var.getLastChild (  ) , "AST should be normalized first" ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^Node parent = rValue.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Node parent = var.replaceChild (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node parent = var.getParent (  ) ;^309^^^^^305^313^Node parent = var.getParent (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^309^310^^^^305^313^Node parent = var.getParent (  ) ; Node rValue = name.removeFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^Node rValue = var.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Node rValue = name.getFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P11_Insert_Donor_Statement]^Node var = name.getParent (  ) ;Node rValue = name.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^310^311^^^^305^313^Node rValue = name.removeFirstChild (  ) ; Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P11_Insert_Donor_Statement]^return name.getFirstChild (  ) ;Node rValue = name.removeFirstChild (  ) ;^310^^^^^305^313^Node rValue = name.removeFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P2_Replace_Operator]^Preconditions.checkState ( parent.getType (  )  <= Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^Preconditions.checkState ( var.getType (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )  ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( parent.replaceChild (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^311^312^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ; parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^Preconditions.checkState ( parent .getString (  )   != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P8_Replace_Mix]^Preconditions.checkState ( var.replaceChild (  )  != Token.FOR ) ;^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^311^^^^^305^313^Preconditions.checkState ( parent.getType (  )  != Token.FOR ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^parent.replaceChild ( parent, NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^parent.replaceChild ( var, NodeUtil.newExpr ( parent )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^parent.replaceChild (  NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P8_Replace_Mix]^parent.replaceChild ( rValue, NodeUtil.newExpr ( rValue )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^parent.replaceChild ( var, NodeUtil.newExpr ( var )  ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^parent.replaceChild ( var, NodeUtil .isVarDeclaration ( rValue )   ) ;^312^^^^^305^313^parent.replaceChild ( var, NodeUtil.newExpr ( rValue )  ) ;^[CLASS] VarDefinition  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^return var;^317^^^^^316^318^return name;^[CLASS] VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P8_Replace_Mix]^return rValue;^317^^^^^316^318^return name;^[CLASS] VarDefinition  [METHOD] getLValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P5_Replace_Variable]^return var.getFirstChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P7_Replace_Invocation]^return name.getLastChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P8_Replace_Mix]^return var.getLastChild (  ) ;^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
[P14_Delete_Statement]^^322^^^^^321^323^return name.getFirstChild (  ) ;^[CLASS] VarDefinition  [METHOD] getRValue [RETURN_TYPE] Node   [VARIABLES] Node  name  node  parent  rValue  var  boolean  
