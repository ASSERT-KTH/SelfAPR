[P8_Replace_Mix]^Scope topScope = true;^44^^^^^39^49^Scope topScope = null;^[CLASS] PassConfig PassConfigDelegate State   [VARIABLES] 
[P1_Replace_Type]^private static final  short  serialVersionUID = 1L;^187^^^^^182^192^private static final long serialVersionUID = 1L;^[CLASS] PassConfig PassConfigDelegate State   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 1;^187^^^^^182^192^private static final long serialVersionUID = 1L;^[CLASS] PassConfig PassConfigDelegate State   [VARIABLES] 
[P8_Replace_Mix]^CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator;^191^^^^^186^196^final CrossModuleMethodMotion.IdGenerator crossModuleIdGenerator;^[CLASS] PassConfig PassConfigDelegate State   [VARIABLES] 
[P8_Replace_Mix]^VariableMap variableMap;^192^^^^^187^197^final VariableMap variableMap;^[CLASS] PassConfig PassConfigDelegate State   [VARIABLES] 
[P8_Replace_Mix]^VariableMap anonymousFunctionNameMap;^194^^^^^189^199^final VariableMap anonymousFunctionNameMap;^[CLASS] PassConfig PassConfigDelegate State   [VARIABLES] 
[P8_Replace_Mix]^this.options =  null;^47^^^^^46^48^this.options = options;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] CompilerOptions)   CompilerOptions options [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.options = options;^47^^^^^46^48^this.options = options;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] CompilerOptions)   CompilerOptions options [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^super ( options ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^super ( delegate.options.options ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^super ( delegate ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^154^155^^^^153^156^super ( delegate.options ) ; this.delegate = delegate;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^return delegate.getOptimizations (  ) ;super ( delegate.options ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.delegate =  null;^155^^^^^153^156^this.delegate = delegate;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.cssNames =  null;^201^^^^^197^208^this.cssNames = cssNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.exportedNames = exportedNames;this.cssNames = cssNames;^201^^^^^197^208^this.cssNames = cssNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.cssNames = cssNames;^201^^^^^197^208^this.cssNames = cssNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.exportedNames =  null;^202^^^^^197^208^this.exportedNames = exportedNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.exportedNames = exportedNames;^202^^^^^197^208^this.exportedNames = exportedNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.cssNames = cssNames;this.exportedNames = exportedNames;^202^^^^^197^208^this.exportedNames = exportedNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.crossModuleIdGenerator =  null;^203^^^^^197^208^this.crossModuleIdGenerator = crossModuleIdGenerator;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^this.variableMap = propertyMap;^204^^^^^197^208^this.variableMap = variableMap;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^this.propertyMap = variableMap;^205^^^^^197^208^this.propertyMap = propertyMap;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^this.anonymousFunctionNameMap = variableMap;^206^^^^^197^208^this.anonymousFunctionNameMap = anonymousFunctionNameMap;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.anonymousFunctionNameMap = anonymousFunctionNameMap;^206^^^^^197^208^this.anonymousFunctionNameMap = anonymousFunctionNameMap;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.functionNames =  null;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.exportedNames = exportedNames;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.options = options;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.cssNames = cssNames;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.anonymousFunctionNameMap = anonymousFunctionNameMap;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return new TypeInferencePass (  compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^88^89^90^^^87^91^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) ,  typedScopeCreator ) ;^88^89^90^^^87^91^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope ) ;^88^89^90^^^87^91^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return new TypeInferencePass ( topScope, compiler.getReverseAbstractInterpreter (  ) , compiler, typedScopeCreator ) ;^88^89^90^^^87^91^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return new TypeInferencePass ( typedScopeCreator, compiler.getReverseAbstractInterpreter (  ) , topScope, compiler ) ;^88^89^90^^^87^91^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^return new TypeInferencePass ( compiler, compiler .getTypeRegistry (  )  , topScope, typedScopeCreator ) ;^88^89^90^^^87^91^return new TypeInferencePass ( compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^compiler, compiler .getTypeRegistry (  )  , topScope, typedScopeCreator ) ;^89^90^^^^87^91^compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^89^90^^^^87^91^compiler, compiler.getReverseAbstractInterpreter (  ) , topScope, typedScopeCreator ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeInference [RETURN_TYPE] TypeInferencePass   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return new TypeCheck (  compiler.getReverseAbstractInterpreter (  ) , compiler.getTypeRegistry (  ) ,^97^98^99^100^^96^107^return new TypeCheck ( compiler, compiler.getReverseAbstractInterpreter (  ) , compiler.getTypeRegistry (  ) ,^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^return new TypeCheck ( compiler, compiler .getTypeRegistry (  )  , compiler.getTypeRegistry (  ) ,^97^98^99^100^^96^107^return new TypeCheck ( compiler, compiler.getReverseAbstractInterpreter (  ) , compiler.getTypeRegistry (  ) ,^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^return new TypeCheck ( compiler, compiler.getReverseAbstractInterpreter (  ) , compiler .getReverseAbstractInterpreter (  )  ,^97^98^99^100^^96^107^return new TypeCheck ( compiler, compiler.getReverseAbstractInterpreter (  ) , compiler.getTypeRegistry (  ) ,^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )  , compiler.getTypeRegistry (  ) , topScope, typedScopeCreator,^99^100^101^102^^96^107^compiler.getReverseAbstractInterpreter (  ) , compiler.getTypeRegistry (  ) , topScope, typedScopeCreator,^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler .getReverseAbstractInterpreter (  )  , topScope, typedScopeCreator, options.reportMissingOverride,^100^101^102^103^^96^107^compiler.getTypeRegistry (  ) , topScope, typedScopeCreator, options.reportMissingOverride,^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^105^106^^^^96^107^.reportMissingProperties ( options.enables ( DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;.reportMissingProperties ( options.enables ( DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;^105^106^^^^96^107^.reportMissingProperties ( options.enables ( DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^106^107^^^^96^107^DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ; }^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^.reportMissingProperties ( options.enables ( DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;^106^^^^^96^107^DiagnosticGroup.forType ( TypeCheck.INEXISTENT_PROPERTY )  )  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] makeTypeCheck [RETURN_TYPE] TypeCheck   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( i.get ( factoryList ) .getName (  ) .equals ( passName )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( factoryList.get ( passName ) .getName (  ) .equals ( i )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( passName.get ( i ) .getName (  ) .equals ( factoryList )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( passNameList.get ( i ) .getName (  ) .equals ( factory )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( factoryList.get ( i ) .getName (  )  .getName (  )   )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( factoryList.get ( i )  .equals ( passName )  .equals ( passName )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P15_Unwrap_Block]^factoryList.add(i, factory); return ;^112^113^114^115^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  { factoryList.add ( i, factory ) ; return; }^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P16_Remove_Block]^^112^113^114^115^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  { factoryList.add ( i, factory ) ; return; }^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^factoryList.add (  factory ) ;^113^^^^^109^120^factoryList.add ( i, factory ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^factoryList.add ( i ) ;^113^^^^^109^120^factoryList.add ( i, factory ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P14_Delete_Statement]^^113^^^^^109^120^factoryList.add ( i, factory ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P1_Replace_Type]^for  (  short  i = 0; i < factoryList.size (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P2_Replace_Operator]^for  ( int i = 0; i == factoryList.size (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^for  ( int i = i; i < factoryList.size (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^for  ( int i = 0; i < factoryList.size() - 6 ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^for  ( factoryListnt i = 0; i < i.size (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^for  ( int i = 0; i < factoryListList.size (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P7_Replace_Invocation]^for  ( int i = 0; i < factoryList.get (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( iList.get ( factory ) .getName (  ) .equals ( passName )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^factoryList.add ( factory, i ) ;^113^^^^^109^120^factoryList.add ( i, factory ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( null.get ( i ) .getName (  ) .equals ( passName )  )  {^112^^^^^109^120^if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P14_Delete_Statement]^^113^114^^^^109^120^factoryList.add ( i, factory ) ; return;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P1_Replace_Type]^for  (  long  i = 0; i < factoryList.size (  ) ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^for  ( int i = 0; i < factoryList.size() - 8 ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^for  ( int i = 0; i < factoryList.size() - 2 ; i++ )  {^111^^^^^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P14_Delete_Statement]^^111^112^113^114^115^109^120^for  ( int i = 0; i < factoryList.size (  ) ; i++ )  { if  ( factoryList.get ( i ) .getName (  ) .equals ( passName )  )  { factoryList.add ( i, factory ) ; return; }^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "No factory named '"  <  passName  <  "' in the factory list" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "No factory named '"  >=  passName + "' in the factory list" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "factory nameo factory named '" + passName + "' in the factory list" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "No factory named '" + passName + "' in th" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "No factory named '"  >>  passName  >>  "' in the factory list" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "No factory named '"  <  passName + "' in the factory list" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "No factory named 'ry " + passName + "' in the factory list" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "No factory named '" + passName + "n" ) ;^118^119^^^^109^120^throw new IllegalArgumentException ( "No factory named '" + passName + "' in the factory list" ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] addPassFactoryBefore [RETURN_TYPE] void   PassFactory> factoryList PassFactory factory String passName [VARIABLES] Set  exportedNames  PassConfig  delegate  IdGenerator  crossModuleIdGenerator  String  passName  MemoizedScopeCreator  typedScopeCreator  PassFactory  factory  long  serialVersionUID  int  i  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  List  factoryList  Map  cssNames  FunctionNames  functionNames  
[P2_Replace_Operator]^while  ( current  >>  PassConfigDelegate )  {^127^^^^^125^131^while  ( current instanceof PassConfigDelegate )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getBasePassConfig [RETURN_TYPE] PassConfig   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^while  ( delegate instanceof PassConfigDelegate )  {^127^^^^^125^131^while  ( current instanceof PassConfigDelegate )  {^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getBasePassConfig [RETURN_TYPE] PassConfig   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^current =   (  ( PassConfigDelegate )  current ) .delegate;^128^^^^^125^131^current =  (  ( PassConfigDelegate )  current ) .delegate;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getBasePassConfig [RETURN_TYPE] PassConfig   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return delegate;^130^^^^^125^131^return current;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getBasePassConfig [RETURN_TYPE] PassConfig   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return current.getChecks (  ) ;^159^^^^^158^160^return delegate.getChecks (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getChecks [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^return delegate.getTopScope (  ) ;^159^^^^^158^160^return delegate.getChecks (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getChecks [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^return current.getTopScope (  ) ;^159^^^^^158^160^return delegate.getChecks (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getChecks [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^159^^^^^158^160^return delegate.getChecks (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getChecks [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return current.getOptimizations (  ) ;^163^^^^^162^164^return delegate.getOptimizations (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getOptimizations [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^return delegate.getScopeCreator (  ) ;^163^^^^^162^164^return delegate.getOptimizations (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getOptimizations [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^return current.getScopeCreator (  ) ;^163^^^^^162^164^return delegate.getOptimizations (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getOptimizations [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^163^^^^^162^164^return delegate.getOptimizations (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getOptimizations [RETURN_TYPE] List   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return current.getScopeCreator (  ) ;^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^return delegate.getChecks (  ) ;^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^return current.getChecks (  ) ;^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return current.getTopScope (  ) ;^171^^^^^170^172^return delegate.getTopScope (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getTopScope [RETURN_TYPE] Scope   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^return delegate.getChecks (  ) ;^171^^^^^170^172^return delegate.getTopScope (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getTopScope [RETURN_TYPE] Scope   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^171^^^^^170^172^return delegate.getTopScope (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getTopScope [RETURN_TYPE] Scope   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^return current.getIntermediateState (  ) ;^175^^^^^174^176^return delegate.getIntermediateState (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getIntermediateState [RETURN_TYPE] PassConfig$State   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^return delegate.getOptimizations (  ) ;^175^^^^^174^176^return delegate.getIntermediateState (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getIntermediateState [RETURN_TYPE] PassConfig$State   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^return delegate .setIntermediateState ( 1 )  ;^175^^^^^174^176^return delegate.getIntermediateState (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getIntermediateState [RETURN_TYPE] PassConfig$State   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^175^^^^^174^176^return delegate.getIntermediateState (  ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] getIntermediateState [RETURN_TYPE] PassConfig$State   [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P7_Replace_Invocation]^delegate.makeTypeInference ( state ) ;^179^^^^^178^180^delegate.setIntermediateState ( state ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  State  state  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P14_Delete_Statement]^^179^^^^^178^180^delegate.setIntermediateState ( state ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  State  state  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^return delegate.getIntermediateState (  ) ;delegate.setIntermediateState ( state ) ;^179^^^^^178^180^delegate.setIntermediateState ( state ) ;^[CLASS] PassConfig PassConfigDelegate State  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] Set  exportedNames  boolean  Scope  topScope  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  State  state  CompilerOptions  options  PassConfig  current  delegate  IdGenerator  crossModuleIdGenerator  MemoizedScopeCreator  typedScopeCreator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^super ( this ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfigDelegate  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] PassConfig  delegate  boolean  
[P5_Replace_Variable]^super ( delegate.options.options ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfigDelegate  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] PassConfig  delegate  boolean  
[P5_Replace_Variable]^super ( delegate ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfigDelegate  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^154^155^^^^153^156^super ( delegate.options ) ; this.delegate = delegate;^[CLASS] PassConfigDelegate  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] PassConfig  delegate  boolean  
[P11_Insert_Donor_Statement]^return delegate.getOptimizations (  ) ;super ( delegate.options ) ;^154^^^^^153^156^super ( delegate.options ) ;^[CLASS] PassConfigDelegate  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] PassConfig  delegate  boolean  
[P8_Replace_Mix]^this.delegate =  null;^155^^^^^153^156^this.delegate = delegate;^[CLASS] PassConfigDelegate  [METHOD] <init> [RETURN_TYPE] PassConfig)   PassConfig delegate [VARIABLES] PassConfig  delegate  boolean  
[P7_Replace_Invocation]^return delegate.getTopScope (  ) ;^159^^^^^158^160^return delegate.getChecks (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getChecks [RETURN_TYPE] List   [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^159^^^^^158^160^return delegate.getChecks (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getChecks [RETURN_TYPE] List   [VARIABLES] PassConfig  delegate  boolean  
[P7_Replace_Invocation]^return delegate.getScopeCreator (  ) ;^163^^^^^162^164^return delegate.getOptimizations (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getOptimizations [RETURN_TYPE] List   [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^163^^^^^162^164^return delegate.getOptimizations (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getOptimizations [RETURN_TYPE] List   [VARIABLES] PassConfig  delegate  boolean  
[P7_Replace_Invocation]^return delegate.getTopScope (  ) ;^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] PassConfig  delegate  boolean  
[P7_Replace_Invocation]^return delegate .getChecks (  )  ;^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^167^^^^^166^168^return delegate.getScopeCreator (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getScopeCreator [RETURN_TYPE] ScopeCreator   [VARIABLES] PassConfig  delegate  boolean  
[P7_Replace_Invocation]^return delegate.getScopeCreator (  ) ;^171^^^^^170^172^return delegate.getTopScope (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getTopScope [RETURN_TYPE] Scope   [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^171^^^^^170^172^return delegate.getTopScope (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getTopScope [RETURN_TYPE] Scope   [VARIABLES] PassConfig  delegate  boolean  
[P7_Replace_Invocation]^return delegate.getOptimizations (  ) ;^175^^^^^174^176^return delegate.getIntermediateState (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getIntermediateState [RETURN_TYPE] PassConfig$State   [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^175^^^^^174^176^return delegate.getIntermediateState (  ) ;^[CLASS] PassConfigDelegate  [METHOD] getIntermediateState [RETURN_TYPE] PassConfig$State   [VARIABLES] PassConfig  delegate  boolean  
[P14_Delete_Statement]^^179^^^^^178^180^delegate.setIntermediateState ( state ) ;^[CLASS] PassConfigDelegate  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] PassConfig  delegate  State  state  boolean  
[P11_Insert_Donor_Statement]^return delegate.getIntermediateState (  ) ;delegate.setIntermediateState ( state ) ;^179^^^^^178^180^delegate.setIntermediateState ( state ) ;^[CLASS] PassConfigDelegate  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] PassConfig  delegate  State  state  boolean  
[P1_Replace_Type]^private static final  short  serialVersionUID = 1L;^187^^^^^182^192^private static final long serialVersionUID = 1L;^[CLASS] State  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] PassConfig  delegate  State  state  boolean  
[P8_Replace_Mix]^private static final  short  serialVersionUID = 1;^187^^^^^182^192^private static final long serialVersionUID = 1L;^[CLASS] State  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] PassConfig  delegate  State  state  boolean  
[P8_Replace_Mix]^FunctionNames functionNames;^195^^^^^190^200^final FunctionNames functionNames;^[CLASS] State  [METHOD] setIntermediateState [RETURN_TYPE] void   State state [VARIABLES] PassConfig  delegate  State  state  boolean  
[P8_Replace_Mix]^this.cssNames =  null;^201^^^^^197^208^this.cssNames = cssNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.exportedNames = exportedNames;this.cssNames = cssNames;^201^^^^^197^208^this.cssNames = cssNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.cssNames = cssNames;^201^^^^^197^208^this.cssNames = cssNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.exportedNames =  null;^202^^^^^197^208^this.exportedNames = exportedNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.exportedNames = exportedNames;^202^^^^^197^208^this.exportedNames = exportedNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.cssNames = cssNames;this.exportedNames = exportedNames;^202^^^^^197^208^this.exportedNames = exportedNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^this.crossModuleIdGenerator = 2;^203^^^^^197^208^this.crossModuleIdGenerator = crossModuleIdGenerator;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.crossModuleIdGenerator =  null;^203^^^^^197^208^this.crossModuleIdGenerator = crossModuleIdGenerator;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.variableMap =  propertyMap;^204^^^^^197^208^this.variableMap = variableMap;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^this.propertyMap = variableMap;^205^^^^^197^208^this.propertyMap = propertyMap;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P5_Replace_Variable]^this.anonymousFunctionNameMap = variableMap;^206^^^^^197^208^this.anonymousFunctionNameMap = anonymousFunctionNameMap;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.anonymousFunctionNameMap = anonymousFunctionNameMap;^206^^^^^197^208^this.anonymousFunctionNameMap = anonymousFunctionNameMap;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P8_Replace_Mix]^this.functionNames =  null;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.exportedNames = exportedNames;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.cssNames = cssNames;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.anonymousFunctionNameMap = anonymousFunctionNameMap;this.functionNames = functionNames;^207^^^^^197^208^this.functionNames = functionNames;^[CLASS] State  [METHOD] <init> [RETURN_TYPE] FunctionNames)   Integer> cssNames String> exportedNames IdGenerator crossModuleIdGenerator VariableMap variableMap VariableMap propertyMap VariableMap anonymousFunctionNameMap FunctionNames functionNames [VARIABLES] Set  exportedNames  boolean  VariableMap  anonymousFunctionNameMap  propertyMap  variableMap  IdGenerator  crossModuleIdGenerator  Map  cssNames  long  serialVersionUID  FunctionNames  functionNames  
