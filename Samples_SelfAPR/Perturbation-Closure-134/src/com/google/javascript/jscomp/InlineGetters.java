[P7_Replace_Invocation]^private static final Logger logger = Logger .fine ( null )  ;^56^57^^^^56^57^private static final Logger logger = Logger.getLogger ( InlineGetters.class.getName (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1   [VARIABLES] 
[P8_Replace_Mix]^private static final Logger logger  = null ;^56^57^^^^56^57^private static final Logger logger = Logger.getLogger ( InlineGetters.class.getName (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1   [VARIABLES] 
[P8_Replace_Mix]^static final MethodCompilerPass.SignatureStore DUMMY_SIGNATURE_STORE ;^282^283^^^^282^296^static final MethodCompilerPass.SignatureStore DUMMY_SIGNATURE_STORE = new MethodCompilerPass.SignatureStore (  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1   [VARIABLES] 
[P14_Delete_Statement]^^60^^^^^59^61^super ( compiler ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  AbstractCompiler  compiler  boolean  Logger  logger  
[P2_Replace_Operator]^if  ( externMethods.contains ( callName )  && nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( 2.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( callName.contains ( externMethods )  || nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( nonMethodProperties.contains ( callName )  || externMethods.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( externMethods.contains ( callName )  ) {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  (  nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P15_Unwrap_Block]^return ;^71^72^73^74^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  { return; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P16_Remove_Block]^^71^72^73^74^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  { return; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^72^73^^^^57^87^nonMethodProperties.contains ( callName )  )  { return;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^Collection<Node> definitions = callName.get ( methodDefinitions ) ;^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^Collection<Node> definitions = null.get ( callName ) ;^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( definitions == null && definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( definitions != null || definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( definitions == null || definitions.size (  )  != 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions == null || definitions.size (  )  == 9 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions == null || definitions.size() + 0  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( definitions == null ) {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  (  definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( definitions == true ) {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P15_Unwrap_Block]^return ;^77^78^79^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  { return; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P16_Remove_Block]^^77^78^79^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  { return; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions == null || definitions.size() - 3  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( 2 == null || definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^if  ( definitions == null || definitions .iterator (  )   == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^Node firstDefinition = definitions.iterator (  ) .checkTreeEqualsSilent (  ) ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^Node firstDefinition = definitions.iterator (  )  .getNext (  )  ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^Node firstDefinition = null.iterator (  ) .next (  ) ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^Node firstDefinition = definitions .size (  )  .next (  ) ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( definitions.size (  )  == 1 && allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( definitions.size (  )  != 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions.size (  )  == -6 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions.size() - 9  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( this.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( definitions.size (  )  == 1 ) {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  (  allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( returned != null )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining property accessor: " + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isEmptyMethod(firstDefinition) && getFirstChild())) )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining empty method: " + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Method '" + callName + "' has conflicting definitions." )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Method '" + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^if  ( definitions .iterator (  )   == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^if  ( definitions.size (  )  == 1 || returnedExpression ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( definitions.size (  )  == 0  || returnedExpression ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Method '"  >>  callName  >>  "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Method '"  <  callName + "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Method 'e" + callName + "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Method '" + callName + "' has conflicting d" ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^logger .getLogger ( callName )  ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( !argsMayHaveSideEffects ( parent )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining property accessor: " + callName )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isEmptyMethod(firstDefinition) && getFirstChild())) )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining empty method: " + callName )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^if  ( !getMethodBlock ( callNode )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P9_Replace_Statement]^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( returned == null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining property accessor: " + callName )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isEmptyMethod(firstDefinition) && getFirstChild())) )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining empty method: " + callName )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( parent != true )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^} else if  ( isEmptyMethod ( firstDefinition )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( isEmptyMethod ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( isEmptyMethod ( callNode )  && !NodeUtil.mayHaveSideEffects ( firstDefinition.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else if  ( isEmptyMethod ( firstDefinition )  ) {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else if  (  !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else if  ( "Inlining empty method: " + callName )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( isPropertyTree ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( parent )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.newNumber (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode .getLastChild (  )   )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  ( isEmptyMethod ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P9_Replace_Statement]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P15_Unwrap_Block]^com.google.javascript.jscomp.InlineGetters.logger.fine(("Inlining empty method: " + callName)); inlineEmptyMethod(t, parent, callNode);^100^101^102^103^104^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P16_Remove_Block]^^100^101^102^103^104^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  (  ( isLiteralValue ( returned )  )  &&  ( ! ( mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  )  )  {     fine (  ( "Inlining constant accessor: " + callName )  ) ;     inlineConstReturn ( parent, callNode, returned ) ; }^100^^^^^85^115^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  |  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "g empty meth" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^102^103^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining property accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining constant accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod (  parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t,  callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^inlineConstReturn ( t, parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^inlinePropertyReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^inlineConstReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^} else if  ( isPropertyTree ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( firstDefinition )   )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil.mayHaveSideEffects ( callNode.newNumber (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil.mayHaveSideEffects ( callNode .getLastChild (  )   )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^101^102^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  ( mayHaveSideEffects ( currentChild )  )  {     return true; }^101^^^^^86^116^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  ==  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: ning empty " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining property accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining constant accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod (  parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t,  callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^inlineConstReturn ( t, parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^inlinePropertyReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P11_Insert_Donor_Statement]^inlineConstReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( isPropertyTree ( parent )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^if  ( isEmptyMethod ( returned )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^} else if  ( NodeUtil.isLiteralValue ( returned )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( parent.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( callNode )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else if  ( NodeUtil.isLiteralValue ( returned )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else if  (  !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else if  ( "Inlining constant accessor: " + callName )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P6_Replace_Expression]^} else {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil.getStringValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.newNumber (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode .getLastChild (  )   )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( firstDefinition )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P9_Replace_Statement]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P15_Unwrap_Block]^com.google.javascript.jscomp.InlineGetters.logger.fine(("Inlining constant accessor: " + callName)); inlineConstReturn(parent, callNode, returned);^95^96^97^98^99^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P16_Remove_Block]^^95^96^97^98^99^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  (  ( isEmptyMethod ( firstDefinition )  )  &&  ( ! ( mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  )  )  {     fine (  ( "Inlining empty method: " + callName )  ) ;     inlineEmptyMethod ( t, parent, callNode ) ; }^95^^^^^80^110^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  ( isPropertyTree ( returned )  )  {     fine (  ( "Inlining property accessor: " + callName )  ) ;     inlinePropertyReturn ( parent, callNode, returned ) ; }else     if  (  ( isLiteralValue ( returned )  )  &&  ( ! ( mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  )  )  {         fine (  ( "Inlining constant accessor: " + callName )  ) ;         inlineConstReturn ( parent, callNode, returned ) ;     }^95^^^^^80^110^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlinlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^logger .getLogger ( callName )  ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^97^98^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn (  callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent,  returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^inlinePropertyReturn ( parent, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( parent )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  ( mayHaveSideEffects ( currentChild )  )  {     return true; }^95^^^^^80^110^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  (  ( getStringValue ( retVal )  )  == null )  {     return false; }^95^^^^^80^110^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil.mayHaveSideEffects ( callNode.newNumber (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil.mayHaveSideEffects ( callNode .getLastChild (  )   )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^96^97^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P13_Insert_Block]^if  ( mayHaveSideEffects ( currentChild )  )  {     return true; }^96^^^^^81^111^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ||  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( " accessornlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^97^98^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn (  callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent,  returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^inlinePropertyReturn ( parent, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  ==  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: ini" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( returned, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn (  callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( parent,  returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, callNode ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( returned, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( callNode, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, returned, callNode ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^inlineConstReturn ( parent, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( firstDefinition, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^} else if  (  !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: stant a" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  ^  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "property acces" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^93^94^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ; inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, returned, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil .getStringValue ( callNode )   && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^!NodeUtil.mayHaveSideEffects ( returned .getLastChild (  )   )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: I" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^logger .getLogger ( callName )  ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( isPropertyTree ( firstDefinition )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ^  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlinin" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^} else if  ( NodeUtil.getStringValue ( parent )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( parent )   )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  <=  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "nnlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "In" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  (  !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "   instanceof   callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( t, returned, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^Node returned = isPropertyTree ( firstDefinition ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^Node returned = returnedExpression ( parent ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^Node returned = returnedExpression ( returned ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: ning property accessor:" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^logger .getLogger ( callName )  ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: nlinin" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( returned )   )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  &&  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "nlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^logger .getLogger ( callName )  ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^102^103^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( parent != null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( returned != this )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( returned )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  !=  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "I" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^!NodeUtil.mayHaveSideEffects ( returned .getLastChild (  )   )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: nl" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( firstDefinition )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <<  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accenlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  >  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( " constant accessornlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  >>  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: p" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, callNode, firstDefinition ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( parent, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "lininlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "   instanceof   callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: ty accessor" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( returned )   )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: Inl" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: Inlining c" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( parent, returned, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^!NodeUtil.mayHaveSideEffects ( returned.newNumber (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "ning cnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( parent, returned, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( " accessornlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( parent, returned, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil .getStringValue ( firstDefinition )   && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining cnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( callNode )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  <  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: Inlining empty m" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^Node returned = isPropertyTree ( parent ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P5_Replace_Variable]^if  ( !argsMayHaveSideEffects ( returned )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  ||  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: nlining property ac" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( parent, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "stant accessnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "   instanceof   callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "ning nlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( !getMethodBlock ( parent )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( returned != false )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  ( isPropertyTree ( returned )  ) {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "emnlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  >  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: I" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( returned )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining consnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  >>  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "ng const" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "In" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  (  !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  |  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "ant acc" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: property acce" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  |  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: linin" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( returned, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "nstant " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "   instanceof   callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "t anlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( parent, callNode, firstDefinition ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  &&  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( parent, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( returned )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^} else if  ( NodeUtil.isLiteralValue ( parent )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "onstant accesnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlinePropertyReturn ( parent, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  ||  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: ing empt" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^logger .getLogger ( callName )  ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( " prop" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Innlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  !=  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: ining empty met" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( returned != true )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^} else if  (  !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  ==  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: od" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^!NodeUtil.mayHaveSideEffects ( returned.newNumber (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Innlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  ( NodeUtil.getStringValue ( parent )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: ning const" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  <  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: r" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "nlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^if  ( isEmptyMethod ( parent )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "lining pr" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "lin" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: c" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining constannlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: nlining pr" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( callNode )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^}  if  ( isPropertyTree ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  &&  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: nlining emp" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions.size() + 9  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^if  ( definitions.size() - 3  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "ing cons" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: Inlini" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^inlineConstReturn ( t, parent, returned ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Method '"   instanceof   callName   instanceof   "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^logger.fine ( "Method '"  <  callName + "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P3_Replace_Literal]^logger.fine ( "Method '" + callName + "onflicting definit has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P8_Replace_Mix]^logger .getLogger ( callName )  ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P14_Delete_Statement]^^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[P2_Replace_Operator]^if  ( expectedGetprop.getType (  )  < Token.GETPROP )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^if  ( retVal.getType (  )  != Token.GETPROP )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^if  ( expectedGetprop.getType (  )  != Token.1 )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( expectedGetprop.newNumber (  )  != Token.GETPROP )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( expectedGetprop .getParent (  )   != Token.GETPROP )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P9_Replace_Statement]^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P15_Unwrap_Block]^return false;^123^124^125^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P16_Remove_Block]^^123^124^125^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P13_Insert_Block]^if  (  ( expectedReturn.getType (  )  )  !=  ( RETURN )  )  {     return null; }^123^^^^^122^138^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P3_Replace_Literal]^return true;^124^^^^^122^138^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^Node leftChild = retVal.getFirstChild (  ) ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^Node leftChild = expectedGetprop.newNumber (  ) ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P8_Replace_Mix]^Node leftChild = retVal .getLastChild (  )  ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P11_Insert_Donor_Statement]^Node expectedBlock = fn.getLastChild (  ) ;Node leftChild = expectedGetprop.getFirstChild (  ) ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P11_Insert_Donor_Statement]^Node expectedReturn = expectedBlock.getFirstChild (  ) ;Node leftChild = expectedGetprop.getFirstChild (  ) ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^Node leftChild = expectedGetprop .getLastChild (  )  ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P14_Delete_Statement]^^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P11_Insert_Donor_Statement]^return expectedReturn.getLastChild (  ) ;Node leftChild = expectedGetprop.getFirstChild (  ) ;^127^^^^^122^138^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P2_Replace_Operator]^if  ( leftChild.getType (  )  != Token.THIS || !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P2_Replace_Operator]^if  ( leftChild.getType (  )  == Token.THIS && !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^if  ( retVal.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P6_Replace_Expression]^if  ( leftChild.getType (  )  != Token.THIS ) {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P6_Replace_Expression]^if  (  !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P6_Replace_Expression]^if  ( leftChild.getType (  )  != THIS )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( leftChild.newNumber (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( leftChild.getType (  )  != Token.THIS && !isEmptyMethod ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P8_Replace_Mix]^if  (  !isEmptyMethod ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P15_Unwrap_Block]^return false;^128^129^130^131^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P16_Remove_Block]^^128^129^130^131^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P13_Insert_Block]^if  (  ( leftChild.getType (  )  )  ==  ( THIS )  )  {     expectedGetprop.replaceChild ( leftChild, replacement ) ; }else {     replaceThis ( leftChild, replacement ) ; }^128^^^^^122^138^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P3_Replace_Literal]^return true;^130^^^^^122^138^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( leftChild .getParent (  )   != Token.THIS && !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^!isPropertyTree ( retVal )  )  {^129^^^^^122^138^!isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^!isEmptyMethod ( leftChild )  )  {^129^^^^^122^138^!isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P14_Delete_Statement]^^129^130^^^^122^138^!isPropertyTree ( leftChild )  )  { return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^Node retVal = expectedGetprop.getNext (  ) ;^133^^^^^122^138^Node retVal = leftChild.getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^Node retVal = leftChild.newNumber (  ) ;^133^^^^^122^138^Node retVal = leftChild.getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^Node retVal = retVal.getNext (  ) ;^133^^^^^122^138^Node retVal = leftChild.getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P14_Delete_Statement]^^133^^^^^122^138^Node retVal = leftChild.getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P2_Replace_Operator]^if  ( NodeUtil.getStringValue ( retVal )  != null )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^if  ( NodeUtil.getStringValue ( leftChild )  == null )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( NodeUtil.isLiteralValue ( retVal )  == null )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P7_Replace_Invocation]^if  ( NodeUtil .isLiteralValue ( expectedGetprop )   == null )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P8_Replace_Mix]^if  ( NodeUtil.getStringValue ( leftChild )  == false )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P15_Unwrap_Block]^return false;^134^135^136^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P16_Remove_Block]^^134^135^136^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P13_Insert_Block]^if  ( mayHaveSideEffects ( currentChild )  )  {     return true; }^134^^^^^122^138^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P3_Replace_Literal]^return true;^135^^^^^122^138^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P13_Insert_Block]^if  (  ( getStringValue ( retVal )  )  == null )  {     return false; }^134^^^^^122^138^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P3_Replace_Literal]^return false;^137^^^^^122^138^return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[P5_Replace_Variable]^Node leftChild = replacement.getFirstChild (  ) ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P7_Replace_Invocation]^Node leftChild = expectedGetprop.newNumber (  ) ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P7_Replace_Invocation]^Node leftChild = expectedGetprop .getLastChild (  )  ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P11_Insert_Donor_Statement]^Node expectedBlock = fn.getLastChild (  ) ;Node leftChild = expectedGetprop.getFirstChild (  ) ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P11_Insert_Donor_Statement]^Node expectedReturn = expectedBlock.getFirstChild (  ) ;Node leftChild = expectedGetprop.getFirstChild (  ) ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P14_Delete_Statement]^^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P11_Insert_Donor_Statement]^return expectedReturn.getLastChild (  ) ;Node leftChild = expectedGetprop.getFirstChild (  ) ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P2_Replace_Operator]^if  ( leftChild.getType (  )  != Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^if  ( replacement.getType (  )  == Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P7_Replace_Invocation]^if  ( leftChild.newNumber (  )  == Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P7_Replace_Invocation]^if  ( leftChild .getParent (  )   == Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P8_Replace_Mix]^if  ( expectedGetprop.getType (  )  == Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P9_Replace_Statement]^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P15_Unwrap_Block]^expectedGetprop.replaceChild(leftChild, replacement);^146^147^148^149^150^144^151^if  ( leftChild.getType (  )  == Token.THIS )  { expectedGetprop.replaceChild ( leftChild, replacement ) ; } else { replaceThis ( leftChild, replacement ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P16_Remove_Block]^^146^147^148^149^150^144^151^if  ( leftChild.getType (  )  == Token.THIS )  { expectedGetprop.replaceChild ( leftChild, replacement ) ; } else { replaceThis ( leftChild, replacement ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P13_Insert_Block]^if  (  (  ( leftChild.getType (  )  )  !=  ( THIS )  )  &&  ( ! ( isPropertyTree ( leftChild )  )  )  )  {     return false; }^146^^^^^144^151^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^replaceThis ( expectedGetprop, replacement ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^replaceThis ( leftChild, expectedGetprop ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^replaceThis (  replacement ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^replaceThis ( leftChild ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^replaceThis ( replacement, leftChild ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P14_Delete_Statement]^^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P11_Insert_Donor_Statement]^expectedGetprop.replaceChild ( leftChild, replacement ) ;replaceThis ( leftChild, replacement ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^expectedGetprop.replaceChild ( leftChild, leftChild ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^expectedGetprop.replaceChild (  replacement ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^expectedGetprop.replaceChild ( leftChild ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^expectedGetprop.replaceChild ( replacement, leftChild ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P7_Replace_Invocation]^expectedGetprop .getLastChild (  )  ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P8_Replace_Mix]^expectedGetprop.replaceChild ( replacement, replacement ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P14_Delete_Statement]^^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P8_Replace_Mix]^expectedGetprop.replaceChild ( leftChild, expectedGetprop ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[P5_Replace_Variable]^Node expectedBlock = getMethodBlock ( expectedReturn ) ;^158^^^^^157^173^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^Node expectedBlock = isEmptyMethod ( fn ) ;^158^^^^^157^173^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P11_Insert_Donor_Statement]^Node expectedBlock = fn.getLastChild (  ) ;Node expectedBlock = getMethodBlock ( fn ) ;^158^^^^^157^173^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P14_Delete_Statement]^^158^^^^^157^173^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^if  ( !expectedBlock.newNumber (  )  )  {^159^^^^^157^173^if  ( !expectedBlock.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P9_Replace_Statement]^if  ( !expectedReturn.hasOneChild (  )  )  {^159^^^^^157^173^if  ( !expectedBlock.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P15_Unwrap_Block]^return null;^159^160^161^^^157^173^if  ( !expectedBlock.hasOneChild (  )  )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P16_Remove_Block]^^159^160^161^^^157^173^if  ( !expectedBlock.hasOneChild (  )  )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  (  ( fn.getChildCount (  )  )  != 3 )  {     return null; }^159^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  ( ! ( expectedReturn.hasOneChild (  )  )  )  {     return null; }^159^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^return true;^160^^^^^157^173^return null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^if  ( !expectedBlock .replaceChild ( expectedReturn , fn )   )  {^159^^^^^157^173^if  ( !expectedBlock.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^if  ( !expectedBlock .replaceChild ( expectedReturn , expectedBlock )   )  {^159^^^^^157^173^if  ( !expectedBlock.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  ( ! ( expectedBlock.hasOneChild (  )  )  )  {     return null; }^159^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P5_Replace_Variable]^Node expectedReturn = fn.getFirstChild (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^Node expectedReturn = expectedBlock.newNumber (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^Node expectedReturn = expectedBlock .getLastChild (  )  ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P11_Insert_Donor_Statement]^Node expectedBlock = fn.getLastChild (  ) ;Node expectedReturn = expectedBlock.getFirstChild (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P11_Insert_Donor_Statement]^Node leftChild = expectedGetprop.getFirstChild (  ) ;Node expectedReturn = expectedBlock.getFirstChild (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^Node expectedReturn = fn.newNumber (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P14_Delete_Statement]^^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P11_Insert_Donor_Statement]^return expectedReturn.getLastChild (  ) ;Node expectedReturn = expectedBlock.getFirstChild (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P2_Replace_Operator]^if  ( expectedReturn.getType (  )  >= Token.RETURN )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P5_Replace_Variable]^if  ( fn.getType (  )  != Token.RETURN )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^if  ( expectedReturn.newNumber (  )  != Token.RETURN )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P9_Replace_Statement]^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P9_Replace_Statement]^if  ( leftChild.getType (  )  == Token.THIS )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P15_Unwrap_Block]^return null;^164^165^166^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P16_Remove_Block]^^164^165^166^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  (  ( expectedGetprop.getType (  )  )  !=  ( GETPROP )  )  {     return false; }^164^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^return false;^165^^^^^157^173^return null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^return true;^165^^^^^157^173^return null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^if  ( !expectedReturn.newNumber (  )  )  {^168^^^^^157^173^if  ( !expectedReturn.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P9_Replace_Statement]^if  ( !expectedBlock.hasOneChild (  )  )  {^168^^^^^157^173^if  ( !expectedReturn.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P15_Unwrap_Block]^return null;^168^169^170^^^157^173^if  ( !expectedReturn.hasOneChild (  )  )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P16_Remove_Block]^^168^169^170^^^157^173^if  ( !expectedReturn.hasOneChild (  )  )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  ( ! ( expectedBlock.hasOneChild (  )  )  )  {     return null; }^168^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  (  ( fn.getChildCount (  )  )  != 3 )  {     return null; }^168^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^return false;^169^^^^^157^173^return null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^if  ( !expectedReturn .replaceChild ( fn , expectedReturn )   )  {^168^^^^^157^173^if  ( !expectedReturn.hasOneChild (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P13_Insert_Block]^if  ( ! ( expectedReturn.hasOneChild (  )  )  )  {     return null; }^168^^^^^157^173^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P5_Replace_Variable]^return fn.getLastChild (  ) ;^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^return expectedReturn.newNumber (  ) ;^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^return expectedReturn .getFirstChild (  )  ;^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P12_Insert_Condition]^if  ( !expectedReturn.hasOneChild (  )  )  { return expectedReturn.getLastChild (  ) ; }^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P8_Replace_Mix]^return fn.newNumber (  ) ;^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P14_Delete_Statement]^^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[P7_Replace_Invocation]^Node expectedBlock = isEmptyMethod ( fn ) ;^182^^^^^181^185^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P11_Insert_Donor_Statement]^Node expectedBlock = fn.getLastChild (  ) ;Node expectedBlock = getMethodBlock ( fn ) ;^182^^^^^181^185^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P5_Replace_Variable]^Node expectedBlock = getMethodBlock ( expectedBlock ) ;^182^^^^^181^185^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^Node expectedBlock = isEmptyMethod ( expectedBlock ) ;^182^^^^^181^185^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P14_Delete_Statement]^^182^^^^^181^185^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P2_Replace_Operator]^return expectedBlock != null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P3_Replace_Literal]^return expectedBlock == null ? true : NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P5_Replace_Variable]^return fn == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P6_Replace_Expression]^return expectedBlock ( NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^return expectedBlock == null ? false : NodeUtil.isExprCall ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^return expectedBlock == true ? false : NodeUtil.isExprCall ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P5_Replace_Variable]^false : NodeUtil.isEmptyBlock ( fn ) ;^184^^^^^181^185^false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^false : NodeUtil.isExprCall ( expectedBlock ) ;^184^^^^^181^185^false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P14_Delete_Statement]^^184^^^^^181^185^false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P2_Replace_Operator]^if  ( fn.getChildCount (  )  == 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P3_Replace_Literal]^if  ( fn.getChildCount (  )  !=  )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P5_Replace_Variable]^if  ( expectedBlock.getChildCount (  )  != 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^if  ( fn.newNumber (  )  != 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^if  ( fn.newNumber (  )  != 1 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P15_Unwrap_Block]^return null;^194^195^196^^^193^201^if  ( fn.getChildCount (  )  != 3 )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P16_Remove_Block]^^194^195^196^^^193^201^if  ( fn.getChildCount (  )  != 3 )  { return null; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P13_Insert_Block]^if  ( ! ( expectedBlock.hasOneChild (  )  )  )  {     return null; }^194^^^^^193^201^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P13_Insert_Block]^if  ( ! ( expectedReturn.hasOneChild (  )  )  )  {     return null; }^194^^^^^193^201^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^return false;^195^^^^^193^201^return null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^return this;^195^^^^^193^201^return null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^if  ( fn .getParent (  )   != 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^if  ( expectedBlock.newNumber (  )  != 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^Node expectedBlock = fn.newNumber (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^Node expectedBlock = fn .getFirstChild (  )  ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P11_Insert_Donor_Statement]^Node expectedReturn = expectedBlock.getFirstChild (  ) ;Node expectedBlock = fn.getLastChild (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P11_Insert_Donor_Statement]^Node expectedBlock = getMethodBlock ( fn ) ;Node expectedBlock = fn.getLastChild (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P11_Insert_Donor_Statement]^Node leftChild = expectedGetprop.getFirstChild (  ) ;Node expectedBlock = fn.getLastChild (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P5_Replace_Variable]^Node expectedBlock = expectedBlock.getLastChild (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P14_Delete_Statement]^^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P11_Insert_Donor_Statement]^return expectedReturn.getLastChild (  ) ;Node expectedBlock = fn.getLastChild (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P2_Replace_Operator]^return  expectedBlock.getType (  )  != Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P5_Replace_Variable]^return  fn.getType (  )  == Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P6_Replace_Expression]^return  expectedBlock.getType ( null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^return  expectedBlock.newNumber (  )  == Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P7_Replace_Invocation]^return  expectedBlock .getParent (  )   == Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P8_Replace_Mix]^return  fn.newNumber (  )  == Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P14_Delete_Statement]^^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[P14_Delete_Statement]^^208^^^^^206^217^List<Node> list = Lists.newArrayList (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P14_Delete_Statement]^^209^210^^^^206^217^list.addAll ( definitions ) ; Node node0 = list.get ( 0 ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^Node nodei = list.get ( i ) ;^210^^^^^206^217^Node node0 = list.get ( 0 ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P11_Insert_Donor_Statement]^Node retVal = leftChild.getNext (  ) ;Node node0 = list.get ( 0 ) ;^210^^^^^206^217^Node node0 = list.get ( 0 ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^Node node = list.get (  ) ;^210^^^^^206^217^Node node0 = list.get ( 0 ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P14_Delete_Statement]^^210^^^^^206^217^Node node0 = list.get ( 0 ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P5_Replace_Variable]^if  ( !list.get ( node0 ) .checkTreeEqualsSilent ( i )  )  {^212^^^^^206^217^if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P8_Replace_Mix]^if  ( !list.get ( i )  .removeFirstChild (  )   )  {^212^^^^^206^217^if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P15_Unwrap_Block]^return false;^212^213^214^^^206^217^if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P16_Remove_Block]^^212^213^214^^^206^217^if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^return true;^213^^^^^206^217^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P1_Replace_Type]^for  (  long  i = 1; i < list.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P2_Replace_Operator]^for  ( int i = 1; i <= list.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < list.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < list.size() + 2 ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P5_Replace_Variable]^for  ( listnt i = 1; i < i.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P7_Replace_Invocation]^for  ( int i = 1; i < list.get (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P8_Replace_Mix]^if  ( list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  {^212^^^^^206^217^if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P13_Insert_Block]^if  ( ! ( list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  )  {     return false; }^212^^^^^206^217^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P1_Replace_Type]^for  (  short  i = 1; i < list.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^for  ( int i = -1; i < list.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < list.size() - 1 ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^for  ( int i = 1; i < list.size() + 3 ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P14_Delete_Statement]^^211^212^213^214^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  { if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  { return false; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P3_Replace_Literal]^return false;^216^^^^^206^217^return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[P5_Replace_Variable]^Node getProp = parent.cloneTree (  ) ;^231^^^^^229^235^Node getProp = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P7_Replace_Invocation]^Node getProp = returnedValue.newNumber (  ) ;^231^^^^^229^235^Node getProp = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P7_Replace_Invocation]^Node getProp = returnedValue .hasOneChild (  )  ;^231^^^^^229^235^Node getProp = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P14_Delete_Statement]^^231^232^^^^229^235^Node getProp = returnedValue.cloneTree (  ) ; replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^replaceThis ( returnedValue, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^replaceThis ( getProp, returnedValue.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^replaceThis (  call.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^replaceThis ( getProp.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^replaceThis ( call, getProp.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P7_Replace_Invocation]^replaceThis ( getProp, call.getFirstChild (  ) .checkTreeEqualsSilent (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P7_Replace_Invocation]^replaceThis ( getProp, call.newNumber (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P14_Delete_Statement]^^232^233^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ; parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P14_Delete_Statement]^^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P7_Replace_Invocation]^replaceThis ( getProp, call .getLastChild (  )  .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( returnedValue, getProp ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( call, returnedValue ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^parent.replaceChild (  getProp ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( call ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( getProp, call ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P14_Delete_Statement]^^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P11_Insert_Donor_Statement]^parent.replaceChild ( call, retValue ) ;parent.replaceChild ( call, getProp ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P14_Delete_Statement]^^234^^^^^229^235^compiler.reportCodeChange (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[P7_Replace_Invocation]^Node retValue = returnedValue.newNumber (  ) ;^244^^^^^242^247^Node retValue = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P8_Replace_Mix]^Node retValue = parent.cloneTree (  ) ;^244^^^^^242^247^Node retValue = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P5_Replace_Variable]^Node retValue = retValue.cloneTree (  ) ;^244^^^^^242^247^Node retValue = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P14_Delete_Statement]^^244^^^^^242^247^Node retValue = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( returnedValue, retValue ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( call, returnedValue ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P5_Replace_Variable]^parent.replaceChild (  retValue ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( call ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P5_Replace_Variable]^parent.replaceChild ( retValue, call ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P7_Replace_Invocation]^parent .getLastChild (  )  ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P14_Delete_Statement]^^245^246^^^^242^247^parent.replaceChild ( call, retValue ) ; compiler.reportCodeChange (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P11_Insert_Donor_Statement]^parent.replaceChild ( call, getProp ) ;parent.replaceChild ( call, retValue ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P11_Insert_Donor_Statement]^expectedGetprop.replaceChild ( leftChild, replacement ) ;parent.replaceChild ( call, retValue ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P14_Delete_Statement]^^246^^^^^242^247^compiler.reportCodeChange (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[P7_Replace_Invocation]^if  ( NodeUtil.isEmptyBlock ( parent )  )  {^255^^^^^252^261^if  ( NodeUtil.isExprCall ( parent )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P15_Unwrap_Block]^parent.getParent().replaceChild(parent, new com.google.javascript.rhino.Node(com.google.javascript.rhino.Token.EMPTY));^255^256^257^258^259^252^261^if  ( NodeUtil.isExprCall ( parent )  )  { parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ; } else { parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P16_Remove_Block]^^255^256^257^258^259^252^261^if  ( NodeUtil.isExprCall ( parent )  )  { parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ; } else { parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P3_Replace_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( -4 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P3_Replace_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 7 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P4_Replace_Constructor]^parent.replaceChild (  new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P5_Replace_Variable]^parent.replaceChild ( call, new Node ( Token. Node.newNumber ( 0 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P7_Replace_Invocation]^parent.replaceChild ( call, new Node ( Token.VOID, Node .getType (  )   )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P8_Replace_Mix]^parent.replaceChild ( parent, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P14_Delete_Statement]^^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P3_Replace_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 4 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P5_Replace_Variable]^parent.getParent (  ) .replaceChild ( call, new Node ( Token.EMPTY )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P5_Replace_Variable]^parent.getParent (  ) .replaceChild (  new Node ( Token.EMPTY )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P7_Replace_Invocation]^parent.newNumber (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P14_Delete_Statement]^^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P7_Replace_Invocation]^parent .getNext (  )  .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P8_Replace_Mix]^parent.newNumber (  ) .replaceChild ( call, new Node ( Token.EMPTY )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P5_Replace_Variable]^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.4 )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P3_Replace_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 9 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isExprCall ( call )  )  {^255^^^^^252^261^if  ( NodeUtil.isExprCall ( parent )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P7_Replace_Invocation]^parent.getParent (  )  .getLastChild (  )  ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P3_Replace_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( -6 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P7_Replace_Invocation]^parent .getLastChild (  )   ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P3_Replace_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( null )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P14_Delete_Statement]^^260^^^^^252^261^compiler.reportCodeChange (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[P5_Replace_Variable]^if  ( NodeUtil.mayHaveSideEffects ( call )  )  {^271^^^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^if  ( NodeUtil.isLiteralValue ( currentChild )  )  {^271^^^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P9_Replace_Statement]^if  ( !argsMayHaveSideEffects ( callNode )  )  {^271^^^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P15_Unwrap_Block]^return true;^271^272^273^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  { return true; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P16_Remove_Block]^^271^272^273^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  { return true; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P13_Insert_Block]^if  (  ( getStringValue ( retVal )  )  == null )  {     return false; }^271^^^^^267^277^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P3_Replace_Literal]^return false;^272^^^^^267^277^return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P5_Replace_Variable]^for  ( Node call = call.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P5_Replace_Variable]^for  ( Node call = currentChild.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^for  ( Node currentChild = call.getFirstChild (  ) .checkTreeEqualsSilent (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^for  ( Node currentChild = call.newNumber (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^for  ( Node currentChild = call .getLastChild (  )  .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^for  ( Node currentChild = call.getFirstChild (  ) .newNumber (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P8_Replace_Mix]^for  ( Node call = call.newNumber (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P13_Insert_Block]^if  ( mayHaveSideEffects ( currentChild )  )  {     return true; }^271^^^^^267^277^[Delete]^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P5_Replace_Variable]^currentChild = call.getNext (  )  )  {^270^^^^^267^277^currentChild = currentChild.getNext (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^currentChild = currentChild.newNumber (  )  )  {^270^^^^^267^277^currentChild = currentChild.getNext (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P7_Replace_Invocation]^for  ( Node currentChild = call.getFirstChild (  )  .getParent (  )  ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P11_Insert_Donor_Statement]^Node retVal = leftChild.getNext (  ) ;for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P5_Replace_Variable]^for  ( Node currentChild = currentChild.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P14_Delete_Statement]^^268^269^270^271^272^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ; currentChild != null; currentChild = currentChild.getNext (  )  )  { if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  { return true; }^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P14_Delete_Statement]^^270^271^272^^^267^277^currentChild = currentChild.getNext (  )  )  { if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  { return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P8_Replace_Mix]^if  ( NodeUtil.isLiteralValue ( call )  )  {^271^^^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P3_Replace_Literal]^return true;^276^^^^^267^277^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[P2_Replace_Operator]^if  ( externMethods.contains ( callName )  && nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( externMethods.contains ( nonMethodProperties )  || callName.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( nonMethodProperties.contains ( callName )  || externMethods.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( externMethods.contains ( callName )  ) {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  (  nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P15_Unwrap_Block]^return ;^71^72^73^74^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  { return; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P16_Remove_Block]^^71^72^73^74^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  { return; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( callName.contains ( externMethods )  || nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^72^73^^^^57^87^nonMethodProperties.contains ( callName )  )  { return;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^Collection<Node> definitions = callName.get ( methodDefinitions ) ;^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^if  ( definitions == null && definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^if  ( definitions != null || definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^if  ( definitions == null || definitions.size (  )  != 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions == null || definitions.size (  )  == -8 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions == null || definitions.size() - 5  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( definitions == null ) {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  (  definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^if  ( definitions == null || definitions .iterator (  )   == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( definitions == false ) {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P15_Unwrap_Block]^return ;^77^78^79^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  { return; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P16_Remove_Block]^^77^78^79^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  { return; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions == null || definitions.size() - 2  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^Node firstDefinition = definitions .size (  )  .next (  ) ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^Node firstDefinition = 0.iterator (  ) .next (  ) ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^if  ( definitions.size (  )  == 1 && allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^if  ( definitions.size (  )  >= 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions.size (  )  == 10 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions.size() + 4  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( definitions.size (  )  == 1 ) {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  (  allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( returned != null )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining property accessor: " + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isEmptyMethod(firstDefinition) && getFirstChild())) )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining empty method: " + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Method '" + callName + "' has conflicting definitions." )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Method '" + callName )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^if  ( definitions .iterator (  )   == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^if  ( definitions.size (  )  == 1 || returnedExpression ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( definitions.size (  )  == 0  ) {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Method '"  ^  callName  ^  "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Method '"  <<  callName + "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "hod" + callName + "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Method '" + callName + "' ha has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( !argsMayHaveSideEffects ( parent )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining property accessor: " + callName )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isEmptyMethod(firstDefinition) && getFirstChild())) )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining empty method: " + callName )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^if  ( !returnedExpression ( callNode )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^if  ( returned == null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( parent != null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining property accessor: " + callName )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isEmptyMethod(firstDefinition) && getFirstChild())) )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining empty method: " + callName )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( returned != this )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^} else if  ( isEmptyMethod ( firstDefinition )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( isEmptyMethod ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else if  ( isEmptyMethod ( firstDefinition )  ) {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else if  (  !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else if  ( "Inlining empty method: " + callName )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( isPropertyTree ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.isLiteralValue ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P9_Replace_Statement]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P15_Unwrap_Block]^com.google.javascript.jscomp.InlineGetters.logger.fine(("Inlining empty method: " + callName)); inlineEmptyMethod(t, parent, callNode);^100^101^102^103^104^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P16_Remove_Block]^^100^101^102^103^104^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P13_Insert_Block]^if  (  ( isLiteralValue ( returned )  )  &&  ( ! ( mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  )  )  {     fine (  ( "Inlining constant accessor: " + callName )  ) ;     inlineConstReturn ( parent, callNode, returned ) ; }^100^^^^^85^115^[Delete]^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  &  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ing empty metnlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining property accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining constant accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod (  parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t,  callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^inlineConstReturn ( t, parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^inlinePropertyReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^inlineConstReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil.isLiteralValue ( callNode.getFirstChild (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^101^102^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  >=  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "y me" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^102^103^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining property accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^logger.fine ( "Inlining constant accessor: " + callName ) ;logger.fine ( "Inlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod (  parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t,  callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, parent ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^inlineConstReturn ( t, parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^inlinePropertyReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P11_Insert_Donor_Statement]^inlineConstReturn ( parent, callNode, returned ) ;inlineEmptyMethod ( t, parent, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( isPropertyTree ( parent )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( isLiteralValue(returned) && getFirstChild())) )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^if  ( "Inlining constant accessor: " + callName )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^if  ( isEmptyMethod ( returned )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^} else if  ( NodeUtil.isLiteralValue ( returned )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( parent )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( parent.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( callNode )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else if  ( NodeUtil.isLiteralValue ( returned )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else if  (  !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else if  ( "Inlining constant accessor: " + callName )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P6_Replace_Expression]^} else {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.isLiteralValue ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( callNode )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( parent )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P9_Replace_Statement]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P15_Unwrap_Block]^com.google.javascript.jscomp.InlineGetters.logger.fine(("Inlining constant accessor: " + callName)); inlineConstReturn(parent, callNode, returned);^95^96^97^98^99^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P16_Remove_Block]^^95^96^97^98^99^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ; }^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P13_Insert_Block]^if  (  ( isEmptyMethod ( firstDefinition )  )  &&  ( ! ( mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  )  )  {     fine (  ( "Inlining empty method: " + callName )  ) ;     inlineEmptyMethod ( t, parent, callNode ) ; }^95^^^^^80^110^[Delete]^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P13_Insert_Block]^if  ( isPropertyTree ( returned )  )  {     fine (  ( "Inlining property accessor: " + callName )  ) ;     inlinePropertyReturn ( parent, callNode, returned ) ; }else     if  (  ( isLiteralValue ( returned )  )  &&  ( ! ( mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  )  )  {         fine (  ( "Inlining constant accessor: " + callName )  ) ;         inlineConstReturn ( parent, callNode, returned ) ;     }^95^^^^^80^110^[Delete]^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ng " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^97^98^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn (  callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent,  returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^inlineEmptyMethod ( parent, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil.isLiteralValue ( callNode.getFirstChild (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^!NodeUtil.isLiteralValue ( returned.getFirstChild (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^96^97^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  { logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "tant ac" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^97^98^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ; inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn (  callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent,  returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^inlineEmptyMethod ( parent, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  &&  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "lining prnlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^93^94^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ; inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, returned, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn (  callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent,  returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, callNode ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( callNode, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( returned, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^inlineConstReturn ( parent, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( firstDefinition )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "constant accessonlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "acnlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( firstDefinition, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, returned, callNode ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( NodeUtil .mayHaveSideEffects (  )   && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( callNode )   )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ^  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "innlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, callNode, firstDefinition ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  (  !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor:  " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( returned, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ninnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  &  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "propnlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( returned, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlinePropertyReturn ( parent, callNode, firstDefinition ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ^  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ing constant accessor" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( returned )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  ||  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( ":nlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^102^103^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ; inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( t, returned, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^Node returned = returnedExpression ( parent ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^Node returned = isPropertyTree ( firstDefinition ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^Node returned = returnedExpression ( returned ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  >  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "roperty access" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant acnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, returned, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( returned )   )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  <  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: lin" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( isEmptyMethod ( callNode )  && !NodeUtil.mayHaveSideEffects ( firstDefinition.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( firstDefinition )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( isEmptyMethod ( returned )  ) {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "   instanceof   callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "l" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  !=  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: nlining empty met" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( isEmptyMethod ( firstDefinition )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^} else if  ( NodeUtil.isLiteralValue ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "nlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( parent )   )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  >  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  ||  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ty anlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( parent, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( returned )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "   instanceof   callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant nlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  |  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ning pr" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ||  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "constant acnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "constant a" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "   instanceof   callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  ==  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ronlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  >=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ininlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( callNode )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ining empty met" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^Node returned = isPropertyTree ( parent ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( !argsMayHaveSideEffects ( returned )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^Node returned = isPropertyTree ( returned ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "   instanceof   callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining property accessor: g property acce" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constanlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( firstDefinition )   )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "   instanceof   callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining empty method: Inlin" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( t, returned, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( firstDefinition != true )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  &&  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ning empt" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^!NodeUtil .isLiteralValue ( callNode )   )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "emnlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( t, parent, returned ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P5_Replace_Variable]^if  ( isPropertyTree ( firstDefinition )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "lnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( returned )   )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  >>  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: l" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( returned, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ing property accessor:nlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: I" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( isEmptyMethod ( parent )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "nliningnlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: lining constan" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "nnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  |  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "nlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "operty acc" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( callNode )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining constant accessor: ng consta" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  <=  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "In" + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "inlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "annlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlininlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^if  ( returned != true )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil .isLiteralValue ( parent )   )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  >  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ining emptnlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  >  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining empty meth" + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( parent.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Inlining consnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  <<  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ing propertynlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil .isLiteralValue ( parent )   )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^}  if  ( NodeUtil.isLiteralValue ( returned )  ) {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  ||  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "lining const" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, callNode, firstDefinition ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  ^  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "In" + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "I" + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "in" + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining constant accessor: "  <<  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "nnlining constant accessor: " + callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P8_Replace_Mix]^inlineEmptyMethod ( parent, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "penlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "lining constnlining constant accessor: " + callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  ==  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "empnlining empty method: " + callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions.size() + 1  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^if  ( definitions.size() - 0  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining property accessor: "  !=  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "ernlining property accessor: " + callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P7_Replace_Invocation]^!NodeUtil .isLiteralValue ( firstDefinition )   )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Inlining empty method: "  >>  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( " emptnlining empty method: " + callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Method '"  >  callName  >  "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P2_Replace_Operator]^logger.fine ( "Method '"  ||  callName + "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Method ethod '" + callName + "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P3_Replace_Literal]^logger.fine ( "Method '" + callName + "s confli has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[P14_Delete_Statement]^^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
