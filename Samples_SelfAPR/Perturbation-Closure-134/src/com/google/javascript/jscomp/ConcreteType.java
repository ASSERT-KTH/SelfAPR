[P4_Replace_Constructor]^static final ConcreteType NONE = static final ConcreteType NONE =  new ConcreteUnionType ( alts )  ;^51^^^^^46^56^static final ConcreteType NONE = new ConcreteNoneType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^static final ConcreteType NONE =  new ConcreteUnionType ( alts )  ;^51^^^^^46^56^static final ConcreteType NONE = new ConcreteNoneType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P4_Replace_Constructor]^static final ConcreteType ALL = static final ConcreteType ALL =  new ConcreteUnionType ( alts )  ;^54^^^^^49^59^static final ConcreteType ALL = new ConcreteAll (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^static  ConcreteType ALL = new ConcreteAll (  ) ;^54^^^^^49^59^static final ConcreteType ALL = new ConcreteAll (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^private static  List<ConcreteFunctionType> NO_FUNCTIONS = Lists.<ConcreteFunctionType>newArrayList (  ) ;^57^58^^^^57^58^private static final List<ConcreteFunctionType> NO_FUNCTIONS = Lists.<ConcreteFunctionType>newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^private static  List<ConcreteInstanceType> NO_INSTANCES = Lists.<ConcreteInstanceType>newArrayList (  ) ;^61^62^^^^61^62^private static final List<ConcreteInstanceType> NO_INSTANCES = Lists.<ConcreteInstanceType>newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^private static final List<StaticSlot<ConcreteType>> NO_SLOTS  = null ;^65^66^^^^65^66^private static final List<StaticSlot<ConcreteType>> NO_SLOTS = Lists.<StaticSlot<ConcreteType>>newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P1_Replace_Type]^static final char CALL_SLOT_NAME = ":call";^289^^^^^284^294^static final String CALL_SLOT_NAME = ":call";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P3_Replace_Literal]^static final String CALL_SLOT_NAME = "a";^289^^^^^284^294^static final String CALL_SLOT_NAME = ":call";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P1_Replace_Type]^static final char THIS_SLOT_NAME = ":this";^292^^^^^287^297^static final String THIS_SLOT_NAME = ":this";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P3_Replace_Literal]^static final String THIS_SLOT_NAME = ":";^292^^^^^287^297^static final String THIS_SLOT_NAME = ":this";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^static final String THIS_SLOT_NAME ;^292^^^^^287^297^static final String THIS_SLOT_NAME = ":this";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P1_Replace_Type]^static final char RETURN_SLOT_NAME = ":return";^295^^^^^290^300^static final String RETURN_SLOT_NAME = ":return";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P3_Replace_Literal]^static final String RETURN_SLOT_NAME = "u";^295^^^^^290^300^static final String RETURN_SLOT_NAME = ":return";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^static final String RETURN_SLOT_NAME  = null ;^295^^^^^290^300^static final String RETURN_SLOT_NAME = ":return";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^private  Factory factory;^297^^^^^292^302^private final Factory factory;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^public  ObjectType instanceType;^456^^^^^451^461^public final ObjectType instanceType;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^private  Set<ConcreteType> alternatives;^556^^^^^551^561^private final Set<ConcreteType> alternatives;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P1_Replace_Type]^private final  short  id;^657^^^^^652^662^private final int id;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType   [VARIABLES] 
[P8_Replace_Mix]^this.emptyList =  null;^167^^^^^166^168^this.emptyList = emptyList;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] List)   List<C> emptyList [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.factory =  null;^307^^^^^304^314^this.factory = factory;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.declaration =  null;^308^^^^^304^314^this.declaration = declaration;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.parentScope =  null;^309^^^^^304^314^this.parentScope = parentScope;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^Preconditions.checkArgument ( declaration.getType (  )  >= Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^Preconditions.checkArgument ( declaration.getType (  )  == Token.null ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^311^312^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ; Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^Preconditions.checkArgument ( declaration.getJSType (  )  == null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^Preconditions.checkArgument ( declaration .getType (  )   != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^Preconditions .checkArgument (  )  ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( this.isSingleton (  )  ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( id >= 0 ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^Preconditions.checkArgument ( declaration.getJSType (  ) .join (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^Preconditions.checkArgument ( declaration .getType (  )  .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^Preconditions.checkArgument ( declaration.getJSType (  )  .isNone (  )   ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.factory =  null;^468^^^^^467^472^this.factory = factory;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.instanceType =  null;^469^^^^^467^472^this.instanceType = instanceType;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^Preconditions.checkArgument ( ! ( instanceType  &&  UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^559^^^^^558^560^this ( Sets.newHashSet ( alternatives )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType[])    alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  ConcreteType[]  alternatives  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;this ( Sets.newHashSet ( alternatives )  ) ;^559^^^^^558^560^this ( Sets.newHashSet ( alternatives )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType[])    alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  ConcreteType[]  alternatives  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;this ( Sets.newHashSet ( alternatives )  ) ;^559^^^^^558^560^this ( Sets.newHashSet ( alternatives )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType[])    alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  ConcreteType[]  alternatives  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^Preconditions.checkArgument ( alternatives.size (  )  >= 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^Preconditions.checkArgument ( alternatives.size (  )  > 4 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^Preconditions.checkArgument ( alternatives.size() - 6  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^Preconditions.checkArgument ( alternatives.add (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( this.isSingleton (  )  ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( id >= 0 ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^Preconditions.checkArgument ( alternatives.size() + 9  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.alternatives =  null;^564^^^^^562^565^this.alternatives = alternatives;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^this.id =  null;^660^^^^^659^663^this.id = id;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^Preconditions.checkArgument ( id > 0 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^Preconditions.checkArgument ( id >= 6 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( id >= 0 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( id >= 0 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( id >= 0 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( this.isSingleton (  )  ) ;Preconditions.checkArgument ( id >= 0 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^if  ( types == null && types.size (  )  == 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^if  ( types != null || types.size (  )  == 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^if  ( types == null || types.size (  )  != 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^if  ( types == null || types.size (  )  == id )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^if  ( types == null || types.size() + 3  == 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P6_Replace_Expression]^if  ( types == null ) {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P6_Replace_Expression]^if  (  types.size (  )  == 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P6_Replace_Expression]^if  ( types.size() == 1 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P13_Insert_Block]^if  (  ( types.size (  )  )  == 1 )  {     return types.iterator (  ) .next (  ) ; }else {     return new ConcreteUnionType ( newHashSet ( types )  ) ; }^69^^^^^68^76^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P13_Insert_Block]^if  ( ! ( other.isSingleton (  )  )  )  {     return other.unionWith ( this ) ; }else     if  ( equals ( other )  )  {         return this;     }else {         return new ConcreteUnionType ( this, other ) ;     }^69^^^^^68^76^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^} else if  ( types.size (  )  != 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^} else if  ( types.size (  )  == id )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^} else if  ( types.size() + 3  == 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P6_Replace_Expression]^} else {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P15_Unwrap_Block]^return types.iterator().next();^71^72^73^74^75^68^76^} else if  ( types.size (  )  == 1 )  { return types.iterator (  ) .next (  ) ; } else { return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P16_Remove_Block]^^71^72^73^74^75^68^76^} else if  ( types.size (  )  == 1 )  { return types.iterator (  ) .next (  ) ; } else { return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P13_Insert_Block]^if  (  ( types.size (  )  )  == 1 )  {     return types.iterator (  ) .next (  ) ; }else {     return new ConcreteUnionType ( newHashSet ( types )  ) ; }^74^^^^^68^76^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^74^^^^^68^76^return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^return types .size (  )  .next (  ) ;^72^^^^^68^76^return types.iterator (  ) .next (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P14_Delete_Statement]^^72^^^^^68^76^return types.iterator (  ) .next (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^} else if  ( types.size() + 0  == 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^} else if  ( types .iterator (  )   == 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P5_Replace_Variable]^return ALL;^70^^^^^68^76^return NONE;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^} else if  ( types.size (  )  >= 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^} else if  ( types.size() + 5  == 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^return new ConcreteUnionType ( Sets.newHashSet ( 0 )  ) ;^74^^^^^68^76^return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^if  ( types == null || types.size() + 4  == 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^if  ( types == null || types .iterator (  )   == 0 )  {^69^^^^^68^76^if  ( types == null || types.size (  )  == 0 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^} else if  ( types.size() - 9  == 1 )  {^71^^^^^68^76^} else if  ( types.size (  )  == 1 )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^return null.iterator (  ) .next (  ) ;^72^^^^^68^76^return types.iterator (  ) .next (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P5_Replace_Variable]^return new ConcreteUnionType ( Sets.newHashSet ( 3 )  ) ;^74^^^^^68^76^return new ConcreteUnionType ( Sets.newHashSet ( types )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] createForTypes [RETURN_TYPE] ConcreteType   ConcreteType> types [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  Collection  types  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^boolean isNone (  )  { return true; }^79^^^^^74^84^boolean isNone (  )  { return false; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isNone [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^boolean isFunction (  )  { return true; }^82^^^^^77^87^boolean isFunction (  )  { return false; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isFunction [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^boolean isInstance (  )  { return true; }^88^^^^^83^93^boolean isInstance (  )  { return false; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isInstance [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^boolean isUnion (  )  { return true; }^91^^^^^86^96^boolean isUnion (  )  { return false; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isUnion [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P3_Replace_Literal]^boolean isAll (  )  { return true; }^94^^^^^89^99^boolean isAll (  )  { return false; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isAll [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P2_Replace_Operator]^boolean isSingleton (  )  { return !isNone (  )  || !isUnion (  )  && !isAll (  ) ; }^97^^^^^92^102^boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isAll (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isSingleton [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^boolean isSingleton (  )  { return !isUnion (  )  && !isUnion (  )  && !isAll (  ) ; }^97^^^^^92^102^boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isAll (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isSingleton [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^boolean isSingleton (  )  { return !isNone (  )  && !toUnion (  )  && !isAll (  ) ; }^97^^^^^92^102^boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isAll (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isSingleton [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isNone (  ) ; }^97^^^^^92^102^boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isAll (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isSingleton [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^boolean isSingleton (  )  { return !isUnion (  )  ;^97^^^^^92^102^boolean isSingleton (  )  { return !isNone (  )  && !isUnion (  )  && !isAll (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isSingleton [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^ConcreteFunctionType toFunction (  )  { return this; }^100^^^^^95^105^ConcreteFunctionType toFunction (  )  { return null; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toFunction [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^ConcreteInstanceType toInstance (  )  { return true; }^103^^^^^98^108^ConcreteInstanceType toInstance (  )  { return null; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toInstance [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^ConcreteUnionType toUnion (  )  { return true; }^106^^^^^101^111^ConcreteUnionType toUnion (  )  { return null; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toUnion [RETURN_TYPE] ConcreteType$ConcreteUnionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P8_Replace_Mix]^StaticScope<ConcreteType> getScope (  )  { return this; }^109^^^^^104^114^StaticScope<ConcreteType> getScope (  )  { return null; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  int  id  
[P7_Replace_Invocation]^Preconditions.checkArgument ( this.isSingleton (  )  ) ;^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^Preconditions.checkState ( this.isUnion (  )  ) ;^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P14_Delete_Statement]^^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkState ( this.isSingleton (  )  ) ;^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkState ( this.isSingleton (  )  ) ;^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkState ( this.isSingleton (  )  ) ;^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( id >= 0 ) ;Preconditions.checkState ( this.isSingleton (  )  ) ;^113^^^^^112^121^Preconditions.checkState ( this.isSingleton (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^if  ( !other.getParameterSlots (  )  )  {^114^^^^^112^121^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^if  ( !other .isUnion (  )   )  {^114^^^^^112^121^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^114^^^^^112^121^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^114^^^^^112^121^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P9_Replace_Statement]^if  ( other.isSingleton (  )  )  {^114^^^^^112^121^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  (  ( types == null )  ||  (  ( types.size (  )  )  == 0 )  )  {     return NONE; }else     if  (  ( types.size (  )  )  == 1 )  {         return types.iterator (  ) .next (  ) ;     }else {         return new ConcreteUnionType ( newHashSet ( types )  ) ;     }^114^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( ! ( other.isSingleton (  )  )  )  {     return other.intersectWith ( this ) ; }else     if  ( equals ( other )  )  {         return this;     }else {         return NONE;     }^114^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return new ConcreteUnionType ( this, other ) ; }^114^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P5_Replace_Variable]^} else if  ( equals ( NONE )  )  {^116^^^^^112^121^} else if  ( equals ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P6_Replace_Expression]^} else {^116^^^^^112^121^} else if  ( equals ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P15_Unwrap_Block]^return this;^116^117^118^119^120^112^121^} else if  ( equals ( other )  )  { return this; } else { return new ConcreteUnionType ( this, other ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P16_Remove_Block]^^116^117^118^119^120^112^121^} else if  ( equals ( other )  )  { return this; } else { return new ConcreteUnionType ( this, other ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  (  ( types.size (  )  )  == 1 )  {     return types.iterator (  ) .next (  ) ; }else {     return new ConcreteUnionType ( newHashSet ( types )  ) ; }^116^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return NONE; }^116^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( ! ( other.isSingleton (  )  )  )  {     return other.unionWith ( this ) ; }else     if  ( equals ( other )  )  {         return this;     }else {         return new ConcreteUnionType ( this, other ) ;     }^116^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( alternatives.contains ( other )  )  {     return other; }else {     return NONE; }^116^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P4_Replace_Constructor]^return return  new ConcreteUnionType ( alts )  ;^119^^^^^112^121^return new ConcreteUnionType ( this, other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P5_Replace_Variable]^return new ConcreteUnionType ( this, NONE ) ;^119^^^^^112^121^return new ConcreteUnionType ( this, other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P8_Replace_Mix]^return  new ConcreteUnionType ( alts )  ;^119^^^^^112^121^return new ConcreteUnionType ( this, other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return new ConcreteUnionType ( this, other ) ; }^119^^^^^112^121^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P8_Replace_Mix]^return null;^117^^^^^112^121^return this;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P5_Replace_Variable]^return NONE.unionWith ( this ) ;^115^^^^^112^121^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^return other.intersectWith ( this ) ;^115^^^^^112^121^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^return other .intersectWith ( other )  ;^115^^^^^112^121^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P8_Replace_Mix]^return NONE.intersectWith ( this ) ;^115^^^^^112^121^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P14_Delete_Statement]^^115^^^^^112^121^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^if  ( !other.getParameterSlots (  )  )  {^125^^^^^124^132^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^125^^^^^124^132^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^125^^^^^124^132^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P9_Replace_Statement]^if  ( other.isSingleton (  )  )  {^125^^^^^124^132^if  ( !other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return NONE; }^125^^^^^124^132^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( ! ( other.isSingleton (  )  )  )  {     return other.unionWith ( this ) ; }else     if  ( equals ( other )  )  {         return this;     }else {         return new ConcreteUnionType ( this, other ) ;     }^125^^^^^124^132^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( alternatives.contains ( other )  )  {     return other; }else {     return NONE; }^125^^^^^124^132^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P5_Replace_Variable]^} else if  ( equals ( ALL )  )  {^127^^^^^124^132^} else if  ( equals ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P6_Replace_Expression]^} else {^127^^^^^124^132^} else if  ( equals ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P15_Unwrap_Block]^return this;^127^128^129^130^131^124^132^} else if  ( equals ( other )  )  { return this; } else { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P16_Remove_Block]^^127^128^129^130^131^124^132^} else if  ( equals ( other )  )  { return this; } else { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( ! ( other.isSingleton (  )  )  )  {     return other.intersectWith ( this ) ; }else     if  ( equals ( other )  )  {         return this;     }else {         return NONE;     }^127^^^^^124^132^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return new ConcreteUnionType ( this, other ) ; }^127^^^^^124^132^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P13_Insert_Block]^if  ( alternatives.contains ( other )  )  {     return other; }else {     return NONE; }^127^^^^^124^132^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P8_Replace_Mix]^return other;^130^^^^^124^132^return NONE;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P8_Replace_Mix]^return null;^128^^^^^124^132^return this;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P5_Replace_Variable]^} else if  ( equals ( NONE )  )  {^127^^^^^124^132^} else if  ( equals ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^return other.unionWith ( this ) ;^126^^^^^124^132^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P8_Replace_Mix]^return NONE.unionWith ( this ) ;^126^^^^^124^132^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P14_Delete_Statement]^^126^^^^^124^132^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P5_Replace_Variable]^return NONE.intersectWith ( this ) ;^126^^^^^124^132^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P7_Replace_Invocation]^return other .unionWith ( other )  ;^126^^^^^124^132^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  other  int  id  
[P6_Replace_Expression]^if  ( type = filter.filter(this) != null )  {^140^^^^^138^155^if  ( isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^if  ( toUnion (  )  )  {^140^^^^^138^155^if  ( isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^140^^^^^138^155^if  ( isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^140^^^^^138^155^if  ( isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P15_Unwrap_Block]^java.util.List<C> list = com.google.common.collect.Lists.newArrayList(); for (com.google.javascript.jscomp.ConcreteType alt : toUnion().getAlternatives()) {    if ((type = filter.filter(alt)) != null) {        list.add(type);    }}; return list;^140^141^142^143^144^138^155^if  ( isUnion (  )  )  { List<C> list = Lists.newArrayList (  ) ; for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  { if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P16_Remove_Block]^^140^141^142^143^144^138^155^if  ( isUnion (  )  )  { List<C> list = Lists.newArrayList (  ) ; for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  { if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^} else if  (  ( type = filter.filter ( this )  )  == null )  {^148^^^^^138^155^} else if  (  ( type = filter.filter ( this )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^} else if  (  ( filter = type.filter ( this )  )  != null )  {^148^^^^^138^155^} else if  (  ( type = filter.filter ( this )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P6_Replace_Expression]^} else {^148^^^^^138^155^} else if  (  ( type = filter.filter ( this )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^} else if  (  ( type = filter.TypeFilter ( this )  )  != null )  {^148^^^^^138^155^} else if  (  ( type = filter.filter ( this )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^} else if  (  ( type = filter.filter ( this )  )  != true )  {^148^^^^^138^155^} else if  (  ( type = filter.filter ( this )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^return filter.emptyList.emptyList;^153^^^^^138^155^return filter.emptyList;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^return filter;^153^^^^^138^155^return filter.emptyList;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^List<String> names = Lists.newArrayList (  ) ;List<C> list = Lists.newArrayList (  ) ;^149^^^^^138^155^List<C> list = Lists.newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^149^^^^^138^155^List<C> list = Lists.newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^150^^^^^138^155^list.add ( type ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^alts.add ( other ) ;list.add ( type ) ;^150^^^^^138^155^list.add ( type ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^} else if  (  ( type =  null.null ( this )  )  !^148^^^^^138^155^} else if  (  ( type = filter.filter ( this )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^if  (  ( type = filter.filter ( alt )  )  == null )  {^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^if  (  ( type = filter.filter ( other )  )  != null )  {^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^if  (  ( type = alt.filter ( filter )  )  != null )  {^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^if  (  ( alt = filter.filter ( type )  )  != null )  {^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  (  ( type = filter.filter ( other )  )  != false )  {^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P15_Unwrap_Block]^list.add(type);^143^144^145^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P16_Remove_Block]^^143^144^145^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P13_Insert_Block]^if  (  ( n.getNext (  )  )  != null )  {     b.append ( ", " ) ; }^143^^^^^138^155^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^144^^^^^138^155^list.add ( type ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^alts.add ( other ) ;list.add ( type ) ;^144^^^^^138^155^list.add ( type ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  (  ( type =  null.null ( alt )  )  !^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^return null;^147^^^^^138^155^return list;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^List<String> names = Lists.newArrayList (  ) ;List<C> list = Lists.newArrayList (  ) ;^141^^^^^138^155^List<C> list = Lists.newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^141^^^^^138^155^List<C> list = Lists.newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^for  ( ConcreteType alt : isUnion (  ) .getAlternatives (  )  )  {^142^^^^^138^155^for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^142^143^144^145^^138^155^for  ( ConcreteType alt : toUnion (  ) .getAlternatives (  )  )  { if  (  ( type = filter.filter ( alt )  )  != null )  { list.add ( type ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  (  ( type = filter.filter ( alt )  )  != this )  {^143^^^^^138^155^if  (  ( type = filter.filter ( alt )  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^149^150^^^^138^155^List<C> list = Lists.newArrayList (  ) ; list.add ( type ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^150^151^^^^138^155^list.add ( type ) ; return list;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getMatchingTypes [RETURN_TYPE] <C>   TypeFilter<C> filter [VARIABLES] Set  alternatives  C  type  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  TypeFilter  filter  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  int  id  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( this )  {^175^^^^^174^180^return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return getMatchingTypes ( new filter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^175^^^^^174^180^return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.isFunction (  )  ? type.toFunction (  )  : null;^177^^^^^174^180^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  )  ? type.toFunction (  )  : null;^177^^^^^174^180^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  )  ? type.getParameterSlots (  )  : null;^177^^^^^174^180^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return type.isFunction (  )  ? type .isFunction (  )   : null;^177^^^^^174^180^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^175^176^177^^^174^180^return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( NO_FUNCTIONS )  { @Override public ConcreteFunctionType filter ( ConcreteType type )  { return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^177^^^^^174^180^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.isFunction (  )  ? type.toFunction (  )  : null;^177^^^^^174^180^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctions [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.isFunction (  )  ? type.toFunction (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  )  ? type.toFunction (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type .toFunction (  )   ? type.toFunction (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  )  ? type.getParameterSlots (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  )  ? type .isFunction (  )   : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return type.isFunction (  )  ? type.getParameterSlots (  )  : true;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.isFunction (  )  ? type.toFunction (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.getParameterSlots (  )  ? type.toFunction (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.isFunction (  )  ? type .isFunction (  )   : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return getMatchingTypes ( new filter<ConcreteInstanceType> ( NO_INSTANCES )  {^184^^^^^183^189^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  )  ? type.toInstance (  )  : null;^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isInstance (  )  ? type.getParameterSlots (  )  : null;^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return type.isInstance (  )  ? type.getParameterSlots (  )  : this;^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P12_Insert_Condition]^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.isInstance (  )  ? type.toInstance (  )  : null; }^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^184^185^186^^^183^189^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  { @Override public ConcreteInstanceType filter ( ConcreteType type )  { return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.isInstance (  )  ? type.toInstance (  )  : null;^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return alt.isInstance (  )  ? type.toInstance (  )  : null;^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isInstance (  )  ? type .isInstance (  )   : null;^186^^^^^183^189^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstances [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  )  ? type.toInstance (  )  : null;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isInstance (  )  ? type.getParameterSlots (  )  : null;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isInstance (  )  ? type .isInstance (  )   : null;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return type.isInstance (  )  ? type.getParameterSlots (  )  : false;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P12_Insert_Condition]^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.isInstance (  )  ? type.toInstance (  )  : null; }^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.isInstance (  )  ? type.toInstance (  )  : null;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( other.isFunction (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.getParameterSlots (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type .toFunction (  )   )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^if  ( alt .toFunction (  )   )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( !other.isSingleton (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( isUnion (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( other.isSingleton (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P15_Unwrap_Block]^return type.toFunction().getInstanceType();^195^196^197^^^192^201^if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P16_Remove_Block]^^195^196^197^^^192^201^if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P13_Insert_Block]^if  ( type.isInstance (  )  )  {     slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^195^^^^^192^201^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.toFunction (  ) .getInstanceType (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.toFunction (  ) .getParameterName (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.toFunction (  )  .getPrototypeType (  )  ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) .getInstanceType (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type .isFunction (  )  .getInstanceType (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P13_Insert_Block]^if  ( type.isFunction (  )  )  {     return type.toFunction (  ) .getInstanceType (  ) ; }^196^^^^^192^201^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return alt.getParameterSlots (  ) .getInstanceType (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.toFunction (  ) .getInstanceType (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.getParameterSlots (  ) .getInstanceType (  ) ;^196^^^^^192^201^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return getMatchingTypes ( new filter<ConcreteInstanceType> ( NO_INSTANCES )  {^193^^^^^192^201^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return true;^198^^^^^192^201^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( null )  {^193^^^^^192^201^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( alt.isFunction (  )  )  {^195^^^^^192^201^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFunctionInstanceTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( alt.isFunction (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.getParameterSlots (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( !other.isSingleton (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( isUnion (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P9_Replace_Statement]^if  ( other.isSingleton (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P15_Unwrap_Block]^return type.toFunction().getInstanceType();^195^196^197^^^194^199^if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P16_Remove_Block]^^195^196^197^^^194^199^if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P13_Insert_Block]^if  ( type.isInstance (  )  )  {     slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^195^^^^^194^199^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.toFunction (  ) .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.toFunction (  ) .getParameterName (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P13_Insert_Block]^if  ( type.isFunction (  )  )  {     return type.toFunction (  ) .getInstanceType (  ) ; }^196^^^^^194^199^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.toFunction (  ) .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.toFunction (  )  .getPrototypeType (  )  ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type .isFunction (  )  .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.getParameterSlots (  ) .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( other.isFunction (  )  )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type .toFunction (  )   )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other .isFunction (  )  .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return this;^198^^^^^194^199^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P2_Replace_Operator]^if  ( type.isInstance (  ) || type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( alt.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^if  ( type.isInstance (  ) ) {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^if  (  type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.getParameterSlots (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type .toInstance (  )  && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type.toInstance (  ) .getPropertySlot (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type.getParameterSlots (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type .isInstance (  )  .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^if  ( other.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P15_Unwrap_Block]^return type.toInstance();^207^208^209^210^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P16_Remove_Block]^^207^208^209^210^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.toInstance (  ) ;^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) ;^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type .isInstance (  )  ;^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P12_Insert_Condition]^if  ( type.isInstance (  )  )  { return type.toInstance (  ) ; }^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return alt.getParameterSlots (  ) ;^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return getMatchingTypes ( new filter<ConcreteInstanceType> ( NO_INSTANCES )  {^205^^^^^204^214^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.toInstance (  ) ;^209^^^^^204^214^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return false;^211^^^^^204^214^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( null )  {^205^^^^^204^214^return getMatchingTypes ( new TypeFilter<ConcreteInstanceType> ( NO_INSTANCES )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^if  ( other .toInstance (  )  && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^204^214^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^&& other.toInstance (  ) .isFunctionPrototype (  )  )  {^208^^^^^204^214^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.toInstance (  ) .getPropertySlot (  )  )  {^208^^^^^204^214^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.toInstance (  )  .getImplicitPrototype (  )   )  {^208^^^^^204^214^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.getParameterSlots (  ) .isFunctionPrototype (  )  )  {^208^^^^^204^214^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type .isInstance (  )  .isFunctionPrototype (  )  )  {^208^^^^^204^214^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^208^209^^^^204^214^&& type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P2_Replace_Operator]^if  ( type.isInstance (  ) || type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( alt.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^if  ( type.isInstance (  ) ) {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^if  (  type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.getParameterSlots (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type.toInstance (  ) .getPropertySlot (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type.toInstance (  )  .getImplicitPrototype (  )   )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type.getParameterSlots (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^if  ( alt.getParameterSlots (  ) ) {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P15_Unwrap_Block]^return type.toInstance();^207^208^209^210^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P16_Remove_Block]^^207^208^209^210^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.toInstance (  ) ;^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) ;^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P12_Insert_Condition]^if  ( type.isInstance (  )  )  { return type.toInstance (  ) ; }^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.toInstance (  ) ;^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type .isInstance (  )  ;^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^if  ( other.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^&& other.toInstance (  ) .isFunctionPrototype (  )  )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.toInstance (  ) .getPropertySlot (  )  )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.getParameterSlots (  ) .isFunctionPrototype (  )  )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type .isInstance (  )  .isFunctionPrototype (  )  )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^&& type.toInstance (  )  .getImplicitPrototype (  )   )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^208^209^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^&& alt.getParameterSlots (  ) .isFunctionPrototype (  )  )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.getParameterSlots (  ) ;^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return false;^211^^^^^206^212^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return getMatchingTypes ( new filter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^218^^^^^217^225^return getMatchingTypes ( new TypeFilter<ConcreteFunctionType> ( NO_FUNCTIONS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P2_Replace_Operator]^return type.isFunction (  ) || type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P2_Replace_Operator]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  == null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return alt.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  type.toFunction (  ) .getSuperclassType (  )  ;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  ) && type.toFunction (  ) .getParameterSlot (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  ) && type.toFunction (  )  .getJSType (  )   != null ? type.toFunction (  )^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  ) && type.getParameterSlots (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^220^221^222^^^217^225^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^&& type.toFunction (  ) .getSuperclassType (  )  ! =  null;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^&& type.toFunction (  ) .getSuperclassType (  )  ! =  type.toFunction (  ) .getSuperclassType (  )  ;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.toFunction (  ) .getParameterSlot (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.getParameterSlots (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^&& alt.getParameterSlots (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^&& alt.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^&& other.getParameterSlots (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^217^225^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type.toFunction (  ) .getParameterSlot (  )  : null;^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type.toFunction (  )  .getJSType (  )   : null;^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type.getParameterSlots (  ) .getSuperclassType (  )  : null;^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type .isFunction (  )  .getSuperclassType (  )  : null;^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^? other.toFunction (  ) .getSuperclassType (  )  : null;^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^? alt.toFunction (  ) .getSuperclassType (  )  : null;^222^^^^^217^225^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassTypes [RETURN_TYPE] List   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P2_Replace_Operator]^return type.isFunction (  ) || type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P2_Replace_Operator]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  == null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^return other.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  type.toFunction (  ) .getSuperclassType (  )  ;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  ) && type.toFunction (  ) .getParameterSlot (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  ) && type.getParameterSlots (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^return type.isFunction (  ) && type .isFunction (  )  .getSuperclassType (  )  != null ? type^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^return other.getParameterSlots (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^&& alt.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^&& type.toFunction (  ) .getSuperclassType (  )  ! =  null;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P6_Replace_Expression]^&& type.toFunction (  ) .getSuperclassType (  )  ! =  type.toFunction (  ) .getSuperclassType (  )  ;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.toFunction (  ) .getParameterSlot (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type.getParameterSlots (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^&& type .isFunction (  )  .getSuperclassType (  )  != null ? type^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^&& other.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P5_Replace_Variable]^? alt.toFunction (  ) .getSuperclassType (  )  : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type.toFunction (  ) .getParameterSlot (  )  : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type.toFunction (  )  .getJSType (  )   : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type.getParameterSlots (  ) .getSuperclassType (  )  : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P8_Replace_Mix]^? other.toFunction (  ) .getSuperclassType (  )  : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P14_Delete_Statement]^^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P7_Replace_Invocation]^? type .isFunction (  )  .getSuperclassType (  )  : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  
[P4_Replace_Constructor]^return getMatchingTypes ( return getMatchingTypes (  new ConcreteFunctionType> ( NO_FUNCTIONS )  {     Override     public ConcreteFunctionType filter ( ConcreteType type )  {         return  ( type.isFunction (  )  )  &&  (  ( type.toFunction (  ) .getSuperclassType (  )  )  != null )  ? type.toFunction (  ) .getSuperclassType (  )  : null;     } }   {^229^^^^^228^236^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^return false ;^229^^^^^228^236^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P2_Replace_Operator]^return type.isFunction (  ) || toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P2_Replace_Operator]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  == null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return other.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( id )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return index.isFunction (  ) && toFunction (  ) .getParameterSlot ( type )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type .toFunction (  )  && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.isFunction (  ) && toFunction (  ) .getParameterName ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.isFunction (  ) && toFunction (  )  .getParameterName ( index )   != null ? toFunction (  )^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.isFunction (  ) && isFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^return type.getParameterSlots (  ) && toFunction (  ) .getParameterSlot ( index )  != false ? toFunction (  ) .getParameterSlot ( index )  : false;^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( this )  {^229^^^^^228^236^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^231^232^233^^^228^236^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^&& toFunction (  ) .getParameterSlot ( id )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^&& toFunction (  ) .getParameterSlot ( index )  ! =  null;^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^&& toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^&& toFunction (  ) .getParameterName ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^&& toFunction (  )  .getParameterName ( index )   != null ? toFunction (  )^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^&& isFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^232^233^^^^228^236^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^? toFunction (  ) .getParameterName ( index )  : null;^233^^^^^228^236^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^? isFunction (  ) .getParameterSlot ( index )  : null;^233^^^^^228^236^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^? toFunction (  ) .getParameterSlot ( id )  : null;^233^^^^^228^236^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^233^^^^^228^236^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlots [RETURN_TYPE] List   final int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P2_Replace_Operator]^return type.isFunction (  ) || toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P2_Replace_Operator]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  == null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return alt.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( id )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return index.isFunction (  ) && toFunction (  ) .getParameterSlot ( type )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type .toFunction (  )  && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.isFunction (  ) && toFunction (  ) .getParameterName ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.isFunction (  ) && toFunction (  )  .getParameterName ( id )   != null ? toFunction (  )^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^return type.isFunction (  ) && isFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return other.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^&& toFunction (  ) .getParameterSlot ( id )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^&& toFunction (  ) .getParameterSlot ( index )  ! =  null;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P6_Replace_Expression]^&& toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^&& toFunction (  ) .getParameterName ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^&& isFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^? toFunction (  ) .getParameterSlot ( id )  : null;^233^^^^^230^234^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^? toFunction (  ) .getParameterName ( index )  : null;^233^^^^^230^234^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^? isFunction (  ) .getParameterSlot ( index )  : null;^233^^^^^230^234^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^233^^^^^230^234^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^if  ( other.isInstance (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^if  ( type.getParameterSlots (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( !other.isSingleton (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( isUnion (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( other.isSingleton (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P15_Unwrap_Block]^slot = type.toInstance().getPropertySlot(name);^246^247^248^^^242^252^if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P16_Remove_Block]^^246^247^248^^^242^252^if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P13_Insert_Block]^if  ( type.isFunction (  )  )  {     return type.toFunction (  ) .getInstanceType (  ) ; }^246^^^^^242^252^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^slot = other.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^slot = type.toInstance (  ) .getPropertySlot ( THIS_SLOT_NAME ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^slot = name.toInstance (  ) .getPropertySlot ( type ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type.toInstance (  ) .ConcreteInstanceType ( name ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type.getParameterSlots (  ) .getPropertySlot ( name ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^slot =  alt.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P13_Insert_Block]^if  ( type.isInstance (  )  )  {     slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^247^^^^^242^252^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type .isInstance (  )  .getPropertySlot ( name ) ;^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^247^^^^^242^252^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P4_Replace_Constructor]^return getMatchingTypes ( return getMatchingTypes (  new ConcreteType>> ( NO_SLOTS )  {     Override     public ConcreteType> filter ( ConcreteType type )  {         return  ( type.isFunction (  )  )  &&  (  ( toFunction (  ) .getParameterSlot ( index )  )  != null )  ? toFunction (  ) .getParameterSlot ( index )  : null;     } }   {^243^^^^^242^252^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^return getMatchingTypes (  new ConcreteType>> ( NO_SLOTS )  {     Override     public ConcreteType> filter ( ConcreteType type )  {         return  ( type.isFunction (  )  )  &&  (  ( toFunction (  ) .getParameterSlot ( index )  )  != null )  ? toFunction (  ) .getParameterSlot ( index )  : null;     } }   {^243^^^^^242^252^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^return null;^249^^^^^242^252^return slot;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P11_Insert_Donor_Statement]^ConcreteType ret = NONE;StaticSlot<ConcreteType> slot = null;^245^^^^^242^252^StaticSlot<ConcreteType> slot = null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^243^244^245^^^242^252^return getMatchingTypes ( new TypeFilter<StaticSlot<ConcreteType>> ( NO_SLOTS )  { @Override public StaticSlot<ConcreteType> filter ( ConcreteType type )  { StaticSlot<ConcreteType> slot = null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^if  ( other.getParameterSlots (  )  )  {^246^^^^^242^252^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlots [RETURN_TYPE] List   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P11_Insert_Donor_Statement]^ConcreteType ret = NONE;StaticSlot<ConcreteType> slot = null;^245^^^^^244^250^StaticSlot<ConcreteType> slot = null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^if  ( alt.isInstance (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^if  ( type.getParameterSlots (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^if  ( other .toInstance (  )   )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( !other.isSingleton (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( isUnion (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P9_Replace_Statement]^if  ( other.isSingleton (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P15_Unwrap_Block]^slot = type.toInstance().getPropertySlot(name);^246^247^248^^^244^250^if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P16_Remove_Block]^^246^247^248^^^244^250^if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P13_Insert_Block]^if  ( type.isFunction (  )  )  {     return type.toFunction (  ) .getInstanceType (  ) ; }^246^^^^^244^250^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^slot = alt.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^slot = type.toInstance (  ) .getPropertySlot ( THIS_SLOT_NAME ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^slot = name.toInstance (  ) .getPropertySlot ( type ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type.toInstance (  ) .ConcreteInstanceType ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type.toInstance (  )  .getScope (  )  ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type.getParameterSlots (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^slot =  other.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P13_Insert_Block]^if  ( type.isInstance (  )  )  {     slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^247^^^^^244^250^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P7_Replace_Invocation]^slot = type .isInstance (  )  .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^slot = alt.getParameterSlots (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P14_Delete_Statement]^^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P8_Replace_Mix]^if  ( other.isInstance (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^return 2;^249^^^^^244^250^return slot;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  type  int  id  index  
[P5_Replace_Variable]^ConcreteType ret = type;^260^^^^^259^265^ConcreteType ret = NONE;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P11_Insert_Donor_Statement]^StaticSlot<ConcreteType> slot = null;ConcreteType ret = NONE;^260^^^^^259^265^ConcreteType ret = NONE;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^ret = type.unionWith ( slot.getType (  )  ) ;^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^ret = slot.unionWith ( ret.getType (  )  ) ;^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^ret = ret .intersectWith ( ret )  ;^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^for  ( StaticSlot<ConcreteType> slot : getPropertySlots ( THIS_SLOT_NAME )  )  {^261^^^^^259^265^for  ( StaticSlot<ConcreteType> slot : getPropertySlots ( name )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^for  ( StaticSlot<ConcreteType> slot : getPropertyType ( name )  )  {^261^^^^^259^265^for  ( StaticSlot<ConcreteType> slot : getPropertySlots ( name )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P14_Delete_Statement]^^261^262^263^^^259^265^for  ( StaticSlot<ConcreteType> slot : getPropertySlots ( name )  )  { ret = ret.unionWith ( slot.getType (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^ret = other.unionWith ( slot.getType (  )  ) ;^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P14_Delete_Statement]^^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P11_Insert_Donor_Statement]^b.append ( var.getType (  )  ) ;ret = ret.unionWith ( slot.getType (  )  ) ;^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P11_Insert_Donor_Statement]^getParameterSlot ( i ) .getType (  ) ;ret = ret.unionWith ( slot.getType (  )  ) ;^262^^^^^259^265^ret = ret.unionWith ( slot.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^return type;^264^^^^^259^265^return ret;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertyType [RETURN_TYPE] ConcreteType   String name [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  slot  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P3_Replace_Literal]^@Override boolean isNone (  )  { return false; }^269^^^^^264^274^@Override boolean isNone (  )  { return true; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isNone [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^@Override ConcreteType unionWith ( ConcreteType ret )  { return other; }^271^^^^^266^276^@Override ConcreteType unionWith ( ConcreteType other )  { return other; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P8_Replace_Mix]^@Override ConcreteType unionWith ( ConcreteType type )  { return other; }^271^^^^^266^276^@Override ConcreteType unionWith ( ConcreteType other )  { return other; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^@Override ConcreteType intersectWith ( ConcreteType other )  { return ret; }^273^^^^^268^278^@Override ConcreteType intersectWith ( ConcreteType other )  { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P1_Replace_Type]^@Override public char tochar (  )  { return " (  ) "; }^275^^^^^270^280^@Override public String toString (  )  { return " (  ) "; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P3_Replace_Literal]^@Override boolean isFunction (  )  { return false; }^316^^^^^311^321^@Override boolean isFunction (  )  { return true; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isFunction [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P8_Replace_Mix]^@Override ConcreteFunctionType toFunction (  )  { return null; }^318^^^^^313^323^@Override ConcreteFunctionType toFunction (  )  { return this; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toFunction [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( name ) ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getScope (  )  .getSlot ( THIS_SLOT_NAME )  ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P8_Replace_Mix]^return getScope (  )  .getSlot ( RETURN_SLOT_NAME )  ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P12_Insert_Condition]^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  { return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ; }^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P8_Replace_Mix]^return getJSType (  ) .getOwnSlot ( name ) ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P14_Delete_Statement]^^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( name ) ;^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P12_Insert_Condition]^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  { return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ; }^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P8_Replace_Mix]^return getScope (  )  .getSlot ( CALL_SLOT_NAME )  ;^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P14_Delete_Statement]^^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( name ) ;^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P8_Replace_Mix]^return getScope (  )  .getSlot ( name )  ;^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P12_Insert_Condition]^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  { return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ; }^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P14_Delete_Statement]^^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( getParameterName ( id )  ) ;^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getScope (  ) .getSlot ( getParameterName ( index )  ) ;^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( getParameterName ( index )  ) ;^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P7_Replace_Invocation]^return getScope (  ) .getOwnSlot ( getParameterSlot ( index )  ) ;^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P12_Insert_Condition]^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  { return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ; }^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P14_Delete_Statement]^^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  id  index  
[P1_Replace_Type]^short  count = 0;^347^^^^^346^354^int count = 0;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P3_Replace_Literal]^int count = 1;^347^^^^^346^354^int count = 0;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P2_Replace_Operator]^if  ( count++ != index )  {^349^^^^^346^354^if  ( count++ == index )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^if  ( count++ == id )  {^349^^^^^346^354^if  ( count++ == index )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P15_Unwrap_Block]^return n.getString();^349^350^351^^^346^354^if  ( count++ == index )  { return n.getString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P16_Remove_Block]^^349^350^351^^^346^354^if  ( count++ == index )  { return n.getString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^return declaration.getString (  ) ;^350^^^^^346^354^return n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return n .getFirstChild (  )  ;^350^^^^^346^354^return n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^350^^^^^346^354^return n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P2_Replace_Operator]^for  ( Node n = getFirstParameter (  ) ; n == null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^for  ( Node declaration = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^for  ( Node n = getInstanceType (  ) ; n != null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^for  ( Node n = getFirstParameter (  ) ; n != null; n = n .getType (  )   )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^for  ( Node n =  getFirstParameter (  ) ; declaration !^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^348^349^350^351^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  { if  ( count++ == index )  { return n.getString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^return this;^353^^^^^346^354^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^return n.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return declaration.getNext (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return declaration .getString (  )  .getNext (  )^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return declaration.getFirstChild (  ) .getFirstChild (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return declaration.getFirstChild (  )  .getType (  )  .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return declaration.getString (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^return n.getString (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^return  ( FunctionType )  n.getJSType (  ) ;^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return  ( FunctionType )  declaration.getType (  ) ;^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P2_Replace_Operator]^if  ( instanceType != null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^if  ( prototypeType == null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^if  ( prototypeType == true )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( scope == null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( bodyScope == null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P15_Unwrap_Block]^if (getJSType().isConstructor()) {    instanceType = factory.createConcreteInstance(getJSType().getInstanceType());};^371^372^373^374^375^370^378^if  ( instanceType == null )  { if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P16_Remove_Block]^^371^372^373^374^375^370^378^if  ( instanceType == null )  { if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^371^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^371^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^if  ( getJSType (  ) .getInstanceType (  )  )  {^372^^^^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^if  ( getScope (  ) .isConstructor (  )  )  {^372^^^^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P15_Unwrap_Block]^instanceType = factory.createConcreteInstance(getJSType().getInstanceType());^372^373^374^375^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P16_Remove_Block]^^372^373^374^375^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( instanceType )  == null )  {     if  ( getJSType (  ) .isConstructor (  )  )  {         instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;     } }^372^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^372^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( scope )  == null )  {     scope = factory.createInstanceScope ( instanceType ) ; }^372^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^instanceType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^instanceType = factory.createConcreteInstance ( getScope (  ) .getInstanceType (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^instanceType  =  instanceType ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^prototype = factory.createConcreteInstance ( proto ) ;instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^scope = factory.createInstanceScope ( instanceType ) ;instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^373^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^373^^^^^370^378^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^factory .createFunctionScope ( n , 3 )   ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getScope (  ) .getInstanceType (  )  ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^if  ( getJSType (  )  .getSuperClassConstructor (  )   )  {^372^^^^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^instanceType = factory.createConcreteInstance ( getJSType (  )  .getPrototypeType (  )   ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getJSType (  )  .getPrototypeType (  )   ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^instanceType ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^return prototypeType;^377^^^^^370^378^return instanceType;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P2_Replace_Operator]^if  ( prototypeType != null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^if  ( prototype == null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^if  ( prototypeType == false )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( scope == null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( bodyScope == null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( instanceType == null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P15_Unwrap_Block]^prototypeType = factory.createConcreteInstance(getJSType().getPrototype());^382^383^384^385^^381^387^if  ( prototypeType == null )  { prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P16_Remove_Block]^^382^383^384^385^^381^387^if  ( prototypeType == null )  { prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( instanceType )  == null )  {     if  ( getJSType (  ) .isConstructor (  )  )  {         instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;     } }^382^^^^^381^387^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( bodyScope )  == null )  {     bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^382^^^^^381^387^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^382^^^^^381^387^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( scope )  == null )  {     scope = factory.createInstanceScope ( instanceType ) ; }^382^^^^^381^387^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^prototypeType = factory.createConcreteInstance ( getScope (  ) .getPrototype (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^prototypeType ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^prototype = factory.createConcreteInstance ( proto ) ;prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^383^^^^^381^387^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^383^^^^^381^387^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getScope (  ) .getPrototype (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^return getConstructorType (  ) .getPrototypeType (  ) ;factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^prototypeType  = null ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^return prototype;^386^^^^^381^387^return prototypeType;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^FunctionType superConstructor = getJSType (  ) .isConstructor (  ) ;^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^FunctionType superConstructor = getScope (  ) .getSuperClassConstructor (  ) ;^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^FunctionType constructor = instanceType.getConstructor (  ) ;FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^return getConstructorType (  ) .getPrototypeType (  ) ;FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P2_Replace_Operator]^return  ( superConstructor == null ) ? factory.getConcreteFunction ( superConstructor )  : null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^return  ( factory != null ) ? superConstructor.getConcreteFunction ( superConstructor )  : null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P6_Replace_Expression]^return  ( superConstructor ! =  null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P6_Replace_Expression]^return  ( superConstructor ! =  factory.getConcreteFunction ( superConstructor )  ;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^return  ( superConstructor != null ) ? factory.createConcreteInstance ( superConstructor )  : null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^? superConstructor.getConcreteFunction ( factory )  : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^? factory.createConcreteInstance ( superConstructor )  : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^? factory .createConcreteInstance ( instanceType )   : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^? factory.getConcreteFunction ( constructor )  : null;? factory.getConcreteFunction ( superConstructor )  : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;? factory.getConcreteFunction ( superConstructor )  : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  superConstructor  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P2_Replace_Operator]^if  ( bodyScope != null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^if  ( bodyScope == this )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( scope == null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( prototypeType == null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P9_Replace_Statement]^if  ( instanceType == null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P15_Unwrap_Block]^bodyScope = factory.createFunctionScope(declaration, parentScope);^398^399^400^^^397^402^if  ( bodyScope == null )  { bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P16_Remove_Block]^^398^399^400^^^397^402^if  ( bodyScope == null )  { bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^398^^^^^397^402^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( scope )  == null )  {     scope = factory.createInstanceScope ( instanceType ) ; }^398^^^^^397^402^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope ( n, parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope (  parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope ( declaration ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^bodyScope = parentScope.createFunctionScope ( declaration, factory ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^bodyScope = declaration.createFunctionScope ( factory, parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope ( parentScope, declaration ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P7_Replace_Invocation]^bodyScope = factory .createInstanceScope ( instanceType )  ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P8_Replace_Mix]^bodyScope  =  bodyScope ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P11_Insert_Donor_Statement]^scope = factory.createInstanceScope ( instanceType ) ;bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P13_Insert_Block]^if  (  ( bodyScope )  == null )  {     bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^399^^^^^397^402^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P14_Delete_Statement]^^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  id  index  
[P3_Replace_Literal]^StringBuilder b = new StringBuilder ( i ) ;^411^^^^^410^439^StringBuilder b = new StringBuilder ( 32 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^StringBuilder b = new StringBuilder ( id ) ;^411^^^^^410^439^StringBuilder b = new StringBuilder ( 32 ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( CALL_SLOT_NAME )  ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^b .append ( RETURN_SLOT_NAME )  ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^412^413^^^^410^439^b.append ( "function  ( " ) ; boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( var.getType (  )  ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isFunctionType (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  )  .isUnion (  )  ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^boolean hasKnownTypeOfThis = !getReturnSlot (  ) .getType (  ) .isNone (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P9_Replace_Statement]^if  ( hasKnownTypeOfThis && n != null )  {^414^^^^^410^439^if  ( hasKnownTypeOfThis )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P15_Unwrap_Block]^b.append("this:"); b.append(getThisSlot().getType().toString());^414^415^416^417^^410^439^if  ( hasKnownTypeOfThis )  { b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P16_Remove_Block]^^414^415^416^417^^410^439^if  ( hasKnownTypeOfThis )  { b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P13_Insert_Block]^if  (  ( getReturnSlot (  ) .getType (  )  )  != null )  {     b.append ( ": " ) ;     b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^414^^^^^410^439^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^b.append ( "this:t" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^b .append ( name )  ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^415^416^^^^410^439^b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b.append ( getThisSlot (  ) .getType (  ) .isNone (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P12_Insert_Condition]^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^b.append ( "hihis:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( RETURN_SLOT_NAME )  ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^Node n = getInstanceType (  ) ;^419^^^^^410^439^Node n = getFirstParameter (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^419^^^^^410^439^Node n = getFirstParameter (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^if  ( hasKnownTypeOfThis || n != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^if  ( hasKnownTypeOfThis && n == null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^if  ( hasKnownTypeOfThis && declaration != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^if  ( n && hasKnownTypeOfThis != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P6_Replace_Expression]^if  ( hasKnownTypeOfThis ) {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P6_Replace_Expression]^if  (  n != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  (  n != this )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P15_Unwrap_Block]^b.append(", ");^420^421^422^^^410^439^if  ( hasKnownTypeOfThis && n != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P16_Remove_Block]^^420^421^422^^^410^439^if  ( hasKnownTypeOfThis && n != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P13_Insert_Block]^if  (  ( n.getNext (  )  )  != null )  {     b.append ( ", " ) ; }^420^^^^^410^439^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^b.append ( ", ," ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( name )  ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^if  ( n.getNext (  )  == null )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^if  ( n .getType (  )   != null )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  ( declaration.getNext (  )  != true )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P15_Unwrap_Block]^b.append(", ");^428^429^430^^^410^439^if  ( n.getNext (  )  != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P16_Remove_Block]^^428^429^430^^^410^439^if  ( n.getNext (  )  != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P13_Insert_Block]^if  ( hasKnownTypeOfThis &&  ( n != null )  )  {     b.append ( ", " ) ; }^428^^^^^410^439^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P13_Insert_Block]^if  (  ( type = filter.filter ( alt )  )  != null )  {     list.add ( type ) ; }^428^^^^^410^439^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^b.append ( " " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( THIS_SLOT_NAME )  ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^b .append ( paramName )  ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P1_Replace_Type]^for  (  short  i = 0; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^for  ( int i = 0; n == null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^for  ( int i = count; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^for  ( int i = 0; declaration != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^for  ( indexnt i = 0; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^for  ( int i = 0; n != null; ++i = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^for  ( int i = 0; n != null; ++ n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^for  ( nnt i = 0; i != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^for  ( int i = 0; n != null; ++i, n = n .getType (  )   )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^for  ( indexnt i = 0; n != null; ++i, n = n .getType (  )   )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^if  ( declaration.getNext (  )  != null )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  ( n.getNext (  )  != true )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^b.append ( "," ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P1_Replace_Type]^char paramName = n.getchar (  ) ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^String paramName = declaration.getString (  ) ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^String paramName = n .getFirstChild (  )  ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^StaticSlot<ConcreteType> var = getScope (  ) .getSlot ( paramName ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^StaticSlot<ConcreteType> var = getJSType (  ) .getOwnSlot ( paramName ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( name ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^String paramName = declaration .getFirstChild (  )  ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^424^425^^^^410^439^String paramName = n.getString (  ) ; StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String paramName = n.getString (  ) ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^425^426^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ; b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^return getScope (  ) .getSlot ( propName ) ;StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( name )  ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^b .append ( THIS_SLOT_NAME )  ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^426^427^^^^410^439^b.append ( var.getType (  )  ) ; getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^ret = ret.unionWith ( slot.getType (  )  ) ;b.append ( var.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( var.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( var.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^getParameterSlot ( index ) .getType (  ) ;^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^getParameterName ( i ) .getType (  ) ;^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^ret = ret.unionWith ( slot.getType (  )  ) ;getParameterSlot ( i ) .getType (  ) ;^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^for  ( int i =  0; declaration !^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^for  ( int i = 2; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^for  ( int i = 0; declaration != null; ++i, n = n .getType (  )   )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^getParameterName ( index ) .getType (  ) ;^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( RETURN_SLOT_NAME )  ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( var.getType (  )  ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^if  ( getReturnSlot (  ) .getType (  )  == null )  {^434^^^^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^if  ( getThisSlot (  ) .getType (  )  != null )  {^434^^^^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  ( getReturnSlot (  ) .getType (  )  != this )  {^434^^^^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P15_Unwrap_Block]^b.append(": "); b.append(getReturnSlot().getType().toString());^434^435^436^437^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P16_Remove_Block]^^434^435^436^437^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P13_Insert_Block]^if  ( hasKnownTypeOfThis )  {     b.append ( "this:" ) ;     b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^434^^^^^410^439^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^b.append ( " " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^b .append ( THIS_SLOT_NAME )  ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .StringBuilder ( i )  .toString (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b.append ( getReturnSlot (  ) .getType (  ) .isNone (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P12_Insert_Condition]^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^b .append ( name )  ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^435^436^^^^410^439^b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^b.append ( getReturnSlot (  ) .getType (  )  .join ( null )   ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^return b.StringBuilder (  ) ;^438^^^^^410^439^return b.toString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^438^^^^^410^439^return b.toString (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Set  alternatives  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  StaticSlot  var  boolean  hasKnownTypeOfThis  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P3_Replace_Literal]^@Override boolean isInstance (  )  { return false; }^474^^^^^469^479^@Override boolean isInstance (  )  { return true; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isInstance [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^@Override ConcreteInstanceType toInstance (  )  { return null; }^476^^^^^471^481^@Override ConcreteInstanceType toInstance (  )  { return this; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toInstance [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return instanceType.getImplicitPrototype (  ) ;^480^^^^^479^481^return instanceType.isFunctionPrototypeType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isFunctionPrototype [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P12_Insert_Condition]^if  ( instanceType.isFunctionPrototypeType (  )  )  { return instanceType.isFunctionPrototypeType (  ) ; }^480^^^^^479^481^return instanceType.isFunctionPrototypeType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isFunctionPrototype [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^480^^^^^479^481^return instanceType.isFunctionPrototypeType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isFunctionPrototype [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return getScope (  ) .getSlot ( paramName ) ;^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getScope (  ) .getOwnSlot ( propName ) ;^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getConstructorType (  ) .getSlot ( propName ) ;^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P12_Insert_Condition]^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  { return getScope (  ) .getSlot ( propName ) ; }^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getScope (  )  .getOwnSlot ( paramName )  ;^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  ( getScope (  ) .getOwnSlot ( propName )  == null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( getScope (  ) .getOwnSlot ( name )  != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( instanceType.getConstructor() != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( getImplicitPrototype() != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( getScope (  ) .getSlot ( propName )  != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( getScope (  )  .getSlot ( paramName )   != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( getConstructorType (  ) .getOwnSlot ( propName )  != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  ( getScope (  ) .getOwnSlot ( propName )  != false )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^} else if  ( getImplicitPrototype (  )  == null )  {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^} else {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( isFunctionPrototype (  )  != null )  {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^return getImplicitPrototype().getInstanceTypeWithProperty(propName);^508^509^510^511^512^492^513^} else if  ( getImplicitPrototype (  )  != null )  { return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ; } else { return null; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^508^509^510^511^512^492^513^} else if  ( getImplicitPrototype (  )  != null )  { return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ; } else { return null; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return false;^511^^^^^492^513^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( paramName ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getImplicitPrototype (  ) .getPropertySlot ( propName ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return isFunctionPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return getImplicitPrototype (  )  .getConstructorType (  )  ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return getImplicitPrototype (  ) .getPropertySlot ( name ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return true;^511^^^^^492^513^return null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  ( instanceType.getConstructor (  )  == null )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( instanceType.toString (  )  != null )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  ( instanceType.getConstructor (  )  != true )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^return getConstructorType().getPrototypeType();^504^505^506^^^492^513^if  ( instanceType.getConstructor (  )  != null )  { return getConstructorType (  ) .getPrototypeType (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^504^505^506^^^492^513^if  ( instanceType.getConstructor (  )  != null )  { return getConstructorType (  ) .getPrototypeType (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getConstructorType (  ) .getInstanceType (  ) ;^505^^^^^492^513^return getConstructorType (  ) .getPrototypeType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getScope (  ) .getPrototypeType (  ) ;^505^^^^^492^513^return getConstructorType (  ) .getPrototypeType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^505^^^^^492^513^return getConstructorType (  ) .getPrototypeType (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return null;^507^^^^^492^513^return this;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  ( instanceType.toString (  )  != true )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return isFunctionPrototype (  ) .getInstanceTypeWithProperty ( name ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( name ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( getScope (  ) .getOwnSlot ( paramName )  != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( prototype == null ) ||  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( prototype != null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  == null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  (  ( instanceTypetype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  (  ( prototypeType == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  (  ( instanceTypetype == null ) &&  ( proto.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  (  ( proto == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  (  ( prototype == null ) ) {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  (   ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( prototype == null )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( instanceType.getImplicitPrototype (  )  != null )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( proto != instanceType && !(proto instanceof UnknownType) )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( proto != instanceType )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( proto instanceof UnknownType )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  (  ( prototype == null ) &&  ( instanceType.isFunctionPrototypeType (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  (  ( prototype == null ) &&  ( instanceType .isFunctionPrototype (  )   != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  (  ( prototype == false ) ) {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.ObjectType proto = instanceType.getImplicitPrototype(); if ((proto != (instanceType)) && (!(proto instanceof com.google.javascript.rhino.jstype.UnknownType))) {    prototype = factory.createConcreteInstance(proto);};^517^518^519^520^521^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ; if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^517^518^519^520^521^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ; if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( proto != instanceType )  || ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( proto > instanceType )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( proto != instanceType )  && ! ( proto  >>  UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  (  ( proto != proto )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  (  ( instanceType != proto )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  (  ( proto != instanceType )  ) {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  (  ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( proto != instanceType )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^if  ( proto instanceof UnknownType )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^prototype = factory.createConcreteInstance(proto);^520^521^522^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^520^521^522^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^prototype = factory.createConcreteInstance ( instanceType ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^prototype = proto.createConcreteInstance ( factory ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^prototype = factory.createInstanceScope ( proto ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^scope = factory.createInstanceScope ( instanceType ) ;prototype = factory.createConcreteInstance ( proto ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;prototype = factory.createConcreteInstance ( proto ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;prototype = factory.createConcreteInstance ( proto ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^ObjectType proto = instanceType.isFunctionPrototypeType (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^ObjectType proto = instanceType .isFunctionPrototype (  )  ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^FunctionType constructor = instanceType.getConstructor (  ) ;ObjectType proto = instanceType.getImplicitPrototype (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P12_Insert_Condition]^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ; }^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^ObjectType proto = proto.getImplicitPrototype (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^ObjectType proto = proto.isFunctionPrototypeType (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^return instanceType.isFunctionPrototypeType (  ) ;ObjectType proto = instanceType.getImplicitPrototype (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( proto <= instanceType )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^if  (  ( proto != instanceType )  && ! ( proto  &  UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  (  ( proto != proto )  ) {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^&&  ( proto.getImplicitPrototype (  )  != null )  )  {^518^^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^&&  ( instanceType.isFunctionPrototypeType (  )  != null )  )  {^518^^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^&&  ( instanceType .isFunctionPrototype (  )   != null )  )  {^518^^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^518^519^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^prototype = factory.createInstanceScope ( instanceType ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return prototypeType;^524^^^^^516^525^return prototype;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( instanceType.getImplicitPrototype (  )  )  {^529^^^^^528^537^if  ( instanceType.isFunctionPrototypeType (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^if  ( proto.isFunctionPrototypeType (  )  )  {^529^^^^^528^537^if  ( instanceType.isFunctionPrototypeType (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^return  ( constructor == null ) ? factory.getConcreteFunction ( constructor )  : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^return  ( factory != null ) ? constructor.getConcreteFunction ( constructor )  : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P6_Replace_Expression]^return  ( constructor ! =  null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P6_Replace_Expression]^return  ( constructor ! =  factory.getConcreteFunction ( constructor )  ;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^return  ( constructor != null ) ? factory.createConcreteInstance ( constructor )  : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^return  ( constructor != null ) ? factory .createConcreteInstance ( instanceType )   : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^FunctionType constructor = proto.getConstructor (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^FunctionType constructor = instanceType.toString (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^FunctionType constructor = proto .toString (  )  ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^ObjectType proto = instanceType.getImplicitPrototype (  ) ;FunctionType constructor = instanceType.getConstructor (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;FunctionType constructor = instanceType.getConstructor (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^? constructor.getConcreteFunction ( factory )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^? factory.createConcreteInstance ( constructor )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^? factory .createConcreteInstance ( proto )   : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^? factory.getConcreteFunction ( superConstructor )  : null;? factory.getConcreteFunction ( constructor )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P11_Insert_Donor_Statement]^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;? factory.getConcreteFunction ( constructor )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P5_Replace_Variable]^return protoType.getConcreteFunction ( factory.getOwnerFunction (  )  ) ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^return factory.createConcreteInstance ( protoType.getOwnerFunction (  )  ) ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^return factory .createConcreteInstance ( instanceType )  ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P14_Delete_Statement]^^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P7_Replace_Invocation]^return factory .createConcreteInstance ( proto )  ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P8_Replace_Mix]^return  ( constructor  =  null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] Set  alternatives  FunctionPrototypeType  protoType  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  FunctionType  constructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  boolean  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  
[P2_Replace_Operator]^if  ( scope != null )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  ( scope == this )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( bodyScope == null )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( prototypeType == null )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( instanceType == null )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^scope = factory.createInstanceScope(instanceType);^541^542^543^^^540^545^if  ( scope == null )  { scope = factory.createInstanceScope ( instanceType ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^541^542^543^^^540^545^if  ( scope == null )  { scope = factory.createInstanceScope ( instanceType ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  (  ( bodyScope )  == null )  {     bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^541^^^^^540^545^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^541^^^^^540^545^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^541^^^^^540^545^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^scope = factory.createInstanceScope ( proto ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^scope = instanceType.createInstanceScope ( factory ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^scope  =  scope ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^prototype = factory.createConcreteInstance ( proto ) ;scope = factory.createInstanceScope ( instanceType ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;scope = factory.createInstanceScope ( instanceType ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;scope = factory.createInstanceScope ( instanceType ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  (  ( scope )  == null )  {     scope = factory.createInstanceScope ( instanceType ) ; }^542^^^^^540^545^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return 0;^544^^^^^540^545^return scope;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^@Override public String toString (  )  { return proto.toString (  ) ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^@Override public String toString (  )  { return instanceType.getConstructor (  ) ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^@Override public String toString (  )  { return instanceType .join ( 4 )  ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^@Override public String toString (  )  { return proto.getConstructor (  ) ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^@Override public String toString (  )  { return proto .join ( 1 )  ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P3_Replace_Literal]^@Override boolean isUnion (  )  { return false; }^567^^^^^562^572^@Override boolean isUnion (  )  { return true; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isUnion [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^@Override ConcreteUnionType toUnion (  )  { return null; }^569^^^^^564^574^@Override ConcreteUnionType toUnion (  )  { return this; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toUnion [RETURN_TYPE] ConcreteType$ConcreteUnionType   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( ret.isSingleton (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( other.getParameterSlots (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( other .isUnion (  )   )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  ( type.isSingleton (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( !other.isSingleton (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( ret.isUnion (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^} else {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( other.getParameterSlots (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( other .toUnion (  )   )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^}  if  ( type.isUnion (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return ret.unionWith ( this ) ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other.intersectWith ( this ) ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^Preconditions.checkArgument ( other.isNone (  )  && other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^Preconditions.checkArgument ( ret.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )   ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.getParameterSlots (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other.getParameterSlots (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^592^593^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ; return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( this.isSingleton (  )  ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( id >= 0 ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^Preconditions.checkArgument ( type.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other .isUnion (  )   || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^Preconditions.checkArgument ( type .isUnion (  )   || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other .isNone (  )   ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return type.unionWith ( this ) ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( otherUnion.containsAll ( alternatives.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( alternatives.retainAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( alternatives.contains ( other )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( alternatives.alternatives.containsAll ( otherUnion )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^} else {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^}  if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {     return this; }else     if  ( containsAll ( alternatives )  )  {         return otherUnion;     }else {         ConcreteType> alts = newHashSet ( alternatives ) ;         alts.addAll ( otherUnion.alternatives ) ;         return new ConcreteUnionType ( alts ) ;     }^584^^^^^571^595^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( alternatives.contains ( other )  )  {     return this; }else {     ConcreteType> alts = newHashSet ( alternatives ) ;     alts.add ( other ) ;     return new ConcreteUnionType ( alts ) ; }^584^^^^^571^595^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P4_Replace_Constructor]^return return  new ConcreteUnionType ( this, other )  ;^589^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return  new ConcreteUnionType ( this, other )  ;^589^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^alts.addAll ( otherUnion.alternatives.alternatives ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^588^589^^^^571^595^alts.addAll ( otherUnion.alternatives ) ; return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P12_Insert_Condition]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { alts.addAll ( otherUnion.alternatives ) ; }^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( otherUnion.alternatives.alternatives.containsAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^} else if  ( null.containsAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^587^588^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^alts.addAll ( otherUnion ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return null;^583^^^^^571^595^return this;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( otherUnion.alternatives .contains ( 4 )   )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^Set<ConcreteType> alts = Sets.newHashSet ( null ) ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^alts.addAll ( null ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^ConcreteUnionType typeUnion = other.toUnion (  ) ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^ConcreteUnionType otherUnion = other.getParameterSlots (  ) ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^ConcreteUnionType otherUnion = other .isUnion (  )  ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^Set<ConcreteType> alts = Sets.newHashSet ( 2 ) ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( alternatives.containsAll ( otherUnion.alternatives.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( alternatives.containsAll ( otherUnion )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Set<ConcreteType> alts = Sets .newHashSet ( this )  ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^ConcreteUnionType retUnion = other.toUnion (  ) ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^ConcreteUnionType retUnion = other .isUnion (  )  ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( type.isUnion (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^ConcreteUnionType typeUnion = other.getParameterSlots (  ) ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^Preconditions.checkArgument ( type.getParameterSlots (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( alternatives.contains ( type )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( alternatives.equals ( other )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {     return this; }else     if  ( containsAll ( alternatives )  )  {         return otherUnion;     }else {         ConcreteType> alts = newHashSet ( alternatives ) ;         alts.addAll ( otherUnion.alternatives ) ;         return new ConcreteUnionType ( alts ) ;     }^573^^^^^571^595^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( containsAll ( alternatives )  )  {     return otherUnion; }else {     ConcreteType> alts = newHashSet ( alternatives ) ;     alts.addAll ( otherUnion.alternatives ) ;     return new ConcreteUnionType ( alts ) ; }^573^^^^^571^595^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P4_Replace_Constructor]^return return  new ConcreteUnionType ( this, other )  ;^578^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return  new ConcreteUnionType ( this, other )  ;^578^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^Set<ConcreteType> alts = Sets .newHashSet ( null )  ;^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^alts.add ( ret ) ;^577^^^^^571^595^alts.add ( other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^577^578^^^^571^595^alts.add ( other ) ; return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^list.add ( type ) ;alts.add ( other ) ;^577^^^^^571^595^alts.add ( other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return null;^574^^^^^571^595^return this;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return new ConcreteUnionType ( 3 ) ;^578^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Set<ConcreteType> alts = Sets .newHashSet ( 1 )  ;^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( other.contains ( alternatives )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^alts.add ( type ) ;^577^^^^^571^595^alts.add ( other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^577^^^^^571^595^alts.add ( other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^if  ( alternatives.equals ( type )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^576^577^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.add ( other ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^}  if  ( other.getParameterSlots (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other .intersectWith ( NONE )  ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^Set<ConcreteType> alts = Sets.newHashSet ( 1 ) ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( otherUnion.alternatives.containsAll ( null )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^alts.addAll ( 0 ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( otherUnion.alternatives.containsAll ( 1 )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other .intersectWith ( type )  ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^Set<ConcreteType> alts = Sets .newHashSet ( 4 )  ;^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^ConcreteUnionType typeUnion = other .isUnion (  )  ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Set<ConcreteType> alts = Sets .newHashSet ( 4 )  ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( otherUnion.containsAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other .intersectWith ( other )  ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  ConcreteUnionType  otherUnion  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( type.isSingleton (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( other.getParameterSlots (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( type.isFunction (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( !other.isSingleton (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( type.isInstance (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^if (alternatives.contains(other)) {    return other;}else {    return com.google.javascript.jscomp.ConcreteType.NONE;};^598^599^600^601^602^597^612^if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^598^599^600^601^602^597^612^if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( ret.isUnion (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P6_Replace_Expression]^} else {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( other.getParameterSlots (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^}  if  ( other.getParameterSlots (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return type.intersectWith ( this ) ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other.unionWith ( this ) ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other .unionWith ( type )  ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^Preconditions.checkArgument ( other.isNone (  )  && other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^Preconditions.checkArgument ( ret.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.getParameterSlots (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other .isUnion (  )   || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other.getParameterSlots (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^609^610^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ; return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( this.isSingleton (  )  ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( id >= 0 ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^Preconditions.checkArgument ( type.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return ret.intersectWith ( this ) ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return getPropertyType ( types ) ;^607^^^^^597^612^return createForTypes ( types ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^605^^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^605^606^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ; types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^types.retainAll ( ret.toUnion (  ) .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^types.retainAll ( other.getParameterSlots (  ) .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^alts.addAll ( otherUnion.alternatives ) ;types.retainAll ( other.toUnion (  ) .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^types.retainAll ( other .isUnion (  )  .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^606^607^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ; return createForTypes ( types ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^607^^^^^597^612^return createForTypes ( types ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return other .unionWith ( alt )  ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^Set<ConcreteType> types = Sets.newHashSet ( null ) ;^605^^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^} else if  ( type.isUnion (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^} else if  ( other .toUnion (  )   )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^} else if  ( type.getParameterSlots (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^types.retainAll ( type.toUnion (  ) .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^types.retainAll ( type .isUnion (  )  .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )   ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other .isNone (  )   ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return type.unionWith ( this ) ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( alternatives.contains ( type )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( 3.contains ( other )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( other.contains ( alternatives )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( alternatives.equals ( other )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P9_Replace_Statement]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P15_Unwrap_Block]^return other;^599^600^601^602^603^597^612^if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P16_Remove_Block]^^599^600^601^602^603^597^612^if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( ! ( other.isSingleton (  )  )  )  {     return other.intersectWith ( this ) ; }else     if  ( equals ( other )  )  {         return this;     }else {         return NONE;     }^599^^^^^597^612^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return new ConcreteUnionType ( this, other ) ; }^599^^^^^597^612^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P13_Insert_Block]^if  ( equals ( other )  )  {     return this; }else {     return NONE; }^599^^^^^597^612^[Delete]^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return ret;^602^^^^^597^612^return NONE;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return type;^602^^^^^597^612^return NONE;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return type;^600^^^^^597^612^return other;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( alternatives.contains ( ret )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return ret;^600^^^^^597^612^return other;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^Set<ConcreteType> types = Sets .newHashSet ( 0 )  ;^605^^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^605^^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^types.retainAll ( other.toUnion (  ) .null ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return type .unionWith ( alt )  ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^if  ( ret.isSingleton (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^if  ( other .isUnion (  )   )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return  ( obj instanceof ConcreteUnionType ) || alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return  ( obj  |  ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return  ( obj instanceof ConcreteUnionType ) && 3.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return  ( obj instanceof ConcreteUnionType ) && this.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return  ( alternatives instanceof ConcreteUnionType ) && obj.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return  ( obj instanceof ConcreteUnionType ) && alternatives.contains (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return  ( obj instanceof ConcreteUnionType ) && alternatives .equals ( obj )  .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^&& alternatives.contains (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^619^^^^^617^620^&& alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^619^^^^^617^620^&& alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  Object  obj  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return alternatives.size (  )  ^ 0x5f6e7d8c;^623^^^^^622^624^return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return 2.hashCode (  )  ^ 0x5f6e7d8c;^623^^^^^622^624^return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^623^^^^^622^624^return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^List<C> list = Lists.newArrayList (  ) ;List<String> names = Lists.newArrayList (  ) ;^627^^^^^626^634^List<String> names = Lists.newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^627^^^^^626^634^List<String> names = Lists.newArrayList (  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^names.add ( ret.toString (  )  ) ;^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^names.add ( type.equals (  )  ) ;^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P11_Insert_Donor_Statement]^return b.toString (  ) ;names.add ( type.toString (  )  ) ;^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^names.add ( other.toString (  )  ) ;^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^631^^^^^626^634^Collections.sort ( names ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return " ( " + Joiner.on ( "," ) .join ( names )  <=  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return " ( " + Joiner.on ( "," ) .join ( names )  >=  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P3_Replace_Literal]^return " ( " + Joiner.on ( "" ) .join ( names )  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return " ( " + Joiner.on ( "," ) .join ( 0 )  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return " ( " + Joiner.on ( "," )  .toString (  )   + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return " ( "  !=  Joiner.on ( "," ) .join ( names )   !=  " ) ";;^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P3_Replace_Literal]^@Override boolean isAll (  )  { return false; }^639^^^^^634^644^@Override boolean isAll (  )  { return true; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] isAll [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^@Override ConcreteType unionWith ( ConcreteType other )  { return null; }^641^^^^^636^646^@Override ConcreteType unionWith ( ConcreteType other )  { return this; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^@Override ConcreteType intersectWith ( ConcreteType ret )  { return other; }^643^^^^^638^648^@Override ConcreteType intersectWith ( ConcreteType other )  { return other; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P1_Replace_Type]^@Override public char tochar (  )  { return "*"; }^645^^^^^640^650^@Override public String toString (  )  { return "*"; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return  ( o instanceof ConcreteUniqueType ) ||  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  Object  o  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return  ( o  ==  ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  Object  o  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^return  ( o instanceof ConcreteUniqueType ) &&  ( id >  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  Object  o  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return  ( o instanceof ConcreteUniqueType ) &&  ( index ==  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  Object  o  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return  ( id instanceof ConcreteUniqueType ) &&  ( o ==  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  Object  o  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^return  ( o instanceof ConcreteUniqueType ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  Object  o  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^return ConcreteUniqueType.class.hashCode (  )  ^ index;^671^^^^^670^672^return ConcreteUniqueType.class.hashCode (  )  ^ id;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return ConcreteUniqueType.class.Object (  )  ^ id;^671^^^^^670^672^return ConcreteUniqueType.class.hashCode (  )  ^ id;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P7_Replace_Invocation]^return ConcreteUniqueType.class .size (  )   ^ id;^671^^^^^670^672^return ConcreteUniqueType.class.hashCode (  )  ^ id;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P14_Delete_Statement]^^671^^^^^670^672^return ConcreteUniqueType.class.hashCode (  )  ^ id;^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P1_Replace_Type]^@Override public char tochar (  )  { return "Unique$" + id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P2_Replace_Operator]^@Override public String toString (   instanceof   )  { return "Unique$" + id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P3_Replace_Literal]^@Override public String toString (  )  { return "Unnique$" + id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P5_Replace_Variable]^@Override public String toString (  )  { return "Unique$" + index; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^@Override public String toString (  )  { return "Unique$" +name; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteType TypeFilter 1 2 3 4 5 6 7 ConcreteNoneType ConcreteFunctionType ConcreteInstanceType ConcreteUnionType ConcreteAll ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^List<C> emptyList;^164^^^^^159^169^final List<C> emptyList;^[CLASS] TypeFilter  [METHOD] getTypeRegistry [RETURN_TYPE] JSTypeRegistry   [VARIABLES] ConcreteInstanceType  instanceType  prototype  prototypeType  ObjectType  instance  instanceType  proto  Set  alternatives  alts  types  boolean  Node  declaration  n  StaticScope  bodyScope  parent  parentScope  scope  Factory  factory  List  $anonymous0  NO_FUNCTIONS  NO_INSTANCES  NO_SLOTS  emptyList  list  names  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  name  paramName  propName  ConcreteType  ALL  NONE  alt  other  ret  type  int  count  i  id  index  
[P8_Replace_Mix]^this.emptyList =  null;^167^^^^^166^168^this.emptyList = emptyList;^[CLASS] TypeFilter  [METHOD] <init> [RETURN_TYPE] List)   List<C> emptyList [VARIABLES] List  emptyList  boolean  
[P7_Replace_Invocation]^return type.isFunction (  )  ? type .isFunction (  )   : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] 1  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^return type .toFunction (  )   ? type.toFunction (  )  : null;^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] 1  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^177^^^^^176^178^return type.isFunction (  )  ? type.toFunction (  )  : null;^[CLASS] 1  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^return type .toInstance (  )   ? type.toInstance (  )  : null;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] 2  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^return type.isInstance (  )  ? type .isInstance (  )   : null;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] 2  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^return type.isInstance (  )  ? type.toInstance (  )  : false;^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] 2  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^186^^^^^185^187^return type.isInstance (  )  ? type.toInstance (  )  : null;^[CLASS] 2  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^if  ( type .toFunction (  )   )  {^195^^^^^194^199^if  ( type.isFunction (  )  )  {^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P15_Unwrap_Block]^return type.toFunction().getInstanceType();^195^196^197^^^194^199^if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P16_Remove_Block]^^195^196^197^^^194^199^if  ( type.isFunction (  )  )  { return type.toFunction (  ) .getInstanceType (  ) ; }^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^return type .isFunction (  )  .getInstanceType (  ) ;^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P13_Insert_Block]^if  ( type.isFunction (  )  )  {     return type.toFunction (  ) .getInstanceType (  ) ; }^196^^^^^194^199^[Delete]^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^196^^^^^194^199^return type.toFunction (  ) .getInstanceType (  ) ;^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^return false;^198^^^^^194^199^return null;^[CLASS] 3  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P2_Replace_Operator]^if  ( type.isInstance (  ) || type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^if  ( type.isInstance (  ) ) {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^if  (  type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^if  ( type.isInstance (  ) && type .isInstance (  )  .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P15_Unwrap_Block]^return type.toInstance();^207^208^209^210^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P16_Remove_Block]^^207^208^209^210^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ; }^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^return type .isInstance (  )  ;^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^209^^^^^206^212^return type.toInstance (  ) ;^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^if  ( type .toInstance (  )  && type.toInstance (  ) .isFunctionPrototype (  )  )  {^207^208^^^^206^212^if  ( type.isInstance (  ) && type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^&& type .isInstance (  )  .isFunctionPrototype (  )  )  {^208^^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  {^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^208^209^^^^206^212^&& type.toInstance (  ) .isFunctionPrototype (  )  )  { return type.toInstance (  ) ;^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^return false;^211^^^^^206^212^return null;^[CLASS] 4  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteInstanceType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P2_Replace_Operator]^return type.isFunction (  ) || type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P2_Replace_Operator]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  == null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  ! =  type.toFunction (  ) .getSuperclassType (  )  ;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^return type .toFunction (  )  && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^220^221^222^^^219^223^return type.isFunction (  ) && type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^&& type.toFunction (  ) .getSuperclassType (  )  ! =  null;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^&& type.toFunction (  ) .getSuperclassType (  )  ! =  type.toFunction (  ) .getSuperclassType (  )  ;^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^&& type .isFunction (  )  .getSuperclassType (  )  != null ? type^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^221^222^^^^219^223^&& type.toFunction (  ) .getSuperclassType (  )  != null ? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P8_Replace_Mix]^? type .isFunction (  )  .getSuperclassType (  )  : null;^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^222^^^^^219^223^? type.toFunction (  ) .getSuperclassType (  )  : null;^[CLASS] 5  [METHOD] filter [RETURN_TYPE] ConcreteType$ConcreteFunctionType   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P2_Replace_Operator]^return type.isFunction (  ) || toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P2_Replace_Operator]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  == null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P5_Replace_Variable]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( 3 )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P5_Replace_Variable]^return index.isFunction (  ) && toFunction (  ) .getParameterSlot ( type )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^return type.getParameterSlots (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^231^232^233^^^230^234^return type.isFunction (  ) && toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^&& toFunction (  ) .getParameterSlot ( index )  ! =  null;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P6_Replace_Expression]^&& toFunction (  ) .getParameterSlot ( index )  ! =  toFunction (  ) .getParameterSlot ( index )  ;^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^232^233^^^^230^234^&& toFunction (  ) .getParameterSlot ( index )  != null ? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P5_Replace_Variable]^? toFunction (  ) .getParameterSlot ( this )  : null;^233^^^^^230^234^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P14_Delete_Statement]^^233^^^^^230^234^? toFunction (  ) .getParameterSlot ( index )  : null;^[CLASS] 6  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] boolean  ConcreteType  type  
[P7_Replace_Invocation]^if  ( type.getPropertySlots (  )  )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P7_Replace_Invocation]^if  ( type .toInstance (  )   )  {^246^^^^^244^250^if  ( type.isInstance (  )  )  {^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P15_Unwrap_Block]^slot = type.toInstance().getPropertySlot(name);^246^247^248^^^244^250^if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P16_Remove_Block]^^246^247^248^^^244^250^if  ( type.isInstance (  )  )  { slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P5_Replace_Variable]^slot = name.toInstance (  ) .getPropertySlot ( type ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P7_Replace_Invocation]^slot = type.getPropertySlots (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P7_Replace_Invocation]^slot = type .isInstance (  )  .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P8_Replace_Mix]^slot =  null.toInstance (  ) .getPropertySlot ( name ) ;^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P13_Insert_Block]^if  ( type.isInstance (  )  )  {     slot = type.toInstance (  ) .getPropertySlot ( name ) ; }^247^^^^^244^250^[Delete]^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P14_Delete_Statement]^^247^^^^^244^250^slot = type.toInstance (  ) .getPropertySlot ( name ) ;^[CLASS] 7  [METHOD] filter [RETURN_TYPE] StaticSlot   ConcreteType type [VARIABLES] StaticSlot  slot  boolean  ConcreteType  type  
[P3_Replace_Literal]^@Override boolean isNone (  )  { return false; }^269^^^^^264^274^@Override boolean isNone (  )  { return true; }^[CLASS] ConcreteNoneType  [METHOD] isNone [RETURN_TYPE] boolean   [VARIABLES] boolean  
[P5_Replace_Variable]^@Override ConcreteType intersectWith ( ConcreteType other )  { return other; }^273^^^^^268^278^@Override ConcreteType intersectWith ( ConcreteType other )  { return NONE; }^[CLASS] ConcreteNoneType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] boolean  ConcreteType  other  
[P1_Replace_Type]^@Override public char tochar (  )  { return " (  ) "; }^275^^^^^270^280^@Override public String toString (  )  { return " (  ) "; }^[CLASS] ConcreteNoneType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^static final char CALL_SLOT_NAME = ":call";^289^^^^^284^294^static final String CALL_SLOT_NAME = ":call";^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^static final String CALL_SLOT_NAME  = null ;^289^^^^^284^294^static final String CALL_SLOT_NAME = ":call";^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^static final char THIS_SLOT_NAME = ":this";^292^^^^^287^297^static final String THIS_SLOT_NAME = ":this";^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P3_Replace_Literal]^static final String THIS_SLOT_NAME = "this";^292^^^^^287^297^static final String THIS_SLOT_NAME = ":this";^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^static final char RETURN_SLOT_NAME = ":return";^295^^^^^290^300^static final String RETURN_SLOT_NAME = ":return";^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^private  StaticScope<ConcreteType> parentScope;^299^^^^^294^304^private final StaticScope<ConcreteType> parentScope;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^this.factory =  null;^307^^^^^304^314^this.factory = factory;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^this.declaration =  null;^308^^^^^304^314^this.declaration = declaration;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^this.parentScope =  null;^309^^^^^304^314^this.parentScope = parentScope;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P2_Replace_Operator]^Preconditions.checkArgument ( declaration.getType (  )  != Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^Preconditions.checkArgument ( declaration.getType (  )  == Token.0 ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^Preconditions.checkArgument ( declaration .getJSType (  )   == Token.1 ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^311^312^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ; Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^311^^^^^304^314^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P2_Replace_Operator]^Preconditions.checkArgument ( declaration.getJSType (  )  == null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^Preconditions.checkArgument ( declaration .getType (  )   != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^312^313^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ; Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^312^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^Preconditions.checkArgument ( declaration.getJSType (  )  .isNone (  )   ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getType (  )  == Token.FUNCTION ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( declaration.getJSType (  )  != null ) ;Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^Preconditions.checkArgument ( declaration .getType (  )  .isFunctionType (  )  ) ;^313^^^^^304^314^Preconditions.checkArgument ( declaration.getJSType (  ) .isFunctionType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] <init> [RETURN_TYPE] StaticScope)   Factory factory Node declaration ConcreteType> parentScope [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P3_Replace_Literal]^@Override boolean isFunction (  )  { return false; }^316^^^^^311^321^@Override boolean isFunction (  )  { return true; }^[CLASS] ConcreteFunctionType  [METHOD] isFunction [RETURN_TYPE] boolean   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^@Override ConcreteFunctionType toFunction (  )  { return null; }^318^^^^^313^323^@Override ConcreteFunctionType toFunction (  )  { return this; }^[CLASS] ConcreteFunctionType  [METHOD] toFunction [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^327^^^^^326^328^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getCallSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^332^^^^^331^333^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getThisSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^return getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^return getJSType (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^337^^^^^336^338^return getScope (  ) .getOwnSlot ( RETURN_SLOT_NAME ) ;^[CLASS] ConcreteFunctionType  [METHOD] getReturnSlot [RETURN_TYPE] StaticSlot   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return getJSType (  ) .getOwnSlot ( getParameterName ( index )  ) ;^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  index  
[P7_Replace_Invocation]^return getScope (  ) .getOwnSlot ( getParameterSlot ( index )  ) ;^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  index  
[P14_Delete_Statement]^^342^^^^^341^343^return getScope (  ) .getOwnSlot ( getParameterName ( index )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getParameterSlot [RETURN_TYPE] StaticSlot   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  index  
[P1_Replace_Type]^short  count = 0;^347^^^^^346^354^int count = 0;^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P3_Replace_Literal]^int count = -6;^347^^^^^346^354^int count = 0;^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P2_Replace_Operator]^if  ( count++ != index )  {^349^^^^^346^354^if  ( count++ == index )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P5_Replace_Variable]^if  ( count++ == count )  {^349^^^^^346^354^if  ( count++ == index )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P15_Unwrap_Block]^return n.getString();^349^350^351^^^346^354^if  ( count++ == index )  { return n.getString (  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P16_Remove_Block]^^349^350^351^^^346^354^if  ( count++ == index )  { return n.getString (  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P5_Replace_Variable]^return declaration.getString (  ) ;^350^^^^^346^354^return n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P7_Replace_Invocation]^return n .getFirstChild (  )  ;^350^^^^^346^354^return n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P14_Delete_Statement]^^350^^^^^346^354^return n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P2_Replace_Operator]^for  ( Node n = getFirstParameter (  ) ; n == null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P5_Replace_Variable]^for  ( Node declaration = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P7_Replace_Invocation]^for  ( Node n = getJSType (  ) ; n != null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P7_Replace_Invocation]^for  ( Node n = getFirstParameter (  ) ; n != null; n = n .getType (  )   )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P8_Replace_Mix]^for  ( Node declaration = getJSType (  ) ; n != null; n = n.getNext (  )  )  {^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P8_Replace_Mix]^for  ( Node n =  getFirstParameter (  ) ; declaration !^348^^^^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P14_Delete_Statement]^^348^349^350^351^^346^354^for  ( Node n = getFirstParameter (  ) ; n != null; n = n.getNext (  )  )  { if  ( count++ == index )  { return n.getString (  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P8_Replace_Mix]^return false;^353^^^^^346^354^return null;^[CLASS] ConcreteFunctionType  [METHOD] getParameterName [RETURN_TYPE] String   int index [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  int  count  index  
[P5_Replace_Variable]^return n.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return declaration.getNext (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return declaration.getFirstChild (  ) .getFirstChild (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return declaration.getString (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return declaration .getString (  )  .getNext (  )^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^return n.getString (  ) .getNext (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^return n.getFirstChild (  ) .getFirstChild (  ) .getFirstChild (  ) ;^358^^^^^357^359^return declaration.getFirstChild (  ) .getNext (  ) .getFirstChild (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getFirstParameter [RETURN_TYPE] Node   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^return  ( FunctionType )  n.getJSType (  ) ;^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^return  ( FunctionType )  declaration.getType (  ) ;^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^return  ( FunctionType )  n.getType (  ) ;^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^363^^^^^362^364^return  ( FunctionType )  declaration.getJSType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getJSType [RETURN_TYPE] FunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P2_Replace_Operator]^if  ( instanceType != null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^if  ( prototypeType == null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^if  ( instanceType == false )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P9_Replace_Statement]^if  ( bodyScope == null )  {^371^^^^^370^378^if  ( instanceType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P15_Unwrap_Block]^if (getJSType().isConstructor()) {    instanceType = factory.createConcreteInstance(getJSType().getInstanceType());};^371^372^373^374^375^370^378^if  ( instanceType == null )  { if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P16_Remove_Block]^^371^372^373^374^375^370^378^if  ( instanceType == null )  { if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^371^^^^^370^378^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^371^^^^^370^378^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^if  ( getJSType (  ) .getInstanceType (  )  )  {^372^^^^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^if  ( getJSType (  )  .getSuperClassConstructor (  )   )  {^372^^^^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^if  ( getScope (  ) .isConstructor (  )  )  {^372^^^^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P15_Unwrap_Block]^instanceType = factory.createConcreteInstance(getJSType().getInstanceType());^372^373^374^375^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P16_Remove_Block]^^372^373^374^375^^370^378^if  ( getJSType (  ) .isConstructor (  )  )  { instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( instanceType )  == null )  {     if  ( getJSType (  ) .isConstructor (  )  )  {         instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;     } }^372^^^^^370^378^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^372^^^^^370^378^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^instanceType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^instanceType = factory.createConcreteInstance ( getScope (  ) .getInstanceType (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^instanceType  =  instanceType ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^373^^^^^370^378^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^373^^^^^370^378^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getScope (  ) .getInstanceType (  )  ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^374^^^^^370^378^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^instanceType ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^instanceType = factory .createFunctionScope ( n , 4 )   ) ;^373^374^^^^370^378^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^return prototypeType;^377^^^^^370^378^return instanceType;^[CLASS] ConcreteFunctionType  [METHOD] getInstanceType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P2_Replace_Operator]^if  ( prototypeType != null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^if  ( prototypeType == false )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P9_Replace_Statement]^if  ( bodyScope == null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P9_Replace_Statement]^if  ( instanceType == null )  {^382^^^^^381^387^if  ( prototypeType == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P15_Unwrap_Block]^prototypeType = factory.createConcreteInstance(getJSType().getPrototype());^382^383^384^385^^381^387^if  ( prototypeType == null )  { prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P16_Remove_Block]^^382^383^384^385^^381^387^if  ( prototypeType == null )  { prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( instanceType )  == null )  {     if  ( getJSType (  ) .isConstructor (  )  )  {         instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;     } }^382^^^^^381^387^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( bodyScope )  == null )  {     bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^382^^^^^381^387^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^382^^^^^381^387^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^prototypeType = factory.createConcreteInstance ( getScope (  ) .getPrototype (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^prototypeType  = null ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^383^384^^^^381^387^prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^383^^^^^381^387^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  ( getJSType (  ) .isConstructor (  )  )  {     instanceType = factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ; }^383^^^^^381^387^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^factory.createConcreteInstance ( getScope (  ) .getPrototype (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P11_Insert_Donor_Statement]^factory.createConcreteInstance ( getJSType (  ) .getInstanceType (  )  ) ;factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^384^^^^^381^387^factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^return instanceType;^386^^^^^381^387^return prototypeType;^[CLASS] ConcreteFunctionType  [METHOD] getPrototypeType [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^FunctionType superConstructor = getJSType (  ) .isConstructor (  ) ;^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P7_Replace_Invocation]^FunctionType superConstructor = getScope (  ) .getSuperClassConstructor (  ) ;^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P14_Delete_Statement]^^391^^^^^390^394^FunctionType superConstructor = getJSType (  ) .getSuperClassConstructor (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P2_Replace_Operator]^return  ( superConstructor == null ) ? factory.getConcreteFunction ( superConstructor )  : null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P5_Replace_Variable]^return  ( factory != null ) ? superConstructor.getConcreteFunction ( superConstructor )  : null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P6_Replace_Expression]^return  ( superConstructor ! =  null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P6_Replace_Expression]^return  ( superConstructor ! =  factory.getConcreteFunction ( superConstructor )  ;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P7_Replace_Invocation]^return  ( superConstructor != null ) ? factory.createConcreteInstance ( superConstructor )  : null;^392^393^^^^390^394^return  ( superConstructor != null ) ? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P5_Replace_Variable]^? superConstructor.getConcreteFunction ( factory )  : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P7_Replace_Invocation]^? factory.createConcreteInstance ( superConstructor )  : null;^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P14_Delete_Statement]^^393^^^^^390^394^? factory.getConcreteFunction ( superConstructor )  : null;^[CLASS] ConcreteFunctionType  [METHOD] getSuperclassType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  FunctionType  superConstructor  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  
[P2_Replace_Operator]^if  ( bodyScope != null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^if  ( bodyScope == false )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P9_Replace_Statement]^if  ( prototypeType == null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P9_Replace_Statement]^if  ( instanceType == null )  {^398^^^^^397^402^if  ( bodyScope == null )  {^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P15_Unwrap_Block]^bodyScope = factory.createFunctionScope(declaration, parentScope);^398^399^400^^^397^402^if  ( bodyScope == null )  { bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P16_Remove_Block]^^398^399^400^^^397^402^if  ( bodyScope == null )  { bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( prototypeType )  == null )  {     prototypeType = factory.createConcreteInstance ( getJSType (  ) .getPrototype (  )  ) ; }^398^^^^^397^402^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope ( n, parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope (  parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope ( declaration ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^bodyScope = parentScope.createFunctionScope ( declaration, factory ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^bodyScope = declaration.createFunctionScope ( factory, parentScope ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P7_Replace_Invocation]^bodyScope = factory .createConcreteInstance ( 0 )  ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P8_Replace_Mix]^bodyScope  =  bodyScope ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P13_Insert_Block]^if  (  ( bodyScope )  == null )  {     bodyScope = factory.createFunctionScope ( declaration, parentScope ) ; }^399^^^^^397^402^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P5_Replace_Variable]^bodyScope = factory.createFunctionScope ( parentScope, declaration ) ;^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P14_Delete_Statement]^^399^^^^^397^402^bodyScope = factory.createFunctionScope ( declaration, parentScope ) ;^[CLASS] ConcreteFunctionType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  boolean  Node  declaration  n  StaticScope  bodyScope  parentScope  
[P3_Replace_Literal]^StringBuilder b = new StringBuilder (  ) ;^411^^^^^410^439^StringBuilder b = new StringBuilder ( 32 ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^StringBuilder b = new StringBuilder ( i ) ;^411^^^^^410^439^StringBuilder b = new StringBuilder ( 32 ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b .append ( CALL_SLOT_NAME )  ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( var.getType (  )  ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( "function  ( " ) ;^412^^^^^410^439^b.append ( "function  ( " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isFunctionType (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^boolean hasKnownTypeOfThis = !getThisSlot (  )  .getJSType (  )  .isNone (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^boolean hasKnownTypeOfThis = !getReturnSlot (  ) .getType (  ) .isNone (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^413^^^^^410^439^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P9_Replace_Statement]^if  ( hasKnownTypeOfThis && n != null )  {^414^^^^^410^439^if  ( hasKnownTypeOfThis )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P15_Unwrap_Block]^b.append("this:"); b.append(getThisSlot().getType().toString());^414^415^416^417^^410^439^if  ( hasKnownTypeOfThis )  { b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P16_Remove_Block]^^414^415^416^417^^410^439^if  ( hasKnownTypeOfThis )  { b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P13_Insert_Block]^if  (  ( getReturnSlot (  ) .getType (  )  )  != null )  {     b.append ( ": " ) ;     b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^414^^^^^410^439^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^b.append ( "thishis:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^415^416^^^^410^439^b.append ( "this:" ) ; b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( "this:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getThisSlot (  ) .getType (  ) .isNone (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getThisSlot (  ) .getType (  )  .getFirstChild (  )   ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^boolean hasKnownTypeOfThis = !getThisSlot (  ) .getType (  ) .isNone (  ) ;b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P12_Insert_Condition]^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^b.append ( "his:" ) ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^b .append ( RETURN_SLOT_NAME )  ;^415^^^^^410^439^b.append ( "this:" ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getThisSlot (  )  .getJSType (  )  .toString (  )  ) ;^416^^^^^410^439^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^Node n = getJSType (  ) ;^419^^^^^410^439^Node n = getFirstParameter (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^419^^^^^410^439^Node n = getFirstParameter (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P2_Replace_Operator]^if  ( hasKnownTypeOfThis || n != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P2_Replace_Operator]^if  ( hasKnownTypeOfThis && n == null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^if  ( hasKnownTypeOfThis && declaration != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^if  ( n && hasKnownTypeOfThis != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P6_Replace_Expression]^if  ( hasKnownTypeOfThis ) {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P6_Replace_Expression]^if  (  n != null )  {^420^^^^^410^439^if  ( hasKnownTypeOfThis && n != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P15_Unwrap_Block]^b.append(", ");^420^421^422^^^410^439^if  ( hasKnownTypeOfThis && n != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P16_Remove_Block]^^420^421^422^^^410^439^if  ( hasKnownTypeOfThis && n != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P13_Insert_Block]^if  (  ( n.getNext (  )  )  != null )  {     b.append ( ", " ) ; }^420^^^^^410^439^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^b.append ( " " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( ", " ) ;^421^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P2_Replace_Operator]^if  ( n.getNext (  )  == null )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^if  ( declaration.getNext (  )  != null )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^if  ( n .getType (  )   != null )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^if  ( n .getType (  )   != this )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P15_Unwrap_Block]^b.append(", ");^428^429^430^^^410^439^if  ( n.getNext (  )  != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P16_Remove_Block]^^428^429^430^^^410^439^if  ( n.getNext (  )  != null )  { b.append ( ", " ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P13_Insert_Block]^if  ( hasKnownTypeOfThis &&  ( n != null )  )  {     b.append ( ", " ) ; }^428^^^^^410^439^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^b.append ( ", ," ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( ", " ) ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P1_Replace_Type]^for  (  short  i = 0; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P2_Replace_Operator]^for  ( int i = 0; n == null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^for  ( int i = -8; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; n != null; ++i = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^for  ( int i = 0; n != null; ++ n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^for  ( int i = 0; n != null; ++i, n = n .getType (  )   )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^for  ( int i = 0; declaration != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^if  ( n.getNext (  )  != true )  {^428^^^^^410^439^if  ( n.getNext (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P1_Replace_Type]^char paramName = n.getchar (  ) ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^String paramName = declaration.getString (  ) ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^String paramName = n .getFirstChild (  )  ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( THIS_SLOT_NAME ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^StaticSlot<ConcreteType> var = getJSType (  ) .getOwnSlot ( paramName ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^424^425^^^^410^439^String paramName = n.getString (  ) ; StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String paramName = n.getString (  ) ;^424^^^^^410^439^String paramName = n.getString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^425^426^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ; b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^return getScope (  ) .getOwnSlot ( CALL_SLOT_NAME ) ;StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^425^^^^^410^439^StaticSlot<ConcreteType> var = getScope (  ) .getOwnSlot ( paramName ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^b .append ( paramName )  ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( var.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( var.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P5_Replace_Variable]^b.append ( null.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( var .getJSType (  )   ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^b.append ( this.getType (  )  ) ;^426^^^^^410^439^b.append ( var.getType (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^426^427^^^^410^439^b.append ( var.getType (  )  ) ; getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^getParameterSlot ( i )  .getJSType (  )  ;^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^getParameterName ( i ) .getType (  ) ;^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^427^^^^^410^439^getParameterSlot ( i ) .getType (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^for  ( int i =  0; declaration !^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P1_Replace_Type]^for  (  long  i = 0; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^for  ( int i = i; n != null; ++i, n = n.getNext (  )  )  {^423^^^^^410^439^for  ( int i = 0; n != null; ++i, n = n.getNext (  )  )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^b .append ( RETURN_SLOT_NAME )  ;^429^^^^^410^439^b.append ( ", " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b .append ( RETURN_SLOT_NAME )  " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^b .append ( paramName )  " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( var.getType (  )  ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ": " ) ;b.append ( " ) " ) ;^433^^^^^410^439^b.append ( " ) " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P2_Replace_Operator]^if  ( getReturnSlot (  ) .getType (  )  == null )  {^434^^^^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^if  ( getThisSlot (  ) .getType (  )  != null )  {^434^^^^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^if  ( getReturnSlot (  ) .getType (  )  != true )  {^434^^^^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  {^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P15_Unwrap_Block]^b.append(": "); b.append(getReturnSlot().getType().toString());^434^435^436^437^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P16_Remove_Block]^^434^435^436^437^^410^439^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P13_Insert_Block]^if  ( hasKnownTypeOfThis )  {     b.append ( "this:" ) ;     b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ; }^434^^^^^410^439^[Delete]^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^435^436^^^^410^439^b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( ", " ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "this:" ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( " ) " ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P11_Insert_Donor_Statement]^b.append ( "function  ( " ) ;b.append ( ": " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P12_Insert_Condition]^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^435^436^^^^410^439^b.append ( ": " ) ; b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getReturnSlot (  ) .getType (  ) .isNone (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getThisSlot (  ) .getType (  ) .toString (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^b .StringBuilder ( i )  .toString (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P12_Insert_Condition]^if  ( getReturnSlot (  ) .getType (  )  != null )  { b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ; }^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getReturnSlot (  )  .getJSType (  )  .toString (  )  ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P3_Replace_Literal]^b.append ( " " ) ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b .append ( RETURN_SLOT_NAME )  ;^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^435^^^^^410^439^b.append ( ": " ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^b.append ( getReturnSlot (  ) .getType (  )  .getFirstChild (  )   ) ;^436^^^^^410^439^b.append ( getReturnSlot (  ) .getType (  ) .toString (  )  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^return b.StringBuilder (  ) ;^438^^^^^410^439^return b.toString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P7_Replace_Invocation]^return b .getFirstChild (  )  ;^438^^^^^410^439^return b.toString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P14_Delete_Statement]^^438^^^^^410^439^return b.toString (  ) ;^[CLASS] ConcreteFunctionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^public  ObjectType instanceType;^456^^^^^451^461^public final ObjectType instanceType;^[CLASS] ConcreteInstanceType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ConcreteInstanceType  instanceType  prototypeType  StaticSlot  var  boolean  hasKnownTypeOfThis  StringBuilder  b  Node  declaration  n  StaticScope  bodyScope  parentScope  Factory  factory  String  CALL_SLOT_NAME  RETURN_SLOT_NAME  THIS_SLOT_NAME  paramName  int  i  
[P8_Replace_Mix]^this.factory =  null;^468^^^^^467^472^this.factory = factory;^[CLASS] ConcreteInstanceType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^this.instanceType =  null;^469^^^^^467^472^this.instanceType = instanceType;^[CLASS] ConcreteInstanceType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^Preconditions.checkArgument ( ! ( instanceType  <  UnknownType )  ) ;^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^471^^^^^467^472^Preconditions.checkArgument ( ! ( instanceType instanceof UnknownType )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] <init> [RETURN_TYPE] ObjectType)   Factory factory ObjectType instanceType [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P3_Replace_Literal]^@Override boolean isInstance (  )  { return false; }^474^^^^^469^479^@Override boolean isInstance (  )  { return true; }^[CLASS] ConcreteInstanceType  [METHOD] isInstance [RETURN_TYPE] boolean   [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^@Override ConcreteInstanceType toInstance (  )  { return null; }^476^^^^^471^481^@Override ConcreteInstanceType toInstance (  )  { return this; }^[CLASS] ConcreteInstanceType  [METHOD] toInstance [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return instanceType.getImplicitPrototype (  ) ;^480^^^^^479^481^return instanceType.isFunctionPrototypeType (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] isFunctionPrototype [RETURN_TYPE] boolean   [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P12_Insert_Condition]^if  ( instanceType.isFunctionPrototypeType (  )  )  { return instanceType.isFunctionPrototypeType (  ) ; }^480^^^^^479^481^return instanceType.isFunctionPrototypeType (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] isFunctionPrototype [RETURN_TYPE] boolean   [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^480^^^^^479^481^return instanceType.isFunctionPrototypeType (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] isFunctionPrototype [RETURN_TYPE] boolean   [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return getScope (  ) .getOwnSlot ( propName ) ;^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return getConstructorType (  ) .getSlot ( propName ) ;^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P12_Insert_Condition]^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  { return getScope (  ) .getSlot ( propName ) ; }^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P14_Delete_Statement]^^485^^^^^484^486^return getScope (  ) .getSlot ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getPropertySlot [RETURN_TYPE] StaticSlot   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  ( getScope (  ) .getOwnSlot ( propName )  == null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( instanceType.getConstructor() != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( getImplicitPrototype() != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^if  ( getScope (  )  .getSlot ( propName )   != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^if  ( getConstructorType (  ) .getOwnSlot ( propName )  != null )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^if  ( getScope (  ) .getOwnSlot ( propName )  != false )  {^493^^^^^492^513^if  ( getScope (  ) .getOwnSlot ( propName )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P2_Replace_Operator]^} else if  ( getImplicitPrototype (  )  == null )  {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P6_Replace_Expression]^} else {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^} else if  ( getConstructorType (  )  != null )  {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^}  if  ( getImplicitPrototype (  )  != false )  {^508^^^^^492^513^} else if  ( getImplicitPrototype (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P15_Unwrap_Block]^return getImplicitPrototype().getInstanceTypeWithProperty(propName);^508^509^510^511^512^492^513^} else if  ( getImplicitPrototype (  )  != null )  { return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ; } else { return null; }^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P16_Remove_Block]^^508^509^510^511^512^492^513^} else if  ( getImplicitPrototype (  )  != null )  { return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ; } else { return null; }^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^return true;^511^^^^^492^513^return null;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return getImplicitPrototype (  ) .getPropertySlot ( propName ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return getImplicitPrototype (  )  .getConstructorType (  )  ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return getConstructorType (  ) .getInstanceTypeWithProperty ( propName ) ;^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P14_Delete_Statement]^^509^^^^^492^513^return getImplicitPrototype (  ) .getInstanceTypeWithProperty ( propName ) ;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^return false;^511^^^^^492^513^return null;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  ( instanceType.getConstructor (  )  == null )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^if  ( instanceType.toString (  )  != null )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^if  ( instanceType.getConstructor (  )  != true )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P15_Unwrap_Block]^return getConstructorType().getPrototypeType();^504^505^506^^^492^513^if  ( instanceType.getConstructor (  )  != null )  { return getConstructorType (  ) .getPrototypeType (  ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P16_Remove_Block]^^504^505^506^^^492^513^if  ( instanceType.getConstructor (  )  != null )  { return getConstructorType (  ) .getPrototypeType (  ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P7_Replace_Invocation]^return getScope (  ) .getPrototypeType (  ) ;^505^^^^^492^513^return getConstructorType (  ) .getPrototypeType (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P14_Delete_Statement]^^505^^^^^492^513^return getConstructorType (  ) .getPrototypeType (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^return null;^507^^^^^492^513^return this;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^if  ( instanceType.getConstructor (  )  != false )  {^504^^^^^492^513^if  ( instanceType.getConstructor (  )  != null )  {^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P8_Replace_Mix]^return this;^511^^^^^492^513^return null;^[CLASS] ConcreteInstanceType  [METHOD] getInstanceTypeWithProperty [RETURN_TYPE] ConcreteType$ConcreteInstanceType   String propName [VARIABLES] ObjectType  instanceType  ConcreteInstanceType  prototype  Factory  factory  String  propName  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( prototype == null ) ||  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( prototype != null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  == null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^if  (  ( instanceTypetype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^if  (  ( instanceTypetype == null ) &&  ( proto.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^if  (  ( instanceType == null ) &&  ( prototype.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  (  ( prototype == null ) ) {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  (   ( instanceType.getImplicitPrototype (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( prototype == null )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( instanceType.getImplicitPrototype (  )  != null )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( proto != instanceType && !(proto instanceof UnknownType) )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( proto != instanceType )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( proto instanceof UnknownType )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^if  (  ( prototype == null ) &&  ( instanceType.isFunctionPrototypeType (  )  != null )  )  {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^if  (  ( prototype == this ) ) {^517^518^^^^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.ObjectType proto = instanceType.getImplicitPrototype(); if ((proto != (instanceType)) && (!(proto instanceof com.google.javascript.rhino.jstype.UnknownType))) {    prototype = factory.createConcreteInstance(proto);};^517^518^519^520^521^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ; if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P16_Remove_Block]^^517^518^519^520^521^516^525^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ; if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( proto != instanceType )  || ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( proto <= instanceType )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( proto != instanceType )  && ! ( proto  >>  UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^if  (  ( instanceType != proto )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  (  ( proto != instanceType )  ) {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  (  ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( proto != instanceType )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P6_Replace_Expression]^if  ( proto instanceof UnknownType )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^if  (  ( proto = instanceType )  &&  ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P15_Unwrap_Block]^prototype = factory.createConcreteInstance(proto);^520^521^522^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P16_Remove_Block]^^520^521^522^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  { prototype = factory.createConcreteInstance ( proto ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^prototype = factory.createConcreteInstance ( instanceType ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^prototype = proto.createConcreteInstance ( factory ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^prototype = factory.createInstanceScope ( proto ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P11_Insert_Donor_Statement]^scope = factory.createInstanceScope ( instanceType ) ;prototype = factory.createConcreteInstance ( proto ) ;^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^521^^^^^516^525^prototype = factory.createConcreteInstance ( proto ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^ObjectType proto = instanceType.isFunctionPrototypeType (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P11_Insert_Donor_Statement]^FunctionType constructor = instanceType.getConstructor (  ) ;ObjectType proto = instanceType.getImplicitPrototype (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P12_Insert_Condition]^if  (  ( prototype == null ) &&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ; }^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^ObjectType proto = proto.getImplicitPrototype (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^ObjectType proto = instanceType .getConstructorType (  )  ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P11_Insert_Donor_Statement]^return instanceType.isFunctionPrototypeType (  ) ;ObjectType proto = instanceType.getImplicitPrototype (  ) ;^519^^^^^516^525^ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( proto < instanceType )  && ! ( proto instanceof UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P2_Replace_Operator]^if  (  ( proto != instanceType )  && ! ( proto  ^  UnknownType )  )  {^520^^^^^516^525^if  (  ( proto != instanceType )  && ! ( proto instanceof UnknownType )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^&&  ( proto.getImplicitPrototype (  )  != null )  )  {^518^^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^&&  ( instanceType.isFunctionPrototypeType (  )  != null )  )  {^518^^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^&&  ( proto.isFunctionPrototypeType (  )  != null )  )  {^518^^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^518^519^^^^516^525^&&  ( instanceType.getImplicitPrototype (  )  != null )  )  { ObjectType proto = instanceType.getImplicitPrototype (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getImplicitPrototype [RETURN_TYPE] ConcreteType$ConcreteInstanceType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^if  ( proto.isFunctionPrototypeType (  )  )  {^529^^^^^528^537^if  ( instanceType.isFunctionPrototypeType (  )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^if  ( instanceType.getImplicitPrototype (  )  )  {^529^^^^^528^537^if  ( instanceType.isFunctionPrototypeType (  )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P2_Replace_Operator]^return  ( constructor == null ) ? factory.getConcreteFunction ( constructor )  : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P5_Replace_Variable]^return  ( factory != null ) ? constructor.getConcreteFunction ( constructor )  : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P6_Replace_Expression]^return  ( constructor ! =  null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P6_Replace_Expression]^return  ( constructor ! =  factory.getConcreteFunction ( constructor )  ;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^return  ( constructor != null ) ? factory.createConcreteInstance ( constructor )  : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^return  ( constructor != null ) ? factory .createConcreteInstance ( proto )   : null;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P8_Replace_Mix]^return  ( constructor ! =  factory.createConcreteInstance ( constructor )  ;^534^535^^^^528^537^return  ( constructor != null ) ? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P5_Replace_Variable]^FunctionType constructor = proto.getConstructor (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^FunctionType constructor = instanceType.toString (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P11_Insert_Donor_Statement]^ObjectType proto = instanceType.getImplicitPrototype (  ) ;FunctionType constructor = instanceType.getConstructor (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P14_Delete_Statement]^^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P5_Replace_Variable]^? constructor.getConcreteFunction ( factory )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^? factory.createConcreteInstance ( constructor )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P8_Replace_Mix]^? factory .createConcreteInstance ( proto )   : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P14_Delete_Statement]^^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P11_Insert_Donor_Statement]^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;? factory.getConcreteFunction ( constructor )  : null;^535^^^^^528^537^? factory.getConcreteFunction ( constructor )  : null;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P5_Replace_Variable]^return protoType.getConcreteFunction ( factory.getOwnerFunction (  )  ) ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^return factory.createConcreteInstance ( protoType.getOwnerFunction (  )  ) ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^return factory .createConcreteInstance ( instanceType )  ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P14_Delete_Statement]^^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P8_Replace_Mix]^if  ( proto.getImplicitPrototype (  )  )  {^529^^^^^528^537^if  ( instanceType.isFunctionPrototypeType (  )  )  {^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P7_Replace_Invocation]^return factory .createConcreteInstance ( proto )  ;^531^^^^^528^537^return factory.getConcreteFunction ( protoType.getOwnerFunction (  )  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P8_Replace_Mix]^FunctionType constructor = proto.toString (  ) ;^533^^^^^528^537^FunctionType constructor = instanceType.getConstructor (  ) ;^[CLASS] ConcreteInstanceType  [METHOD] getConstructorType [RETURN_TYPE] ConcreteType$ConcreteFunctionType   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  boolean  FunctionPrototypeType  protoType  StaticScope  scope  FunctionType  constructor  Factory  factory  
[P2_Replace_Operator]^if  ( scope != null )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^if  ( null == null )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^if  ( scope == true )  {^541^^^^^540^545^if  ( scope == null )  {^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P15_Unwrap_Block]^scope = factory.createInstanceScope(instanceType);^541^542^543^^^540^545^if  ( scope == null )  { scope = factory.createInstanceScope ( instanceType ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P16_Remove_Block]^^541^542^543^^^540^545^if  ( scope == null )  { scope = factory.createInstanceScope ( instanceType ) ; }^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^scope = factory.createInstanceScope ( proto ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^scope = instanceType.createInstanceScope ( factory ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^scope = factory .createConcreteInstance ( instanceType )  ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^scope  = null ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P11_Insert_Donor_Statement]^prototype = factory.createConcreteInstance ( proto ) ;scope = factory.createInstanceScope ( instanceType ) ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P13_Insert_Block]^if  (  ( scope )  == null )  {     scope = factory.createInstanceScope ( instanceType ) ; }^542^^^^^540^545^[Delete]^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^scope  =  scope ;^542^^^^^540^545^scope = factory.createInstanceScope ( instanceType ) ;^[CLASS] ConcreteInstanceType  [METHOD] getScope [RETURN_TYPE] StaticScope   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P5_Replace_Variable]^@Override public String toString (  )  { return proto.toString (  ) ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteInstanceType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P7_Replace_Invocation]^@Override public String toString (  )  { return instanceType.getConstructor (  ) ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteInstanceType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^@Override public String toString (  )  { return proto .getConstructor (  )  ; }^547^^^^^542^552^@Override public String toString (  )  { return instanceType.toString (  ) ; }^[CLASS] ConcreteInstanceType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P8_Replace_Mix]^private  Set<ConcreteType> alternatives;^556^^^^^551^561^private final Set<ConcreteType> alternatives;^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ObjectType  instanceType  proto  ConcreteInstanceType  prototype  Factory  factory  boolean  StaticScope  scope  
[P14_Delete_Statement]^^559^^^^^558^560^this ( Sets.newHashSet ( alternatives )  ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] ConcreteType[])    alternatives [VARIABLES] ConcreteType[]  alternatives  Set  alternatives  boolean  
[P11_Insert_Donor_Statement]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;this ( Sets.newHashSet ( alternatives )  ) ;^559^^^^^558^560^this ( Sets.newHashSet ( alternatives )  ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] ConcreteType[])    alternatives [VARIABLES] ConcreteType[]  alternatives  Set  alternatives  boolean  
[P11_Insert_Donor_Statement]^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;this ( Sets.newHashSet ( alternatives )  ) ;^559^^^^^558^560^this ( Sets.newHashSet ( alternatives )  ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] ConcreteType[])    alternatives [VARIABLES] ConcreteType[]  alternatives  Set  alternatives  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( alternatives.size (  )  >= 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( alternatives.size (  )  > 10 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( alternatives.size() - 0  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( alternatives.add (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P14_Delete_Statement]^^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( alternatives.size() + 6  > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P8_Replace_Mix]^Preconditions.checkArgument ( alternatives .hashCode (  )   > 1 ) ;^563^^^^^562^565^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P8_Replace_Mix]^this.alternatives =  null;^564^^^^^562^565^this.alternatives = alternatives;^[CLASS] ConcreteUnionType  [METHOD] <init> [RETURN_TYPE] Set)   ConcreteType> alternatives [VARIABLES] Set  alternatives  boolean  
[P3_Replace_Literal]^@Override boolean isUnion (  )  { return false; }^567^^^^^562^572^@Override boolean isUnion (  )  { return true; }^[CLASS] ConcreteUnionType  [METHOD] isUnion [RETURN_TYPE] boolean   [VARIABLES] Set  alternatives  boolean  
[P8_Replace_Mix]^@Override ConcreteUnionType toUnion (  )  { return null; }^569^^^^^564^574^@Override ConcreteUnionType toUnion (  )  { return this; }^[CLASS] ConcreteUnionType  [METHOD] toUnion [RETURN_TYPE] ConcreteType$ConcreteUnionType   [VARIABLES] Set  alternatives  boolean  
[P7_Replace_Invocation]^if  ( other.createForTypes (  )  )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P6_Replace_Expression]^} else {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^} else if  ( other.createForTypes (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^} else if  ( other .toUnion (  )   )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^}  if  ( other.createForTypes (  )  )  {^580^^^^^571^595^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^return other.intersectWith ( this ) ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^return other .intersectWith ( other )  ;^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P2_Replace_Operator]^Preconditions.checkArgument ( other.isNone (  )  && other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.createForTypes (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other.createForTypes (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^592^593^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ; return other.unionWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other .isNone (  )   ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^593^^^^^571^595^return other.unionWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( otherUnion.containsAll ( alternatives.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^if  ( alternatives.retainAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^if  ( alternatives .contains ( 3 )   )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P9_Replace_Statement]^if  ( alternatives.contains ( other )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( 0.containsAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( alternatives.alternatives.containsAll ( otherUnion )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P6_Replace_Expression]^} else {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^} else if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P13_Insert_Block]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {     return this; }else     if  ( containsAll ( alternatives )  )  {         return otherUnion;     }else {         ConcreteType> alts = newHashSet ( alternatives ) ;         alts.addAll ( otherUnion.alternatives ) ;         return new ConcreteUnionType ( alts ) ;     }^584^^^^^571^595^[Delete]^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P13_Insert_Block]^if  ( alternatives.contains ( other )  )  {     return this; }else {     ConcreteType> alts = newHashSet ( alternatives ) ;     alts.add ( other ) ;     return new ConcreteUnionType ( alts ) ; }^584^^^^^571^595^[Delete]^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^Set<ConcreteType> alts = Sets .newHashSet ( null )  ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P11_Insert_Donor_Statement]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^alts.addAll ( otherUnion.alternatives.alternatives ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^588^589^^^^571^595^alts.addAll ( otherUnion.alternatives ) ; return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( otherUnion.alternatives.alternatives.containsAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^alts.addAll ( 2 ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P12_Insert_Condition]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  { alts.addAll ( otherUnion.alternatives ) ; }^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^return null;^583^^^^^571^595^return this;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^return new ConcreteUnionType ( null ) ;^589^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^ConcreteUnionType otherUnion = other.createForTypes (  ) ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^ConcreteUnionType otherUnion = other .isUnion (  )  ;^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^581^^^^^571^595^ConcreteUnionType otherUnion = other.toUnion (  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( alternatives.containsAll ( otherUnion.alternatives.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( alternatives.containsAll ( otherUnion )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^587^588^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^}  if  ( otherUnion.alternatives.retainAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^return new ConcreteUnionType ( 2 ) ;^589^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( otherUnion.containsAll ( alternatives )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^alts.addAll ( otherUnion ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( this.containsAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^alts.addAll ( 4 ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other .isUnion (  )   || other.isAll (  )  ) ;^592^^^^^571^595^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( other.contains ( alternatives )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^if  ( alternatives.equals ( other )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P9_Replace_Statement]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P13_Insert_Block]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {     return this; }else     if  ( containsAll ( alternatives )  )  {         return otherUnion;     }else {         ConcreteType> alts = newHashSet ( alternatives ) ;         alts.addAll ( otherUnion.alternatives ) ;         return new ConcreteUnionType ( alts ) ;     }^573^^^^^571^595^[Delete]^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P13_Insert_Block]^if  ( containsAll ( alternatives )  )  {     return otherUnion; }else {     ConcreteType> alts = newHashSet ( alternatives ) ;     alts.addAll ( otherUnion.alternatives ) ;     return new ConcreteUnionType ( alts ) ; }^573^^^^^571^595^[Delete]^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^return new ConcreteUnionType ( 0 ) ;^578^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P11_Insert_Donor_Statement]^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^576^577^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ; alts.add ( other ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^577^^^^^571^595^alts.add ( other ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^return null;^574^^^^^571^595^return this;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^576^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^alts .addAll ( null )  ;^577^^^^^571^595^alts.add ( other ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^if  ( 1.contains ( other )  )  {^573^^^^^571^595^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P14_Delete_Statement]^^577^578^^^^571^595^alts.add ( other ) ; return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^alts.addAll ( 3 ) ;^588^^^^^571^595^alts.addAll ( otherUnion.alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( otherUnion.alternatives.containsAll ( null )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^if  ( null.containsAll ( otherUnion.alternatives )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P5_Replace_Variable]^} else if  ( otherUnion.alternatives.containsAll ( 0 )  )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^} else if  ( otherUnion.alternatives .contains ( 0 )   )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^Set<ConcreteType> alts = Sets.newHashSet ( 1 ) ;^587^^^^^571^595^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^} else if  ( otherUnion.alternatives .contains ( this )   )  {^584^^^^^571^595^} else if  ( otherUnion.alternatives.containsAll ( alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^return new ConcreteUnionType ( 3 ) ;^578^^^^^571^595^return new ConcreteUnionType ( alts ) ;^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^if  ( other .isUnion (  )   )  {^572^^^^^571^595^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P8_Replace_Mix]^if  ( alternatives.retainAll ( 3 )  )  {^582^^^^^571^595^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^[CLASS] ConcreteUnionType  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] Set  alternatives  alts  boolean  ConcreteType  other  ConcreteUnionType  otherUnion  
[P7_Replace_Invocation]^if  ( other.createForTypes (  )  )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P8_Replace_Mix]^if  ( other .isUnion (  )   )  {^598^^^^^597^612^if  ( other.isSingleton (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P15_Unwrap_Block]^if (alternatives.contains(other)) {    return other;}else {    return com.google.javascript.jscomp.ConcreteType.NONE;};^598^599^600^601^602^597^612^if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P16_Remove_Block]^^598^599^600^601^602^597^612^if  ( other.isSingleton (  )  )  { if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P6_Replace_Expression]^} else {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^} else if  ( other.createForTypes (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^} else if  ( other .toUnion (  )   )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P8_Replace_Mix]^}  if  ( other.createForTypes (  )  )  {^604^^^^^597^612^} else if  ( other.isUnion (  )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^return other.unionWith ( this ) ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( other.isNone (  )  && other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.createForTypes (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other .isUnion (  )   || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other.createForTypes (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^Preconditions.checkArgument ( other.isNone (  )  || other .isNone (  )   ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^609^610^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ; return other.intersectWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( alternatives.size (  )  > 1 ) ;Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P5_Replace_Variable]^return createForTypes ( 0 ) ;^607^^^^^597^612^return createForTypes ( types ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^return unionWith ( types ) ;^607^^^^^597^612^return createForTypes ( types ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P11_Insert_Donor_Statement]^Set<ConcreteType> alts = Sets.newHashSet ( alternatives ) ;Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^605^^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^605^^^^^597^612^Set<ConcreteType> types = Sets.newHashSet ( alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^types.retainAll ( other.createForTypes (  ) .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P11_Insert_Donor_Statement]^alts.addAll ( otherUnion.alternatives ) ;types.retainAll ( other.toUnion (  ) .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^606^607^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ; return createForTypes ( types ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^607^^^^^597^612^return createForTypes ( types ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^types.retainAll ( other .isUnion (  )  .alternatives ) ;^606^^^^^597^612^types.retainAll ( other.toUnion (  ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^609^^^^^597^612^Preconditions.checkArgument ( other.isNone (  )  || other.isAll (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^return other .unionWith ( other )  ;^610^^^^^597^612^return other.intersectWith ( this ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P5_Replace_Variable]^if  ( other.contains ( alternatives )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^if  ( alternatives.equals ( other )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P9_Replace_Statement]^if  ( alternatives.containsAll ( otherUnion.alternatives )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P15_Unwrap_Block]^return other;^599^600^601^602^603^597^612^if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P16_Remove_Block]^^599^600^601^602^603^597^612^if  ( alternatives.contains ( other )  )  { return other; } else { return NONE; }^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P5_Replace_Variable]^return other;^602^^^^^597^612^return NONE;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P8_Replace_Mix]^if  ( 3.contains ( other )  )  {^599^^^^^597^612^if  ( alternatives.contains ( other )  )  {^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P5_Replace_Variable]^return createForTypes ( this ) ;^607^^^^^597^612^return createForTypes ( types ) ;^[CLASS] ConcreteUnionType  [METHOD] intersectWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] ConcreteType  other  Set  alternatives  alts  types  boolean  
[P2_Replace_Operator]^return  ( obj instanceof ConcreteUnionType ) || alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Set  alternatives  alts  types  boolean  
[P2_Replace_Operator]^return  ( obj  >=  ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^return  ( obj instanceof ConcreteUnionType ) && alternatives.contains (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^618^619^^^^617^620^return  ( obj instanceof ConcreteUnionType ) && alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^&& alternatives.contains (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^619^^^^^617^620^&& alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Set  alternatives  alts  types  boolean  
[P8_Replace_Mix]^&& this.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^619^^^^^617^620^&& alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^619^^^^^617^620^&& alternatives.equals (  (  ( ConcreteUnionType )  obj ) .alternatives ) ;^[CLASS] ConcreteUnionType  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Object  obj  Set  alternatives  alts  types  boolean  
[P7_Replace_Invocation]^return alternatives.size (  )  ^ 0x5f6e7d8c;^623^^^^^622^624^return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[CLASS] ConcreteUnionType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  alternatives  alts  types  boolean  
[P8_Replace_Mix]^return alternatives.size (  )  - 5 ^ 0x5f6e7d8c;^623^^^^^622^624^return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[CLASS] ConcreteUnionType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^623^^^^^622^624^return alternatives.hashCode (  )  ^ 0x5f6e7d8c;^[CLASS] ConcreteUnionType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  alternatives  alts  types  boolean  
[P14_Delete_Statement]^^627^^^^^626^634^List<String> names = Lists.newArrayList (  ) ;^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P8_Replace_Mix]^names.add ( type .toString (  )   ) ;^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P14_Delete_Statement]^^629^^^^^626^634^names.add ( type.toString (  )  ) ;^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P14_Delete_Statement]^^631^^^^^626^634^Collections.sort ( names ) ;^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P2_Replace_Operator]^return " ( " + Joiner.on ( "," ) .join ( names )  <  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P2_Replace_Operator]^return " ( " + Joiner.on ( "," ) .join ( names )  <=  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P8_Replace_Mix]^return " ( "  ;^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P3_Replace_Literal]^return " ( " + Joiner.on ( "" ) .join ( names )  + " ) ";^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P14_Delete_Statement]^^633^^^^^626^634^return " ( " + Joiner.on ( "," ) .join ( names )  + " ) ";^[CLASS] ConcreteUnionType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] List  names  Set  alternatives  alts  types  boolean  ConcreteType  type  
[P3_Replace_Literal]^@Override boolean isAll (  )  { return false; }^639^^^^^634^644^@Override boolean isAll (  )  { return true; }^[CLASS] ConcreteAll  [METHOD] isAll [RETURN_TYPE] boolean   [VARIABLES] boolean  
[P8_Replace_Mix]^@Override ConcreteType unionWith ( ConcreteType other )  { return null; }^641^^^^^636^646^@Override ConcreteType unionWith ( ConcreteType other )  { return this; }^[CLASS] ConcreteAll  [METHOD] unionWith [RETURN_TYPE] ConcreteType   ConcreteType other [VARIABLES] boolean  ConcreteType  other  
[P1_Replace_Type]^@Override public char tochar (  )  { return "*"; }^645^^^^^640^650^@Override public String toString (  )  { return "*"; }^[CLASS] ConcreteAll  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^private final  long  id;^657^^^^^652^662^private final int id;^[CLASS] ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^this.id =  null;^660^^^^^659^663^this.id = id;^[CLASS] ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] int  id  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( id > 0 ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] int  id  boolean  
[P3_Replace_Literal]^Preconditions.checkArgument ( id >= id ) ;^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] int  id  boolean  
[P14_Delete_Statement]^^662^^^^^659^663^Preconditions.checkArgument ( id >= 0 ) ;^[CLASS] ConcreteUniqueType  [METHOD] <init> [RETURN_TYPE] ConcreteType$ConcreteUniqueType(int)   int id [VARIABLES] int  id  boolean  
[P2_Replace_Operator]^return  ( o instanceof ConcreteUniqueType ) ||  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  id  Object  o  boolean  
[P2_Replace_Operator]^return  ( o  &&  ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  id  Object  o  boolean  
[P2_Replace_Operator]^return  ( o instanceof ConcreteUniqueType ) &&  ( id >=  (  ( ConcreteUniqueType )  o ) .id ) ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  id  Object  o  boolean  
[P8_Replace_Mix]^return    ( id ;^666^667^^^^665^668^return  ( o instanceof ConcreteUniqueType ) &&  ( id ==  (  ( ConcreteUniqueType )  o ) .id ) ;^[CLASS] ConcreteUniqueType  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] int  id  Object  o  boolean  
[P8_Replace_Mix]^return ConcreteUniqueType.class.hashCode (  )  & id;^671^^^^^670^672^return ConcreteUniqueType.class.hashCode (  )  ^ id;^[CLASS] ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int  id  boolean  
[P14_Delete_Statement]^^671^^^^^670^672^return ConcreteUniqueType.class.hashCode (  )  ^ id;^[CLASS] ConcreteUniqueType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int  id  boolean  
[P1_Replace_Type]^@Override public char tochar (  )  { return "Unique$" + id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] int  id  boolean  
[P2_Replace_Operator]^@Override public String toString (  ||  )  { return "Unique$" + id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] int  id  boolean  
[P3_Replace_Literal]^@Override public String toString (  )  { return "Unique$Unique" + id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] int  id  boolean  
[P8_Replace_Mix]^@Override public String toString (  )  { return "Unique$"  !=  id; }^674^^^^^669^679^@Override public String toString (  )  { return "Unique$" + id; }^[CLASS] ConcreteUniqueType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] int  id  boolean  
