[P8_Replace_Mix]^private  Map<String, String> map;^36^^^^^31^41^private final Map<String, String> map;^[CLASS] VariableMap   [VARIABLES] 
[P8_Replace_Mix]^private Map<String, String> reverseMap = false;^39^^^^^34^44^private Map<String, String> reverseMap = null;^[CLASS] VariableMap   [VARIABLES] 
[P1_Replace_Type]^private static final int SEPARATOR = ':';^41^^^^^36^46^private static final char SEPARATOR = ':';^[CLASS] VariableMap   [VARIABLES] 
[P8_Replace_Mix]^private static final char SEPARATOR ;^41^^^^^36^46^private static final char SEPARATOR = ':';^[CLASS] VariableMap   [VARIABLES] 
[P8_Replace_Mix]^this.map =  Collections.unmodifiableMap ( null ) ;^44^^^^^43^45^this.map = Collections.unmodifiableMap ( map ) ;^[CLASS] VariableMap  [METHOD] <init> [RETURN_TYPE] Map)   String> map [VARIABLES] char  SEPARATOR  Map  map  reverseMap  boolean  
[P11_Insert_Donor_Statement]^reverseMap = Collections.unmodifiableMap ( rm ) ;this.map = Collections.unmodifiableMap ( map ) ;^44^^^^^43^45^this.map = Collections.unmodifiableMap ( map ) ;^[CLASS] VariableMap  [METHOD] <init> [RETURN_TYPE] Map)   String> map [VARIABLES] char  SEPARATOR  Map  map  reverseMap  boolean  
[P14_Delete_Statement]^^44^45^^^^43^45^this.map = Collections.unmodifiableMap ( map ) ; }^[CLASS] VariableMap  [METHOD] <init> [RETURN_TYPE] Map)   String> map [VARIABLES] char  SEPARATOR  Map  map  reverseMap  boolean  
[P5_Replace_Variable]^return sourceName.get ( map ) ;^52^^^^^51^53^return map.get ( sourceName ) ;^[CLASS] VariableMap  [METHOD] lookupNewName [RETURN_TYPE] String   String sourceName [VARIABLES] char  SEPARATOR  String  sourceName  boolean  Map  map  reverseMap  
[P14_Delete_Statement]^^52^^^^^51^53^return map.get ( sourceName ) ;^[CLASS] VariableMap  [METHOD] lookupNewName [RETURN_TYPE] String   String sourceName [VARIABLES] char  SEPARATOR  String  sourceName  boolean  Map  map  reverseMap  
[P2_Replace_Operator]^if  ( reverseMap != null )  {^60^^^^^59^64^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P8_Replace_Mix]^if  ( reverseMap == this )  {^60^^^^^59^64^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P15_Unwrap_Block]^initReverseMap();^60^61^62^^^59^64^if  ( reverseMap == null )  { initReverseMap (  ) ; }^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P16_Remove_Block]^^60^61^62^^^59^64^if  ( reverseMap == null )  { initReverseMap (  ) ; }^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P7_Replace_Invocation]^toBytes (  ) ;^61^^^^^59^64^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P14_Delete_Statement]^^61^^^^^59^64^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P11_Insert_Donor_Statement]^writer.close (  ) ;initReverseMap (  ) ;^61^^^^^59^64^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P12_Insert_Condition]^if  ( reverseMap == null )  { initReverseMap (  ) ; }^61^^^^^59^64^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P5_Replace_Variable]^return newName.get ( reverseMap ) ;^63^^^^^59^64^return reverseMap.get ( newName ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P7_Replace_Invocation]^return reverseMap .put ( null , 4 )  ;^63^^^^^59^64^return reverseMap.get ( newName ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P14_Delete_Statement]^^63^^^^^59^64^return reverseMap.get ( newName ) ;^[CLASS] VariableMap  [METHOD] lookupSourceName [RETURN_TYPE] String   String newName [VARIABLES] char  SEPARATOR  String  newName  boolean  Map  map  reverseMap  
[P2_Replace_Operator]^if  ( reverseMap != null )  {^70^^^^^69^77^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^if  ( reverseMap == false )  {^70^^^^^69^77^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P15_Unwrap_Block]^java.util.Map<java.lang.String, java.lang.String> rm = new java.util.HashMap<java.lang.String, java.lang.String>(); for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : map.entrySet()) {    rm.put(entry.getValue(), entry.getKey());}; reverseMap = java.util.Collections.unmodifiableMap(rm);^70^71^72^73^74^69^77^if  ( reverseMap == null )  { Map<String, String> rm = new HashMap<String, String> (  ) ; for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  { rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ; }^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P16_Remove_Block]^^70^71^72^73^74^69^77^if  ( reverseMap == null )  { Map<String, String> rm = new HashMap<String, String> (  ) ; for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  { rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ; }^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^reverseMap =  Collections.unmodifiableMap ( null ) ;^75^^^^^69^77^reverseMap = Collections.unmodifiableMap ( rm ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P11_Insert_Donor_Statement]^this.map = Collections.unmodifiableMap ( map ) ;reverseMap = Collections.unmodifiableMap ( rm ) ;^75^^^^^69^77^reverseMap = Collections.unmodifiableMap ( rm ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P11_Insert_Donor_Statement]^Map<String, String> map = new HashMap<String, String> (  ) ;Map<String, String> rm = new HashMap<String, String> (  ) ;^71^^^^^69^77^Map<String, String> rm = new HashMap<String, String> (  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P7_Replace_Invocation]^for  ( Map.Entry<String, String> entry : map .get ( 4 )   )  {^72^^^^^69^77^for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  {^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P14_Delete_Statement]^^72^73^74^^^69^77^for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  { rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ; }^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P5_Replace_Variable]^rm.put ( entry.getValue (  ) .getKey (  )  ) ;^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^rm .get ( 2 )   ) ;^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P14_Delete_Statement]^^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P11_Insert_Donor_Statement]^writer.write ( entry.getKey (  )  ) ;rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^rm.put ( entry .getKey (  )  , entry.getKey (  )  ) ;^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^reverseMap = Collections.unmodifiableMap ( 0 ) ;^75^^^^^69^77^reverseMap = Collections.unmodifiableMap ( rm ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P14_Delete_Statement]^^75^76^^^^69^77^reverseMap = Collections.unmodifiableMap ( rm ) ; }^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^rm.put ( null.getValue (  ) , entry.getKey (  )  ) ;^73^^^^^69^77^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P8_Replace_Mix]^reverseMap = Collections.unmodifiableMap ( 4 ) ;^75^^^^^69^77^reverseMap = Collections.unmodifiableMap ( rm ) ;^[CLASS] VariableMap  [METHOD] initReverseMap [RETURN_TYPE] void   [VARIABLES] char  SEPARATOR  Entry  entry  boolean  Map  map  reverseMap  rm  
[P2_Replace_Operator]^if  ( reverseMap != null )  {^90^^^^^89^94^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P8_Replace_Mix]^if  ( reverseMap == true )  {^90^^^^^89^94^if  ( reverseMap == null )  {^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P15_Unwrap_Block]^initReverseMap();^90^91^92^^^89^94^if  ( reverseMap == null )  { initReverseMap (  ) ; }^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P16_Remove_Block]^^90^91^92^^^89^94^if  ( reverseMap == null )  { initReverseMap (  ) ; }^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P7_Replace_Invocation]^toBytes (  ) ;^91^^^^^89^94^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P14_Delete_Statement]^^91^^^^^89^94^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P11_Insert_Donor_Statement]^writer.close (  ) ;initReverseMap (  ) ;^91^^^^^89^94^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P12_Insert_Condition]^if  ( reverseMap == null )  { initReverseMap (  ) ; }^91^^^^^89^94^initReverseMap (  ) ;^[CLASS] VariableMap  [METHOD] getNewNameToOriginalNameMap [RETURN_TYPE] Map   [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P7_Replace_Invocation]^Files.toByteArray ( toBytes (  ) , new File ( filename )  ) ;^100^^^^^99^101^Files.write ( toBytes (  ) , new File ( filename )  ) ;^[CLASS] VariableMap  [METHOD] save [RETURN_TYPE] void   String filename [VARIABLES] char  SEPARATOR  String  filename  boolean  Map  map  reverseMap  rm  
[P7_Replace_Invocation]^Files.write ( initReverseMap (  ) , new File ( filename )  ) ;^100^^^^^99^101^Files.write ( toBytes (  ) , new File ( filename )  ) ;^[CLASS] VariableMap  [METHOD] save [RETURN_TYPE] void   String filename [VARIABLES] char  SEPARATOR  String  filename  boolean  Map  map  reverseMap  rm  
[P14_Delete_Statement]^^100^^^^^99^101^Files.write ( toBytes (  ) , new File ( filename )  ) ;^[CLASS] VariableMap  [METHOD] save [RETURN_TYPE] void   String filename [VARIABLES] char  SEPARATOR  String  filename  boolean  Map  map  reverseMap  rm  
[P7_Replace_Invocation]^return fromMap ( Files.toByteArray ( new File ( filename )  )  ) ;^108^^^^^106^113^return fromBytes ( Files.toByteArray ( new File ( filename )  )  ) ;^[CLASS] VariableMap  [METHOD] load [RETURN_TYPE] VariableMap   String filename [VARIABLES] char  SEPARATOR  String  filename  ParseException  e  boolean  Map  map  reverseMap  rm  
[P14_Delete_Statement]^^108^^^^^106^113^return fromBytes ( Files.toByteArray ( new File ( filename )  )  ) ;^[CLASS] VariableMap  [METHOD] load [RETURN_TYPE] VariableMap   String filename [VARIABLES] char  SEPARATOR  String  filename  ParseException  e  boolean  Map  map  reverseMap  rm  
[P11_Insert_Donor_Statement]^throw new ParseException  (" ")  ;throw new IOException  (" ")  ;^111^^^^^106^113^throw new IOException  (" ")  ;^[CLASS] VariableMap  [METHOD] load [RETURN_TYPE] VariableMap   String filename [VARIABLES] char  SEPARATOR  String  filename  ParseException  e  boolean  Map  map  reverseMap  rm  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IOException  (" ")  ;^111^^^^^106^113^throw new IOException  (" ")  ;^[CLASS] VariableMap  [METHOD] load [RETURN_TYPE] VariableMap   String filename [VARIABLES] char  SEPARATOR  String  filename  ParseException  e  boolean  Map  map  reverseMap  rm  
[P5_Replace_Variable]^Writer writer = new OutputStreamWriter ( baos, Charsets.4 ) ;^120^^^^^118^135^Writer writer = new OutputStreamWriter ( baos, Charsets.UTF_8 ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P5_Replace_Variable]^Writer writer = new OutputStreamWriter (  Charsets.UTF_8 ) ;^120^^^^^118^135^Writer writer = new OutputStreamWriter ( baos, Charsets.UTF_8 ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^122^123^124^125^126^118^135^for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  { writer.write ( entry.getKey (  )  ) ; writer.write ( SEPARATOR ) ; writer.write ( entry.getValue (  )  ) ; writer.write ( '\n' ) ; }^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( entry.getValue (  )  ) ;writer.write ( entry.getKey (  )  ) ;^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( '\n' ) ;writer.write ( entry.getKey (  )  ) ;^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^rm.put ( entry.getValue (  ) , entry.getKey (  )  ) ;writer.write ( entry.getKey (  )  ) ;^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( SEPARATOR ) ;writer.write ( entry.getKey (  )  ) ;^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P7_Replace_Invocation]^writer.write ( entry .getValue (  )   ) ;^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^123^124^^^^118^135^writer.write ( entry.getKey (  )  ) ; writer.write ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^124^125^^^^118^135^writer.write ( SEPARATOR ) ; writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( entry.getValue (  )  ) ;writer.write ( SEPARATOR ) ;^124^^^^^118^135^writer.write ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( entry.getKey (  )  ) ;writer.write ( SEPARATOR ) ;^124^^^^^118^135^writer.write ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( '\n' ) ;writer.write ( SEPARATOR ) ;^124^^^^^118^135^writer.write ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.close (  ) ;writer.write ( SEPARATOR ) ;^124^^^^^118^135^writer.write ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P5_Replace_Variable]^writer.write ( null.getValue (  )  ) ;^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P8_Replace_Mix]^writer.write ( entry .getKey (  )   ) ;^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( entry.getKey (  )  ) ;writer.write ( entry.getValue (  )  ) ;^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( SEPARATOR ) ;writer.write ( entry.getValue (  )  ) ;^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^125^126^^^^118^135^writer.write ( entry.getValue (  )  ) ; writer.write ( '\n' ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^126^^^^^118^135^writer.write ( '\n' ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( entry.getKey (  )  ) ;writer.write ( '\n' ) ;^126^^^^^118^135^writer.write ( '\n' ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( SEPARATOR ) ;writer.write ( '\n' ) ;^126^^^^^118^135^writer.write ( '\n' ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.close (  ) ;writer.write ( '\n' ) ;^126^^^^^118^135^writer.write ( '\n' ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P7_Replace_Invocation]^writer.write (  ) ;^128^^^^^118^135^writer.close (  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^128^^^^^118^135^writer.close (  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( '\n' ) ;writer.close (  ) ;^128^^^^^118^135^writer.close (  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^initReverseMap (  ) ;writer.close (  ) ;^128^^^^^118^135^writer.close (  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^writer.write ( SEPARATOR ) ;writer.close (  ) ;^128^^^^^118^135^writer.close (  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^throw new ParseException  (" ")  ;throw new RuntimeException  (" ")  ;^132^^^^^118^135^throw new RuntimeException  (" ")  ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new RuntimeException  (" ")  ;^132^^^^^118^135^throw new RuntimeException  (" ")  ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P8_Replace_Mix]^for  ( Map.Entry<String, String> entry : 3.entrySet (  )  )  {^122^^^^^118^135^for  ( Map.Entry<String, String> entry : map.entrySet (  )  )  {^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P5_Replace_Variable]^writer.write ( 0.getKey (  )  ) ;^123^^^^^118^135^writer.write ( entry.getKey (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^124^^^^^118^135^writer.write ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P5_Replace_Variable]^writer.write ( 4.getValue (  )  ) ;^125^^^^^118^135^writer.write ( entry.getValue (  )  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P14_Delete_Statement]^^134^^^^^118^135^return baos.toByteArray (  ) ;^[CLASS] VariableMap  [METHOD] toBytes [RETURN_TYPE] byte[]   [VARIABLES] Entry  entry  boolean  char  SEPARATOR  ByteArrayOutputStream  baos  IOException  e  Map  map  reverseMap  rm  Writer  writer  
[P7_Replace_Invocation]^lines = CharStreams .newReaderSupplier (  )   ) ;^144^145^^^^141^162^lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P8_Replace_Mix]^lines =  CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( null ) , Charsets.UTF_8 )  ) ;^144^145^^^^141^162^lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P14_Delete_Statement]^^144^145^^^^141^162^lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^144^145^^^^141^162^lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P7_Replace_Invocation]^lines = CharStreams.readLines ( CharStreams .readLines (  )   ) ;^144^145^^^^141^162^lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P14_Delete_Statement]^^145^^^^^141^162^ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^lines = CharStreams.readLines ( CharStreams.newReaderSupplier ( ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^145^^^^^141^162^ByteStreams.newInputStreamSupplier ( bytes ) , Charsets.UTF_8 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^throw new ParseException  (" ")  ;throw new RuntimeException  (" ")  ;^149^^^^^141^162^throw new RuntimeException  (" ")  ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new RuntimeException  (" ")  ;^149^^^^^141^162^throw new RuntimeException  (" ")  ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^Map<String, String> rm = new HashMap<String, String> (  ) ;Map<String, String> map = new HashMap<String, String> (  ) ;^152^^^^^141^162^Map<String, String> map = new HashMap<String, String> (  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P2_Replace_Operator]^if  ( pos <= 0 && pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P2_Replace_Operator]^if  ( pos < 0 || pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P2_Replace_Operator]^if  ( pos <= 0 || pos >= line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P2_Replace_Operator]^if  ( pos <= 0 || pos == line.length (  )   <=  1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^if  ( pos <= pos || pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^if  ( pos <= 0 || pos == line.length (  )  - pos )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^if  ( pos <= 0 || pos == line.length() - 4  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P5_Replace_Variable]^if  ( line <= 0 || pos == pos.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P6_Replace_Expression]^if  ( pos <= 0 ) {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P6_Replace_Expression]^if  (  pos == line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P6_Replace_Expression]^if  ( pos ==  ( line.length (  )  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P6_Replace_Expression]^if  ( line.length (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P6_Replace_Expression]^if  ( "Bad line: " + line )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P7_Replace_Invocation]^if  ( pos <= 0 || pos == line.substring (  )  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P15_Unwrap_Block]^throw new java.text.ParseException(("Bad line: " + line), 0);^156^157^158^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  { throw new ParseException  (" ")  ; }^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P16_Remove_Block]^^156^157^158^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  { throw new ParseException  (" ")  ; }^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P8_Replace_Mix]^throw new RuntimeException  (" ")  ; ;^157^^^^^141^162^throw new ParseException  (" ")  ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new ParseException  (" ")  ;^157^^^^^141^162^throw new ParseException  (" ")  ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P11_Insert_Donor_Statement]^throw new IOException  (" ")  ;throw new ParseException  (" ")  ;^157^^^^^141^162^throw new ParseException  (" ")  ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P13_Insert_Block]^if  (  ( pos <= 0 )  ||  ( pos ==  (  ( line.length (  )  )  - 1 )  )  )  {     throw new ParseException (  ( "Bad line: " + line ) , 0 ) ; }^157^^^^^141^162^[Delete]^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P1_Replace_Type]^for  ( char line : lines )  {^154^^^^^141^162^for  ( String line : lines )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P1_Replace_Type]^long  pos = line.lastIndexOf ( SEPARATOR ) ;^155^^^^^141^162^int pos = line.lastIndexOf ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P5_Replace_Variable]^int pos = SEPARATOR.lastIndexOf ( line ) ;^155^^^^^141^162^int pos = line.lastIndexOf ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P7_Replace_Invocation]^int pos = line.substring ( SEPARATOR ) ;^155^^^^^141^162^int pos = line.lastIndexOf ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P14_Delete_Statement]^^155^^^^^141^162^int pos = line.lastIndexOf ( SEPARATOR ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^if  ( pos <= 0 || pos == line.length() - 3  - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P7_Replace_Invocation]^if  ( pos <= 0 || pos == line .lastIndexOf ( pos )   - 1 )  {^156^^^^^141^162^if  ( pos <= 0 || pos == line.length (  )  - 1 )  {^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P2_Replace_Operator]^map.put ( line.substring ( 0, pos ) , line.substring ( pos  ==  1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^map.put ( line.substring ( 7, pos ) , line.substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^map.put ( line.substring ( 0, pos ) , line.substring ( pos + pos )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P5_Replace_Variable]^map.put ( line.substring ( 0, pos ) .substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P5_Replace_Variable]^map.put ( line.substring ( 0 ) , line.substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P5_Replace_Variable]^map.put ( pos.substring ( 0, line ) , line.substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P7_Replace_Invocation]^map.put ( line .substring ( pos , pos )  , line^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P14_Delete_Statement]^^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^map.put ( line.substring ( pos, pos ) , line.substring ( pos + 1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P2_Replace_Operator]^map.put ( line.substring ( 0, pos ) , line.substring ( pos  <<  1 )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P3_Replace_Literal]^map.put ( line.substring ( 0, pos ) , line.substring ( pos  )  ) ;^159^^^^^141^162^map.put ( line.substring ( 0, pos ) , line.substring ( pos + 1 )  ) ;^[CLASS] VariableMap  [METHOD] fromBytes [RETURN_TYPE] VariableMap   byte[] bytes [VARIABLES] byte[]  bytes  boolean  Iterable  lines  char  SEPARATOR  IOException  e  String  line  Map  map  reverseMap  rm  int  pos  
[P8_Replace_Mix]^return new VariableMap ( Maps.newHashMap ( 1 )  ) ;^171^^^^^170^172^return new VariableMap ( Maps.newHashMap ( map )  ) ;^[CLASS] VariableMap  [METHOD] fromMap [RETURN_TYPE] VariableMap   String> map [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
[P14_Delete_Statement]^^171^^^^^170^172^return new VariableMap ( Maps.newHashMap ( map )  ) ;^[CLASS] VariableMap  [METHOD] fromMap [RETURN_TYPE] VariableMap   String> map [VARIABLES] char  SEPARATOR  Map  map  reverseMap  rm  boolean  
