[P8_Replace_Mix]^private  String[] paths;^37^^^^^32^42^private final String[] paths;^[CLASS] ShowByPathWarningsGuard ShowType   [VARIABLES] 
[P5_Replace_Variable]^this ( checkWarningsOnlyForPath, ShowType.showType ) ;^41^^^^^40^42^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String)   String checkWarningsOnlyForPath [VARIABLES] String[]  paths  String  checkWarningsOnlyForPath  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^this (  ShowType.INCLUDE ) ;^41^^^^^40^42^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String)   String checkWarningsOnlyForPath [VARIABLES] String[]  paths  String  checkWarningsOnlyForPath  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P14_Delete_Statement]^^41^^^^^40^42^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String)   String checkWarningsOnlyForPath [VARIABLES] String[]  paths  String  checkWarningsOnlyForPath  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P11_Insert_Donor_Statement]^this ( new String[] { path }, showType ) ;this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^41^^^^^40^42^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String)   String checkWarningsOnlyForPath [VARIABLES] String[]  paths  String  checkWarningsOnlyForPath  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^this ( paths, ShowType.INCLUDE ) ;^45^^^^^44^46^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String[])   String[] checkWarningsOnlyForPath [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^this ( checkWarningsOnlyForPath, ShowType.showType ) ;^45^^^^^44^46^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String[])   String[] checkWarningsOnlyForPath [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^this (  ShowType.INCLUDE ) ;^45^^^^^44^46^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String[])   String[] checkWarningsOnlyForPath [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P14_Delete_Statement]^^45^^^^^44^46^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String[])   String[] checkWarningsOnlyForPath [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P11_Insert_Donor_Statement]^this ( new String[] { path }, showType ) ;this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^45^^^^^44^46^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] String[])   String[] checkWarningsOnlyForPath [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^this ( new String[] { path }, INCLUDE ) ;^49^^^^^48^50^this ( new String[] { path }, showType ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String path ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  path  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^this ( new String[] { path } ) ;^49^^^^^48^50^this ( new String[] { path }, showType ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String path ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  path  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^this ( new String[] { showType }, path ) ;^49^^^^^48^50^this ( new String[] { path }, showType ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String path ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  path  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P14_Delete_Statement]^^49^^^^^48^50^this ( new String[] { path }, showType ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String path ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  path  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P11_Insert_Donor_Statement]^this ( checkWarningsOnlyForPath, ShowType.INCLUDE ) ;this ( new String[] { path }, showType ) ;^49^^^^^48^50^this ( new String[] { path }, showType ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String path ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  path  boolean  ShowType  EXCLUDE  INCLUDE  showType  
[P2_Replace_Operator]^Preconditions.checkArgument ( paths == null ) ;^53^^^^^52^57^Preconditions.checkArgument ( paths != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( checkWarningsOnlyForPath != null ) ;^53^^^^^52^57^Preconditions.checkArgument ( paths != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P14_Delete_Statement]^^53^^^^^52^57^Preconditions.checkArgument ( paths != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( showType != null ) ;Preconditions.checkArgument ( paths != null ) ;^53^^^^^52^57^Preconditions.checkArgument ( paths != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P2_Replace_Operator]^Preconditions.checkArgument ( showType == null ) ;^54^^^^^52^57^Preconditions.checkArgument ( showType != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^Preconditions.checkArgument ( INCLUDE != null ) ;^54^^^^^52^57^Preconditions.checkArgument ( showType != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P14_Delete_Statement]^^54^55^^^^52^57^Preconditions.checkArgument ( showType != null ) ; this.paths = paths;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( paths != null ) ;Preconditions.checkArgument ( showType != null ) ;^54^^^^^52^57^Preconditions.checkArgument ( showType != null ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^this.paths = checkWarningsOnlyForPath;^55^^^^^52^57^this.paths = paths;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P5_Replace_Variable]^this.showType = INCLUDE;^56^^^^^52^57^this.showType = showType;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] <init> [RETURN_TYPE] ShowByPathWarningsGuard$ShowType)   String[] paths ShowType showType [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P1_Replace_Type]^final char errorPath = error.sourceName;^61^^^^^60^72^final String errorPath = error.sourceName;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P2_Replace_Operator]^if  ( error.level != CheckLevel.ERROR || errorPath != null )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P2_Replace_Operator]^if  ( error.level == CheckLevel.ERROR && errorPath != null )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P2_Replace_Operator]^if  ( error.level != CheckLevel.ERROR && errorPath == null )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P6_Replace_Expression]^if  ( error.level != CheckLevel.ERROR ) {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P6_Replace_Expression]^if  (  errorPath != null )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P6_Replace_Expression]^if  ( inPath ^ showType == INCLUDE )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P6_Replace_Expression]^if  ( showType == INCLUDE )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^if  ( error.level != CheckLevel.ERROR && errorPath != false )  {^62^^^^^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P15_Unwrap_Block]^boolean inPath = false; for (java.lang.String path : paths) {    inPath |= errorPath.contains(path);}; if (inPath ^ ((showType) == (com.google.javascript.jscomp.ShowByPathWarningsGuard.ShowType.INCLUDE))) {    return CheckLevel.OFF;};^62^63^64^65^66^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  { boolean inPath = false; for  ( String path : paths )  { inPath |= errorPath.contains ( path ) ; }^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P16_Remove_Block]^^62^63^64^65^66^60^72^if  ( error.level != CheckLevel.ERROR && errorPath != null )  { boolean inPath = false; for  ( String path : paths )  { inPath |= errorPath.contains ( path ) ; }^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P2_Replace_Operator]^if  ( inPath ^  ( showType != ShowType.INCLUDE )  )  {^67^^^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^if  ( inPath ^  ( INCLUDE == ShowType.INCLUDE )  )  {^67^^^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^if  ( inPath ^  ( showType == ShowType.EXCLUDE )  )  {^67^^^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P6_Replace_Expression]^if  ( showType == INCLUDE )  {^67^^^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^if  ( inPath ^  ( EXCLUDE == ShowType.INCLUDE )  )  {^67^^^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P15_Unwrap_Block]^return CheckLevel.OFF;^67^68^69^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  { return CheckLevel.OFF; }^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P16_Remove_Block]^^67^68^69^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  { return CheckLevel.OFF; }^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^inPath |= path.contains ( errorPath ) ;^65^^^^^60^72^inPath |= errorPath.contains ( path ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^inPath |=  path.contains ( path ) ;^65^^^^^60^72^inPath |= errorPath.contains ( path ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^return this;^68^^^^^60^72^return CheckLevel.OFF;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P3_Replace_Literal]^boolean inPath = true;^63^^^^^60^72^boolean inPath = false;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P1_Replace_Type]^for  ( char path : paths )  {^64^^^^^60^72^for  ( String path : paths )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P14_Delete_Statement]^^65^^^^^60^72^inPath |= errorPath.contains ( path ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P5_Replace_Variable]^if  ( showType ^  ( inPath == ShowType.INCLUDE )  )  {^67^^^^^60^72^if  ( inPath ^  ( showType == ShowType.INCLUDE )  )  {^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^inPath |=  null.contains ( path ) ;^65^^^^^60^72^inPath |= errorPath.contains ( path ) ;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^return null;^68^^^^^60^72^return CheckLevel.OFF;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P8_Replace_Mix]^return this;^71^^^^^60^72^return null;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] level [RETURN_TYPE] CheckLevel   JSError error [VARIABLES] String[]  checkWarningsOnlyForPath  paths  String  errorPath  path  boolean  inPath  JSError  error  ShowType  EXCLUDE  INCLUDE  showType  
[P3_Replace_Literal]^return -8;^76^^^^^75^77^return 1;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] getPriority [RETURN_TYPE] int   [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
[P8_Replace_Mix]^return 4;^76^^^^^75^77^return 1;^[CLASS] ShowByPathWarningsGuard ShowType  [METHOD] getPriority [RETURN_TYPE] int   [VARIABLES] String[]  checkWarningsOnlyForPath  paths  ShowType  EXCLUDE  INCLUDE  showType  boolean  
