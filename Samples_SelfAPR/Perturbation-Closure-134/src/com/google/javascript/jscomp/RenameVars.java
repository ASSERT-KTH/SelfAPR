[P8_Replace_Mix]^private  ArrayList<Node> globalNameNodes = new ArrayList<Node> (  ) ;^40^^^^^35^45^private final ArrayList<Node> globalNameNodes = new ArrayList<Node> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private  ArrayList<Node> localNameNodes = new ArrayList<Node> (  ) ;^43^^^^^38^48^private final ArrayList<Node> localNameNodes = new ArrayList<Node> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private  ArrayList<String> localTempNames = new ArrayList<String> (  ) ;^46^^^^^41^51^private final ArrayList<String> localTempNames = new ArrayList<String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P4_Replace_Constructor]^private final Set<String> externNames = private final Set<String> externNames =  new String> (  )  ;^49^^^^^44^54^private final Set<String> externNames = new HashSet<String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private final Set<String> externNames  = null ;^49^^^^^44^54^private final Set<String> externNames = new HashSet<String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private final Map<String, String> renameMap  = null ;^55^^^^^50^60^private final Map<String, String> renameMap = new HashMap<String, String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private  VariableMap prevUsedRenameMap;^58^^^^^53^63^private final VariableMap prevUsedRenameMap;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^private final char prefix;^61^^^^^56^66^private final String prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^private  long  assignmentCount = 0;^64^^^^^59^69^private int assignmentCount = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P3_Replace_Literal]^private int assignmentCount = -6;^64^^^^^59^69^private int assignmentCount = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private int assignmentCount = 3;^64^^^^^59^69^private int assignmentCount = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^CompilerInput input;^70^^^^^65^75^final CompilerInput input;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^final char oldName;^71^^^^^66^76^final String oldName;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^final  short  orderOfOccurrence;^72^^^^^67^77^final int orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^final  long  orderOfOccurrence;^72^^^^^67^77^final int orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^char newName;^73^^^^^68^78^String newName;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^short  count;^74^^^^^69^79^int count;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P4_Replace_Constructor]^private final SortedMap<String, Assignment> assignments = private final SortedMap<String, Assignment> assignments =  new Assignment> (  )  ;^96^97^^^^96^97^private final SortedMap<String, Assignment> assignments = new TreeMap<String, Assignment> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private final SortedMap<String, Assignment> assignments ;^96^97^^^^96^97^private final SortedMap<String, Assignment> assignments = new TreeMap<String, Assignment> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private  boolean localRenamingOnly;^100^^^^^95^105^private final boolean localRenamingOnly;^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P1_Replace_Type]^private static final char LOCAL_VAR_PREFIX = "L ";^116^^^^^111^121^private static final String LOCAL_VAR_PREFIX = "L ";^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private static  Comparator<Assignment> FREQUENCY_COMPARATOR = new Comparator<Assignment> (  )  {^243^244^^^^243^253^private static final Comparator<Assignment> FREQUENCY_COMPARATOR = new Comparator<Assignment> (  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^private static final Comparator<Assignment> ORDER_OF_OCCURRENCE_COMPARATOR ;^259^260^^^^259^264^private static final Comparator<Assignment> ORDER_OF_OCCURRENCE_COMPARATOR = new Comparator<Assignment> (  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2   [VARIABLES] 
[P8_Replace_Mix]^this.input =  null;^77^^^^^76^84^this.input = input;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.count = 0;this.input = input;^77^^^^^76^84^this.input = input;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^this.oldName = prefix;^78^^^^^76^84^this.oldName = name;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.oldName =  null;^78^^^^^76^84^this.oldName = name;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.newName = null;this.oldName = name;^78^^^^^76^84^this.oldName = name;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.newName = newName;this.oldName = name;^78^^^^^76^84^this.oldName = name;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.newName = true;^79^^^^^76^84^this.newName = null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.oldName = name;this.newName = null;^79^^^^^76^84^this.newName = null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.newName = newName;this.newName = null;^79^^^^^76^84^this.newName = null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P12_Insert_Condition]^if  ( newName != null )  { this.newName = null; }^79^^^^^76^84^this.newName = null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P12_Insert_Condition]^if  ( a.newName != null )  { this.newName = null; }^79^^^^^76^84^this.newName = null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^this.count = -1;^80^^^^^76^84^this.count = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.count = 1;^80^^^^^76^84^this.count = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.input = input;this.count = 0;^80^^^^^76^84^this.count = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.orderOfOccurrence ;^83^^^^^76^84^this.orderOfOccurrence = assignmentCount++;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.compiler =  null;^126^^^^^118^138^this.compiler = compiler;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^this.prefix = prefix != null ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^this.prefix = prefix != null ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^this.prefix = oldName == null ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^this.prefix = prefix ( prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.prefix = prefix == false ? "" : prefix;^127^^^^^118^138^this.prefix = prefix == null ? "" : prefix;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^this.localRenamingOnly = preserveAnonymousFunctionNames;^128^^^^^118^138^this.localRenamingOnly = localRenamingOnly;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.localRenamingOnly =  preserveAnonymousFunctionNames;^128^^^^^118^138^this.localRenamingOnly = localRenamingOnly;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.preserveAnonymousFunctionNames =  localRenamingOnly;^129^^^^^118^138^this.preserveAnonymousFunctionNames = preserveAnonymousFunctionNames;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^this.generatePseudoNames = preserveAnonymousFunctionNames;^130^^^^^118^138^this.generatePseudoNames = generatePseudoNames;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.generatePseudoNames =  preserveAnonymousFunctionNames;^130^^^^^118^138^this.generatePseudoNames = generatePseudoNames;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.prevUsedRenameMap =  null;^131^^^^^118^138^this.prevUsedRenameMap = prevUsedRenameMap;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedCharacters =  null;^132^^^^^118^138^this.reservedCharacters = reservedCharacters;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( reservedNames != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( reservedNames != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( reservedNames == this )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( prevUsedRenameMap != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( newName != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( a.newName != null )  {^133^^^^^118^138^if  ( reservedNames == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^this.reservedNames = com.google.common.collect.Sets.newHashSet();^133^134^135^136^137^118^138^if  ( reservedNames == null )  { this.reservedNames = Sets.newHashSet (  ) ; } else { this.reservedNames = Sets.newHashSet ( reservedNames ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^133^134^135^136^137^118^138^if  ( reservedNames == null )  { this.reservedNames = Sets.newHashSet (  ) ; } else { this.reservedNames = Sets.newHashSet ( reservedNames ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedNames =  Sets.newHashSet ( null ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet (  ) ;this.reservedNames = Sets.newHashSet ( reservedNames ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedNames = Sets.newHashSet ( 0 ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet (  ) ;this.reservedNames = Sets.newHashSet ( reservedNames ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;this.reservedNames = Sets.newHashSet ( reservedNames ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedNames  =  this.reservedNames ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet ( reservedNames ) ;this.reservedNames = Sets.newHashSet (  ) ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet ( reservedNames ) ;this.reservedNames = Sets.newHashSet (  ) ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;this.reservedNames = Sets.newHashSet (  ) ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedNames  =  this.reservedNames ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet ( reservedNames ) ;this.reservedNames = Sets.newHashSet (  ) ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedNames =  Sets.newHashSet ( null ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet (  ) ;this.reservedNames = Sets.newHashSet ( reservedNames ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^this.reservedNames = Sets .newHashSet (  )  ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet ( reservedNames ) ;this.reservedNames = Sets.newHashSet (  ) ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;this.reservedNames = Sets.newHashSet (  ) ;^134^^^^^118^138^this.reservedNames = Sets.newHashSet (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.reservedNames = Sets.newHashSet ( null ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet (  ) ;this.reservedNames = Sets.newHashSet ( reservedNames ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;this.reservedNames = Sets.newHashSet ( reservedNames ) ;^136^^^^^118^138^this.reservedNames = Sets.newHashSet ( reservedNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] Set)   AbstractCompiler compiler String prefix boolean localRenamingOnly boolean preserveAnonymousFunctionNames boolean generatePseudoNames VariableMap prevUsedRenameMap Nullable
char[] reservedCharacters String> reservedNames [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^isExternsPass_ =  preserveAnonymousFunctionNames;^167^^^^^166^168^isExternsPass_ = isExterns;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] <init> [RETURN_TYPE] RenameVars$ProcessVars(boolean)   boolean isExterns [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^Preconditions.checkState ( this.newName != null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^Preconditions.checkState ( prefix == null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^90^91^^^^89^92^Preconditions.checkState ( this.newName == null ) ; this.newName = newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( generatePseudoNames ) ;Preconditions.checkState ( this.newName == null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^this.newName = prefix;^91^^^^^89^92^this.newName = newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.newName =  oldName;^91^^^^^89^92^this.newName = newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.oldName = name;this.newName = newName;^91^^^^^89^92^this.newName = newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.newName = null;this.newName = newName;^91^^^^^89^92^this.newName = newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( n.getType (  )  != Token.1 )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( n.setString (  )  != Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^return ;^172^173^174^^^157^187^if  ( n.getType (  )  != Token.NAME )  { return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^172^173^174^^^157^187^if  ( n.getType (  )  != Token.NAME )  { return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char name = n.getchar (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String parentame = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String name = n.setString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String newName = getNewGlobalName ( n ) ;String name = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String oldName = n.getString (  ) ;String name = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^String parentame = n.setString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^return getPseudoName ( n.getString (  )  ) ;String name = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( name.length (  )  >= 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^if  ( name.length (  )  == count )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^if  ( name.length() - 3  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( tempName.length (  )  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( name.equals (  )  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( name .isEmpty (  )   == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( name.length (  )  == 0  )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^return ;^179^180^181^^^164^194^if  ( name.length (  )  == 0 )  { return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^179^180^181^^^164^194^if  ( name.length (  )  == 0 )  { return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( ! ( okToRenameVar ( name, local )  )  )  {     return ; }^179^^^^^164^194^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^if  ( name.length() + 0  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( prefix.length (  )  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Scope.Var var = t.getScope (  ) .getVar ( tempName ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^Scope.Var var = t.getScope (  ) .isExported ( name ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^Scope.Var var = t.getScope (  )  .isExported ( name , localRenamingOnly )  ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^Scope.Var var = t.getScope (  ) .isExported ( tempName ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^Scope.Var var = t.getScope (  )  .isExported ( oldName , isExternsPass_ )  ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^Scope.Var var = t.getScope (  ) .isExported ( prefix ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^boolean local =  ( var != null )  || var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^boolean local =  ( var == null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^boolean local =  ( var != null )  && var .getLocalVarIndex (  )  ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( !local || localRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !local && preserveAnonymousFunctionNamesRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !local && preserveAnonymousFunctionNames )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !local && localRenamingOnlyRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !local && local )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( !local ) {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  (  localRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^reservedNames.add(name); return ;^188^189^190^191^^173^203^if  ( !local && localRenamingOnly )  { reservedNames.add ( name ) ; return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^188^189^190^191^^173^203^if  ( !local && localRenamingOnly )  { reservedNames.add ( name ) ; return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( isExternsPass_ )  {     if  ( !local )  {         externNames.add ( name ) ;     }     return ; }^188^^^^^173^203^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^reservedNames.addAll ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^189^190^^^^174^204^reservedNames.add ( name ) ; return;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( prefix ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^reservedNames.addAll ( tempName ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( preserveAnonymousFunctionNames || var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( preserveAnonymousFunctionNames && var == null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( local && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( var && preserveAnonymousFunctionNames != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( preserveAnonymousFunctionNames ) {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  (  var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( (preserveAnonymousFunctionNames && var != null) )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( var != null )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( preserveAnonymousFunctionNames && var != false && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^reservedNames.add(name); return ;^194^195^196^197^198^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  { reservedNames.add ( name ) ; return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^194^195^196^197^198^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  { reservedNames.add ( name ) ; return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^reservedNames.addAll ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^196^197^^^^181^211^&& NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  { reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^reservedNames.addAll ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^reservedNames.addAll ( prefix ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !okToRenameVar ( name, localRenamingOnly )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !okToRenameVar (  local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !okToRenameVar ( name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !okToRenameVar ( local, name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( !getNewLocalName ( name, local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( !okToRenameVar ( prefix, local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^return ;^202^203^204^^^187^217^if  ( !okToRenameVar ( name, local )  )  { return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^202^203^204^^^187^217^if  ( !okToRenameVar ( name, local )  )  { return; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  (  ( name.length (  )  )  == 0 )  {     return ; }^202^^^^^187^217^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !okToRenameVar ( tempName, local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !okToRenameVar ( name, preserveAnonymousFunctionNames )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( !getNewLocalName ( name, preserveAnonymousFunctionNames )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( ! ( okToRenameVar ( name, local )  )  )  {     return ; }^202^^^^^187^217^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( preserveAnonymousFunctionNames )  {^206^^^^^191^221^if  ( isExternsPass_ )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( localRenamingOnly )  {^206^^^^^191^221^if  ( isExternsPass_ )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^if (!local) {    externNames.add(name);}; return ;^206^207^208^209^210^191^221^if  ( isExternsPass_ )  {  if  ( !local )  { externNames.add ( name ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^206^207^208^209^210^191^221^if  ( isExternsPass_ )  {  if  ( !local )  { externNames.add ( name ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  (  ( !local )  &&  ( localRenamingOnly )  )  {     reservedNames.add ( name ) ;     return ; }^206^^^^^191^221^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !localRenamingOnly )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( !preserveAnonymousFunctionNames )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( local )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^externNames.add(name);^208^209^210^^^193^223^if  ( !local )  { externNames.add ( name ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^208^209^210^^^193^223^if  ( !local )  { externNames.add ( name ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^externNames.addAll ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^globalNameNodes.add ( n ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^externNames.add ( prefix ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^externNames.add ( tempName ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( var != null )  {^214^^^^^199^229^if  ( local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( !local )  {^214^^^^^199^229^if  ( local )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^} else if  ( var == null )  {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^} else {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^incCount(name, var.input); globalNameNodes.add(n);^220^221^222^223^224^205^235^} else if  ( var != null )  {  incCount ( name, var.input ) ; globalNameNodes.add ( n ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^220^221^222^223^224^205^235^} else if  ( var != null )  {  incCount ( name, var.input ) ; globalNameNodes.add ( n ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^incCount (  var.input ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^incCount ( name.input ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^incCount ( name ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^incCount ( tempName, null ) ;incCount ( name, var.input ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^globalNameNodes.add ( parent ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;globalNameNodes.add ( n ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;globalNameNodes.add ( n ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localNameNodes.add ( n ) ;globalNameNodes.add ( n ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^222^223^^^^207^237^incCount ( name, var.input ) ; globalNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  <=  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String tempName = prefix + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String tempName = var + LOCAL_VAR_PREFIX.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String oldTempName = localTempNames.get ( index ) ;String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String tempName = LOCAL_VAR_PREFIX + null.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String tempName = LOCAL_VAR_PREFIX + var .getParentNode (  )  ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^incCount ( prefix, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^217^218^^^^202^232^incCount ( tempName, null ) ; localNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^incCount ( name, var.input ) ;incCount ( tempName, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^localNameNodes.add ( parent ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^218^219^^^^203^233^localNameNodes.add ( n ) ; localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;localNameNodes.add ( n ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^globalNameNodes.add ( n ) ;localNameNodes.add ( n ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^localTempNames.get ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^localTempNames .addAll ( null )  ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^localTempNames.add ( prefix ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localNameNodes.add ( n ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^globalNameNodes.add ( n ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^}  if  ( var != this )  {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  |  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^216^217^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ; incCount ( tempName, null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^incCount ( oldName, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^localTempNames.add ( oldName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  NodeTraversal  t  Var  var  Node  n  parent  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment s = assignments.get ( tempName ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment s = name.get ( assignments ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^Assignment s = assignments.get ( prefix ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldName ) ;Assignment s = assignments.get ( name ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldTempName ) ;Assignment s = assignments.get ( name ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^assignments.put ( name, s ) ;Assignment s = assignments.get ( name ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;Assignment s = assignments.get ( name ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^pendingAssignments.add ( a ) ;Assignment s = assignments.get ( name ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( s != null )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( s == false )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( newName != null )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^s = new com.google.javascript.jscomp.RenameVars.Assignment(name, input); assignments.put(name, s);^230^231^232^233^^228^235^if  ( s == null )  { s = new Assignment ( name, input ) ; assignments.put ( name, s ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^230^231^232^233^^228^235^if  ( s == null )  { s = new Assignment ( name, input ) ; assignments.put ( name, s ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^s = s =  new ProcessVars ( true )  ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^s = new Assignment (  input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^s = new Assignment ( name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^s = new Assignment ( tempName, input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^s = new Assignment ( input, name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^s =  new Assignment ( null, input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( s == null )  {     s = new Assignment ( name, input ) ;     assignments.put ( name, s ) ; }^231^^^^^228^235^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^s = new Assignment ( prefix, input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignments.put ( tempName, s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignments.put (  s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignments.put ( name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignments.put ( s, name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;assignments.put ( name, s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^assignments .get ( 4 )  ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  s  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( a1.count < a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( orderOfOccurrence != a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a1.count != orderOfOccurrence )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a2.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a1.count != a2.count.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( a2.count - a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^return (a2.count) - (a1.count);^246^247^248^^^245^252^if  ( a1.count != a2.count )  { return a2.count - a1.count; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^246^247^248^^^245^252^if  ( a1.count != a2.count )  { return a2.count - a1.count; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^return a2.count   instanceof   a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return orderOfOccurrence - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a1.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2.count - a1.count.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^returnorderOfOccurrence - orderOfOccurrence;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P12_Insert_Condition]^if  ( a1.count != a2.count )  { return a2.count - a1.count; }^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^return a2.count  &  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return count - a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2.count - orderOfOccurrence;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return false ;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare (  a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2.compare ( a1, ORDER_OF_OCCURRENCE_COMPARATOR ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a1.compare ( ORDER_OF_OCCURRENCE_COMPARATOR, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return ORDER_OF_OCCURRENCE_COMPARATOR .compare ( a1 , a2 )  ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^return a1.orderOfOccurrence  !=  a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return orderOfOccurrence - a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a1.orderOfOccurrence - orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2 - a1.orderOfOccurrence.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a2.orderOfOccurrence.orderOfOccurrence - a1;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return orderOfOccurrence - orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a1  a2  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^assignmentLog  =  assignmentLog ;^270^^^^^255^285^assignmentLog = new StringBuilder (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( false )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, externs, NodeTraversal.traverse ( compiler, externs,  new ProcessVars ( false )   ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, root, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse (  externs, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( externs, compiler, new ProcessVars ( true )  ) ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^NodeTraversal .getScope (  )  ;^273^^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^273^274^^^^258^288^NodeTraversal.traverse ( compiler, externs, new ProcessVars ( true )  ) ; NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^NodeTraversal.traverse ( compiler, root, new ProcessVars ( true )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, root, NodeTraversal.traverse ( compiler, root,  new ProcessVars ( true )   ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, n, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, new ProcessVars ( false )  ) ;^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^274^^^^^259^289^NodeTraversal.traverse ( compiler, root, new ProcessVars ( false )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^reservedNames .add ( null )  ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet ( reservedNames ) ;reservedNames.addAll ( externNames ) ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.addAll ( externNames ) ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.addAll ( externNames ) ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;reservedNames.addAll ( externNames ) ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;reservedNames.addAll ( externNames ) ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;reservedNames.addAll ( externNames ) ;^277^^^^^262^292^reservedNames.addAll ( externNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^new  LinkedList <Assignment> ( FREQUENCY_COMPARATOR ) ;^281^^^^^266^296^new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^new Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR )  ;^281^^^^^266^296^new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^new TreeSet<Assignment> ( this ) ;^281^^^^^266^296^new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^SortedSet<Assignment> varsByFrequency = SortedSet<Assignment> varsByFrequency =  new Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR )  ;^280^281^^^^265^295^SortedSet<Assignment> varsByFrequency = new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;SortedSet<Assignment> varsByFrequency = new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^280^281^^^^265^295^SortedSet<Assignment> varsByFrequency = new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^varsByFrequency.contains ( assignments.values (  )  ) ;^282^^^^^267^297^varsByFrequency.addAll ( assignments.values (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^varsByFrequency.addAll ( this.values (  )  ) ;^282^^^^^267^297^varsByFrequency.addAll ( assignments.values (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^282^^^^^267^297^varsByFrequency.addAll ( assignments.values (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;varsByFrequency.addAll ( assignments.values (  )  ) ;^282^^^^^267^297^varsByFrequency.addAll ( assignments.values (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( prevUsedRenameMap == null )  {^285^^^^^270^300^if  ( prevUsedRenameMap != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( prevUsedRenameMap != this )  {^285^^^^^270^300^if  ( prevUsedRenameMap != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( newName != null )  {^285^^^^^270^300^if  ( prevUsedRenameMap != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( reservedNames == null )  {^285^^^^^270^300^if  ( prevUsedRenameMap != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( a.newName != null )  {^285^^^^^270^300^if  ( prevUsedRenameMap != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^reusePreviouslyUsedVariableMap();^285^286^287^^^270^300^if  ( prevUsedRenameMap != null )  { reusePreviouslyUsedVariableMap (  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^285^286^287^^^270^300^if  ( prevUsedRenameMap != null )  { reusePreviouslyUsedVariableMap (  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^286^^^^^271^301^reusePreviouslyUsedVariableMap (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^getPseudoName ( varsByFrequency ) ;^290^^^^^275^305^assignNames ( varsByFrequency ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^290^^^^^275^305^assignNames ( varsByFrequency ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^boolean changed = true;^292^^^^^277^307^boolean changed = false;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( newName == null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( rootewName != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( n != newNameull )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( newNameewName != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( newName != false )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( s == null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( prevUsedRenameMap != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( reservedNames == null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( a.newName != null )  {^298^^^^^283^313^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^n.setString(newName); changed = true;^298^299^300^301^^283^313^if  ( newName != null )  { n.setString ( newName ) ; changed = true; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^298^299^300^301^^283^313^if  ( newName != null )  { n.setString ( newName ) ; changed = true; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^changed = false;^300^^^^^285^315^changed = true;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( rootewName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( prefix ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( newNameewName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( n ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^n .getString (  )  ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^n.setString ( tempName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^299^300^^^^284^314^n.setString ( newName ) ; changed = true;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;n.setString ( newName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;n.setString ( newName ) ;^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char newName = getNewGlobalName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String rootewName = getNewGlobalName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String newName = getPseudoName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String newName = getNewLocalName ( n, count ) ;String newName = getNewGlobalName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String newName = getNewGlobalName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String oldName = n.getString (  ) ;String newName = getNewGlobalName ( n ) ;^296^^^^^281^311^String newName = getNewGlobalName ( n ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^299^^^^^284^314^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^short  count = 0;^305^^^^^290^320^int count = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^int count = 9;^305^^^^^290^320^int count = 0;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( newName == null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( tempName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( rootewName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( n != newNameull )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( newNameewName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( newName != this )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( s == null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( prevUsedRenameMap != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( reservedNames == null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P9_Replace_Statement]^if  ( a.newName != null )  {^308^^^^^293^323^if  ( newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^n.setString(newName); changed = true;^308^309^310^311^^293^323^if  ( newName != null )  { n.setString ( newName ) ; changed = true; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^308^309^310^311^^293^323^if  ( newName != null )  { n.setString ( newName ) ; changed = true; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^changed = false;^310^^^^^295^325^changed = true;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( rootewName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( tempName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( newNameewName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^n.setString ( n ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^309^310^^^^294^324^n.setString ( newName ) ; changed = true;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;n.setString ( newName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;n.setString ( newName ) ;^309^^^^^294^324^n.setString ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char newName = getNewLocalName ( n, count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String rootewName = getNewLocalName ( n, count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String newName = getNewLocalName ( n, orderOfOccurrence ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String newName = getNewLocalName (  count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String newName = getNewLocalName ( n ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String countewName = getNewLocalName ( n, n ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String newName = process ( n, count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^String rootewName = process ( n, count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String newName = getNewGlobalName ( n ) ;String newName = getNewLocalName ( n, count ) ;^307^^^^^292^322^String newName = getNewLocalName ( n, count ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( local )  {^315^^^^^300^330^if  ( changed )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( localRenamingOnly )  {^315^^^^^300^330^if  ( changed )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^compiler.reportCodeChange();^315^316^317^^^300^330^if  ( changed )  { compiler.reportCodeChange (  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^315^316^317^^^300^330^if  ( changed )  { compiler.reportCodeChange (  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^compiler.getCodingConvention (  ) ;^316^^^^^301^331^compiler.reportCodeChange (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^316^^^^^301^331^compiler.reportCodeChange (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( changed )  {     compiler.reportCodeChange (  ) ; }^316^^^^^301^331^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^compiler .addToDebugLog ( newName )  ;^316^^^^^301^331^compiler.reportCodeChange (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^compiler.addToDebugLog ( "JS var assignments:\n"  <  assignmentLog ) ;^320^^^^^305^335^compiler.addToDebugLog ( "JS var assignments:\n" + assignmentLog ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^compiler.addToDebugLog ( "JS var assign" + assignmentLog ) ;^320^^^^^305^335^compiler.addToDebugLog ( "JS var assignments:\n" + assignmentLog ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^compiler .reportCodeChange (  )  ;^320^^^^^305^335^compiler.addToDebugLog ( "JS var assignments:\n" + assignmentLog ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^320^^^^^305^335^compiler.addToDebugLog ( "JS var assignments:\n" + assignmentLog ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^assignmentLog = this;^321^^^^^306^336^assignmentLog = null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  externs  n  root  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  SortedSet  varsByFrequency  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char oldName = n.getchar (  ) ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String oldName = n.setString (  ) ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String oldTempName = localTempNames.get ( index ) ;String oldName = n.getString (  ) ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String oldName = n.getString (  ) ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String newName = getNewGlobalName ( n ) ;String oldName = n.getString (  ) ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^String oldName = n .setString ( prefix )  ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^325^326^^^^324^335^String oldName = n.getString (  ) ; Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^return getPseudoName ( n.getString (  )  ) ;String oldName = n.getString (  ) ;^325^^^^^324^335^String oldName = n.getString (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment a = assignments.get ( tempName ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment a = oldName.get ( assignments ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;Assignment a = assignments.get ( oldName ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldTempName ) ;Assignment a = assignments.get ( oldName ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment a = assignments.get ( prefix ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;Assignment a = assignments.get ( oldName ) ;^326^^^^^324^335^Assignment a = assignments.get ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( a.newName != null || !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( a.newName == null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.newName != null && !a.newName.equals ( prefix )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( tempName != null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( oldName != null && !a.newName.equals ( a.newName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( a.newName != null ) {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  (  !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( a.newName != true ) {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^if (generatePseudoNames) {    return getPseudoName(oldName);}; return a.newName;^327^328^329^330^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  { if  ( generatePseudoNames )  { return getPseudoName ( oldName ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^327^328^329^330^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  { if  ( generatePseudoNames )  { return getPseudoName ( oldName ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( ! ( equals ( oldTempName )  )  )  {     if  ( generatePseudoNames )  {         return getPseudoName ( n.getString (  )  ) ;     }     return a.newName; }^327^^^^^324^335^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return false;^333^^^^^324^335^return null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( preserveAnonymousFunctionNames )  {^328^^^^^324^335^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^return getPseudoName(oldName);^328^329^330^^^324^335^if  ( generatePseudoNames )  { return getPseudoName ( oldName ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^328^329^330^^^324^335^if  ( generatePseudoNames )  { return getPseudoName ( oldName ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( generatePseudoNames )  {     return getPseudoName ( n.getString (  )  ) ; }^328^^^^^324^335^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return getPseudoName ( tempName ) ;^329^^^^^324^335^return getPseudoName ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return assignNames ( oldName ) ;^329^^^^^324^335^return getPseudoName ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^329^^^^^324^335^return getPseudoName ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return tempName;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a.newName.newName;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a;^331^^^^^324^335^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return assignNames ( prefix ) ;^329^^^^^324^335^return getPseudoName ( oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( localRenamingOnly )  {^328^^^^^324^335^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return this;^333^^^^^324^335^return null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.newName.newName != null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a != null && !a.newName.equals ( oldName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( a.newName != null && !a.newName .startsWith ( tempName )   )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( a.newName != null && !a.newName.equals ( tempName )  )  {^327^^^^^324^335^if  ( a.newName != null && !a.newName.equals ( oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewGlobalName [RETURN_TYPE] String   Node n [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  prefix  tempName  int  assignmentCount  count  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char oldTempName = localTempNames.get ( index ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String oldTempName = localTempNames.get ( orderOfOccurrence ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String oldTempName = index.get ( localTempNames ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String oldTempName = localTempNames.add ( index ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;String oldTempName = localTempNames.get ( index ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^String oldName = n.getString (  ) ;String oldTempName = localTempNames.get ( index ) ;^338^^^^^337^347^String oldTempName = localTempNames.get ( index ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^338^339^^^^337^347^String oldTempName = localTempNames.get ( index ) ; Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment a = assignments.get ( tempName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Assignment a = oldTempName.get ( assignments ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^Assignment a = assignments.get ( oldName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;Assignment a = assignments.get ( oldTempName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldName ) ;Assignment a = assignments.get ( oldTempName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, newName ) ;Assignment a = assignments.get ( oldTempName ) ;^339^^^^^337^347^Assignment a = assignments.get ( oldTempName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( !a.newName.equals ( oldName )  )  {^340^^^^^337^347^if  ( !a.newName.equals ( oldTempName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( !a.newName.equals ( tempName )  )  {^340^^^^^337^347^if  ( !a.newName.equals ( oldTempName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^if (generatePseudoNames) {    return getPseudoName(n.getString());}; return a.newName;^340^341^342^343^^337^347^if  ( !a.newName.equals ( oldTempName )  )  { if  ( generatePseudoNames )  { return getPseudoName ( n.getString (  )  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^340^341^342^343^^337^347^if  ( !a.newName.equals ( oldTempName )  )  { if  ( generatePseudoNames )  { return getPseudoName ( n.getString (  )  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  (  (  ( a.newName )  != null )  &&  ( ! ( equals ( oldName )  )  )  )  {     if  ( generatePseudoNames )  {         return getPseudoName ( oldName ) ;     }     return a.newName; }else {     return null; }^340^^^^^337^347^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( local )  {^341^^^^^337^347^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^return getPseudoName(n.getString());^341^342^343^^^337^347^if  ( generatePseudoNames )  { return getPseudoName ( n.getString (  )  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^341^342^343^^^337^347^if  ( generatePseudoNames )  { return getPseudoName ( n.getString (  )  ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( generatePseudoNames )  {     return getPseudoName ( oldName ) ; }^341^^^^^337^347^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return assignNames ( n.getString (  )  ) ;^342^^^^^337^347^return getPseudoName ( n.getString (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return getPseudoName ( n.setString (  )  ) ;^342^^^^^337^347^return getPseudoName ( n.getString (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return getPseudoName ( n .setString ( oldName )   ) ;^342^^^^^337^347^return getPseudoName ( n.getString (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( generatePseudoNames )  {     return getPseudoName ( n.getString (  )  ) ; }^342^^^^^337^347^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^342^^^^^337^347^return getPseudoName ( n.getString (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return getPseudoName ( n .setString ( LOCAL_VAR_PREFIX )   ) ;^342^^^^^337^347^return getPseudoName ( n.getString (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a.newName.newName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return a;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return oldName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( localRenamingOnly )  {^341^^^^^337^347^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( preserveAnonymousFunctionNames )  {^341^^^^^337^347^if  ( generatePseudoNames )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return getPseudoName ( n .setString ( tempName )   ) ;^342^^^^^337^347^return getPseudoName ( n.getString (  )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return prefix;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return tempName;^344^^^^^337^347^return a.newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( !a.newName .startsWith ( oldTempName )   )  {^340^^^^^337^347^if  ( !a.newName.equals ( oldTempName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return true;^346^^^^^337^347^return null;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getNewLocalName [RETURN_TYPE] String   Node n int index [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  Node  n  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^Preconditions.checkState ( localRenamingOnly ) ;^350^^^^^349^354^Preconditions.checkState ( generatePseudoNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^350^^^^^349^354^Preconditions.checkState ( generatePseudoNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( this.newName == null ) ;Preconditions.checkState ( generatePseudoNames ) ;^350^^^^^349^354^Preconditions.checkState ( generatePseudoNames ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^return '$'  <=  s + "$$";^353^^^^^349^354^return '$' + s + "$$";^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return '$' + tempName + "$$";^353^^^^^349^354^return '$' + s + "$$";^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^return '$' + s +oldTempName;^353^^^^^349^354^return '$' + s + "$$";^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] getPseudoName [RETURN_TYPE] String   String s [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( prevNewName == null && reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( prevNewName != null || reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( prefix == null || reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( prevNewName == null || this.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( reservedNames == null || prevNewName.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( prevNewName == null ) {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  (  reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( prevNewName == null || reservedNames.addAll ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( prevNewName == false || reservedNames.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^continue;^364^365^366^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^364^365^366^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( externNames.contains ( a.oldName )  )  {     continue; }^364^^^^^361^375^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  && ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P2_Replace_Operator]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  || prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && tempName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( oldTempName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( prefix )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prevNewName )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prefix.startsWith ( prevNewName )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( LOCAL_VAR_PREFIX.startsWith ( a.oldName )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( prevNewName )  || ( !externNames.contains ( a.oldName )  && LOCAL_VAR_PREFIX.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( prefix.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( a.oldName )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  ) {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  (  ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P6_Replace_Expression]^if  ( oldName) && prevNewName.startsWith(prefix)) )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( a.oldName.equals ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( a.oldName .length (  )   || ( !externNames.contains ( a.oldName )  && prevNewName^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.addAll ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  (  ( !externNames.contains ( a.oldName )  && s.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P15_Unwrap_Block]^reservedNames.add(prevNewName); finalizeNameAssignment(a, prevNewName);^368^369^370^371^372^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  { reservedNames.add ( prevNewName ) ; finalizeNameAssignment ( a, prevNewName ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P16_Remove_Block]^^368^369^370^371^372^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  { reservedNames.add ( prevNewName ) ; finalizeNameAssignment ( a, prevNewName ) ; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( prefix ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^reservedNames.addAll ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, prevNewName ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;reservedNames.add ( prevNewName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment (  prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( prevNewName, a ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^getNewLocalName ( a, prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^getNewLocalName ( a, s ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;finalizeNameAssignment ( a, prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, newName ) ;finalizeNameAssignment ( a, prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;finalizeNameAssignment ( a, prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;finalizeNameAssignment ( a, prevNewName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String prevNewName = prevUsedRenameMap.lookupNewName ( prefix ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String prevNewName = a.lookupNewName ( prevUsedRenameMap.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String prevNewName = prevUsedRenameMap.lookupNewName ( a ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^String prevNewName = prevUsedRenameMap.VariableMap ( a.oldName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^String prevNewName = prevUsedRenameMap.VariableMap ( oldTempName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^362^363^364^365^366^361^375^for  ( Assignment a : assignments.values (  )  )  { String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ; if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^String prevNewName = prevUsedRenameMap.lookupNewName ( tempName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^String prevNewName = prevUsedRenameMap.VariableMap ( tempName ) ;^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^363^^^^^361^375^String prevNewName = prevUsedRenameMap.lookupNewName ( a.oldName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( prevNewName == null || 0.contains ( prevNewName )  )  {^364^^^^^361^375^if  ( prevNewName == null || reservedNames.contains ( prevNewName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( prevNewName )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^if  ( tempName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^368^369^370^^^361^375^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  || ( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^( !externNames.contains ( prevNewName )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^( !externNames.contains ( a )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^( !externNames.addAll ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^( !externNames.contains ( s )  && prevNewName.startsWith ( prefix )  )  )  {^369^370^^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^369^370^371^^^361^375^( !externNames.contains ( a.oldName )  && prevNewName.startsWith ( prefix )  )  )  { reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P13_Insert_Block]^if  ( externNames.contains ( a.oldName )  )  {     continue; }^369^^^^^361^375^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^prevNewName.startsWith ( tempName )  )  )  {^370^^^^^361^375^prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^prevNewName.equals ( prefix )  )  )  {^370^^^^^361^375^prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^prevNewName .length (  )   )  )  {^370^^^^^361^375^prevNewName.startsWith ( prefix )  )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^370^371^^^^361^375^prevNewName.startsWith ( prefix )  )  )  { reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( oldTempName ) ;^371^^^^^361^375^reservedNames.add ( prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^371^372^^^^361^375^reservedNames.add ( prevNewName ) ; finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a, prefix ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^getNewLocalName ( a, oldTempName ) ;^372^^^^^361^375^finalizeNameAssignment ( a, prevNewName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] reusePreviouslyUsedVariableMap [RETURN_TYPE] void   [VARIABLES] Set  externNames  reservedNames  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  index  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P4_Replace_Constructor]^new NameGenerator ( reservedNames, "", reservedCharacters )  ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^new NameGenerator ( reservedNames, oldTempName, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^new NameGenerator (  prefix, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^new NameGenerator ( reservedNames,  reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^new NameGenerator ( reservedNames, prefix ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^new NameGenerator ( prefix, reservedNames, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^new NameGenerator ( reservedCharacters, prefix, reservedNames ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^new NameGenerator ( reservedNames, tempName, reservedCharacters ) ;^382^^^^^367^397^new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P4_Replace_Constructor]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, "", reservedCharacters )  ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, s, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator globalNameGenerator = new NameGenerator (  prefix, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames,  reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator globalNameGenerator = new NameGenerator ( prefix, reservedNames, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, reservedCharacters, prefix ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prevNewName, reservedCharacters ) ;^381^382^^^^366^396^NameGenerator globalNameGenerator = new NameGenerator ( reservedNames, prefix, reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P4_Replace_Constructor]^globalNameGenerator : globalnew NameGenerator ( reservedNames, prefix, reservedCharacters )  ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^globalNameGenerator : new NameGenerator (  "", reservedCharacters ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^globalNameGenerator : new NameGenerator ( reservedNames, "" ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^globalNameGenerator : new NameGenerator ( reservedCharacters, "", reservedNames ) ;^386^387^^^^371^401^globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P4_Replace_Constructor]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, prefix, reservedCharacters )   ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = oldTempName.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator (  "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "" ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? reservedCharacters : new NameGenerator ( reservedNames, "", globalNameGenerator ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = reservedNames.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( prefix, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedCharacters, "", reservedNames ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P6_Replace_Expression]^NameGenerator localNameGenerator  =  new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P6_Replace_Expression]^NameGenerator localNameGenerator  =  globalNameGenerator ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^NameGenerator localNameGenerator = prefix.length (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^NameGenerator localNameGenerator = tempName.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^NameGenerator localNameGenerator = prevNewName.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^385^386^387^^^370^400^NameGenerator localNameGenerator = prefix.isEmpty (  )  ? globalNameGenerator : new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^List<Assignment> pendingAssignments = new  LinkedHashSet <Assignment> (  ) ;^390^^^^^375^405^List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;^390^^^^^375^405^List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;^390^^^^^375^405^List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^List<String> generatedNamesForAssignments = new  Set <String> (  ) ;^391^^^^^376^406^List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;^391^^^^^376^406^List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;^391^^^^^376^406^List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P2_Replace_Operator]^if  ( a.newName == null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( prevNewName != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.newName.newName != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^if  ( a.newName != false )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P9_Replace_Statement]^if  ( prevUsedRenameMap != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P9_Replace_Statement]^if  ( newName != null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P9_Replace_Statement]^if  ( reservedNames == null )  {^394^^^^^379^409^if  ( a.newName != null )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P15_Unwrap_Block]^continue;^394^395^396^^^379^409^if  ( a.newName != null )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P16_Remove_Block]^^394^395^396^^^379^409^if  ( a.newName != null )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P13_Insert_Block]^if  ( externNames.contains ( a.oldName )  )  {     continue; }^394^^^^^379^409^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( externNames.contains ( tempName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( externNames.contains ( a.oldName.oldName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.contains ( externNames.oldName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.contains ( externNames )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( externNames.addAll ( a.oldName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^if  ( externNames.contains ( prevNewName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P15_Unwrap_Block]^continue;^398^399^400^^^383^413^if  ( externNames.contains ( a.oldName )  )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P16_Remove_Block]^^398^399^400^^^383^413^if  ( externNames.contains ( a.oldName )  )  { continue; }^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P13_Insert_Block]^if  (  ( a.newName )  != null )  {     continue; }^398^^^^^383^413^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P13_Insert_Block]^if  (  ( prevNewName == null )  ||  ( reservedNames.contains ( prevNewName )  )  )  {     continue; }^398^^^^^383^413^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( tempName.startsWith ( LOCAL_VAR_PREFIX )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.oldName.startsWith ( prevNewName )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( LOCAL_VAR_PREFIX.oldName.startsWith ( a )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( LOCAL_VAR_PREFIX.startsWith ( a.oldName )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( a.oldName.equals ( LOCAL_VAR_PREFIX )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^if  ( a.oldName.startsWith ( tempName )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P13_Insert_Block]^if  (  ( startsWith ( LOCAL_VAR_PREFIX )  )  ||  (  ( ! ( externNames.contains ( a.oldName )  )  )  &&  ( prevNewName.startsWith ( prefix )  )  )  )  {     reservedNames.add ( prevNewName ) ;     finalizeNameAssignment ( a, prevNewName ) ; }^403^^^^^388^418^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^newName = localNameGenerator.generateNextName (  ) ;^410^^^^^403^413^newName = globalNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^newName = localNameGenerator.generateNextName (  ) ;newName = globalNameGenerator.generateNextName (  ) ;^410^^^^^403^413^newName = globalNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^410^411^^^^403^413^newName = globalNameGenerator.generateNextName (  ) ; pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^411^^^^^403^413^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;pendingAssignments.add ( a ) ;^411^^^^^403^413^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;pendingAssignments.add ( a ) ;^411^^^^^403^413^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^generatedNamesForAssignments.add ( prevNewName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^generatedNamesForAssignments.add ( tempName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.get ( j ) .length (  )  == len;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, prevNewName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, newName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^pendingAssignments.add ( a ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^403^413^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^newName = globalNameGenerator.generateNextName (  ) ;^405^^^^^390^420^newName = localNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^newName = globalNameGenerator.generateNextName (  ) ;newName = localNameGenerator.generateNextName (  ) ;^405^^^^^390^420^newName = localNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^405^^^^^390^420^newName = localNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a, s ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment (  newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( newName, a ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^getNewLocalName ( a, newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^finalizeNameAssignment ( a, prevNewName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, prevNewName ) ;finalizeNameAssignment ( a, newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;finalizeNameAssignment ( a, newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;finalizeNameAssignment ( a, newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldTempName ) ;finalizeNameAssignment ( a, newName ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^newName =  null.generateNextName (  ) ;^405^^^^^390^420^newName = localNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^newName = localNameGenerator.generateNextName (  ) ;^410^^^^^395^425^newName = globalNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^newName = localNameGenerator.generateNextName (  ) ;newName = globalNameGenerator.generateNextName (  ) ;^410^^^^^395^425^newName = globalNameGenerator.generateNextName (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^char newName;^402^^^^^387^417^String newName;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^if  ( externNames.addAll ( oldTempName )  )  {^398^^^^^383^413^if  ( externNames.contains ( a.oldName )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P13_Insert_Block]^if  ( externNames.contains ( a.oldName )  )  {     continue; }^398^^^^^383^413^[Delete]^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^if  ( a.startsWith ( LOCAL_VAR_PREFIX )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^if  ( a.oldName .length (  )   )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^if  ( a.oldName.startsWith ( s )  )  {^403^^^^^388^418^if  ( a.oldName.startsWith ( LOCAL_VAR_PREFIX )  )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^405^406^^^^390^420^newName = localNameGenerator.generateNextName (  ) ; finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a, prefix ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^getNewLocalName ( a, s ) ;^406^^^^^391^421^finalizeNameAssignment ( a, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^410^411^^^^395^425^newName = globalNameGenerator.generateNextName (  ) ; pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^pendingAssignments .add ( 1 )  ;^411^^^^^396^426^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^411^^^^^396^426^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;pendingAssignments.add ( a ) ;^411^^^^^396^426^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;pendingAssignments.add ( a ) ;^411^^^^^396^426^pendingAssignments.add ( a ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^generatedNamesForAssignments.add ( prefix ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.get ( j ) .length (  )  == len;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, prevNewName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, newName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^Assignment a = assignments.get ( oldName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^pendingAssignments.add ( a ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;generatedNamesForAssignments.add ( newName ) ;^412^^^^^397^427^generatedNamesForAssignments.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^reservedNames.addAll ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^reservedNames.addAll ( prefix ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^this.reservedNames = Sets.newHashSet (  ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^n.setString ( newName ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.addAll ( externNames ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^a.setNewName ( newName ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;reservedNames.add ( newName ) ;^414^^^^^399^429^reservedNames.add ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^short  numPendingAssignments = generatedNamesForAssignments.size (  ) ;^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^int numPendingAssignments = generatedNamesForAssignments.size() - 1 ;^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^int numPendingAssignments = generatedNamesForAssignments.add (  ) ;^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^List<Assignment> pendingAssignments = new ArrayList<Assignment> (  ) ;int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^int numPendingAssignments = generatedNamesForAssignments.size() - 5 ;^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^431^^^^^416^446^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^for  (  long  i = 0; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P2_Replace_Operator]^for  ( int i = 0; i <= numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^for  ( int i = count; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^for  ( orderOfOccurrencent i = 0; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^for  ( int i = 0; i < orderOfOccurrence; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^for  ( numPendingAssignmentsnt i = 0; i < numPendingAssignments; )  {^432^^^^^417^447^for  ( int i = 0; i < numPendingAssignments; )  {^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^for  (  short  j = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^for  ( orderOfOccurrencent j = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^for  ( int orderOfOccurrence = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^for  ( jnt i = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( orderOfOccurrence )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^varsByOrderOfOccurrence .add ( 4 )  ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^varsByFrequency.addAll ( assignments.values (  )  ) ;varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( len )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( j.get ( pendingAssignments )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^new  LinkedHashSet <Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^434^^^^^419^449^new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P4_Replace_Constructor]^new Assignment> ( FREQUENCY_COMPARATOR )  ;^434^^^^^419^449^new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P4_Replace_Constructor]^SortedSet<Assignment> varsByOrderOfOccurrence = SortedSet<Assignment> varsByOrderOfOccurrence =  new Assignment> ( FREQUENCY_COMPARATOR )  ;^433^434^^^^418^448^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( null ) ;^433^434^^^^418^448^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^SortedSet<Assignment> varsByFrequency = new TreeSet<Assignment> ( FREQUENCY_COMPARATOR ) ;SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^433^434^^^^418^448^SortedSet<Assignment> varsByOrderOfOccurrence = new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^short  len = generatedNamesForAssignments.get ( i ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^int len = generatedNamesForAssignments.get ( i ) .length() - 6 ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^int len = generatedNamesForAssignments.get ( orderOfOccurrence ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^int len = i.get ( generatedNamesForAssignments ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^int len = generatedNamesForAssignments.get ( i )  .isEmpty (  )  ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^List<String> generatedNamesForAssignments = new ArrayList<String> (  ) ;int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^int len = generatedNamesForAssignments.get ( i ) .length() - 9 ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^int len = generatedNamesForAssignments.get ( len ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^438^439^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ; for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.get ( j ) .length (  )  == len;int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^int len = generatedNamesForAssignments.get ( numPendingAssignments ) .length (  ) ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^generatedNamesForAssignments.get ( j ) .length() + 9  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^generatedNamesForAssignments.get ( orderOfOccurrence ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^generatedNamesForAssignments .get ( 2 )  .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;generatedNamesForAssignments.get ( j ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^generatedNamesForAssignments.add ( newName ) ;generatedNamesForAssignments.get ( j ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^generatedNamesForAssignments.get ( j ) .length() + 3  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^generatedNamesForAssignments.get ( numPendingAssignments ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^generatedNamesForAssignments .get ( this )  .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( len )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( j.get ( pendingAssignments )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( orderOfOccurrence )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^varsByFrequency.addAll ( assignments.values (  )  ) ;varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( numPendingAssignments )  ) ;^443^^^^^428^458^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( orderOfOccurrence )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment (  generatedNamesForAssignments.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( i, generatedNamesForAssignments.get ( a )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( generatedNamesForAssignments, a.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^finalizeNameAssignment ( a, i.get ( generatedNamesForAssignments )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^448^449^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ; ++i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, prevNewName ) ;finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int numPendingAssignments = generatedNamesForAssignments.size (  ) ;finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P11_Insert_Donor_Statement]^finalizeNameAssignment ( a, newName ) ;finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^for  ( int len = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^for  ( numPendingAssignmentsnt j = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( 0.get ( j )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^varsByOrderOfOccurrence.add ( pendingAssignments.get ( numPendingAssignments )  ) ;^443^^^^^439^444^varsByOrderOfOccurrence.add ( pendingAssignments.get ( j )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^new  LinkedList <Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^434^^^^^419^449^new TreeSet<Assignment> ( ORDER_OF_OCCURRENCE_COMPARATOR ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^int len = generatedNamesForAssignments.get ( i ) .length() - 2 ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P1_Replace_Type]^for  (  long  j = i;^439^^^^^424^454^for  ( int j = i;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^int len = generatedNamesForAssignments.get ( i ) .length() + 3 ;^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^438^^^^^423^453^int len = generatedNamesForAssignments.get ( i ) .length (  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^generatedNamesForAssignments.get ( j ) .length() - 9  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^generatedNamesForAssignments.get ( len ) .length (  )  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P7_Replace_Invocation]^generatedNamesForAssignments.get ( j )  .isEmpty (  )   == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P3_Replace_Literal]^generatedNamesForAssignments.get ( j ) .length() - 3  == len;^441^^^^^426^456^generatedNamesForAssignments.get ( j ) .length (  )  == len;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P14_Delete_Statement]^^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P8_Replace_Mix]^finalizeNameAssignment ( a, generatedNamesForAssignments .get ( this )   ) ;^448^^^^^433^463^finalizeNameAssignment ( a, generatedNamesForAssignments.get ( i )  ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] assignNames [RETURN_TYPE] void   Assignment> varsToRename [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  NameGenerator  globalNameGenerator  localNameGenerator  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  SortedSet  varsByOrderOfOccurrence  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  List  generatedNamesForAssignments  pendingAssignments  Map  renameMap  
[P5_Replace_Variable]^a.setNewName ( prevNewName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^a.Assignment ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^a .Assignment ( name , input )  ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^a.setNewName ( s ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^return getPseudoName ( oldName ) ;a.setNewName ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;a.setNewName ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^n.setString ( newName ) ;a.setNewName ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( newName ) ;a.setNewName ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( prevNewName ) ;a.setNewName ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;a.setNewName ( newName ) ;^458^^^^^457^466^a.setNewName ( newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^renameMap.put ( s, newName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^renameMap.put ( a.oldName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^renameMap.put (  newName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^renameMap.put ( a.oldName.oldName, newName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^renameMap.put ( newName, a.oldName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^renameMap.put ( a.oldName, prevNewName ) ;^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^461^^^^^457^466^renameMap.put ( a.oldName, newName ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^assignmentLog.append ( a.oldName ) .append ( " =>" ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( tempName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( tempName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( newName ) .append ( " => " ) .append ( a.oldName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^assignmentLog .append ( tempName )^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^assignmentLog .append ( name )^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( prevNewName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( oldTempName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^assignmentLog .append ( prefix )^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^assignmentLog .append ( oldTempName )^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^assignmentLog.append ( prevNewName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P3_Replace_Literal]^assignmentLog.append ( a.oldName ) .append ( " =" ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( prefix ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^assignmentLog .StringBuilder (  )^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^assignmentLog.append ( a ) .append ( " => " ) .append ( newName ) . a.oldNameppend ( '\n' ) ;^464^465^^^^457^466^assignmentLog.append ( a.oldName ) .append ( " => " ) .append ( newName ) . append ( '\n' ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] finalizeNameAssignment [RETURN_TYPE] void   Assignment a String newName [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  Assignment  a  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return !compiler.getCodingConvention (  ) .isExported ( prefix, isLocal ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return !compiler.getCodingConvention (  ) .isExported ( name, preserveAnonymousFunctionNames ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return !compiler.getCodingConvention (  ) .isExported (  isLocal ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return !compiler.getCodingConvention (  ) .isExported ( name ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return !compiler.getCodingConvention (  ) .isExported ( isLocal, name ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return !compiler.getCodingConvention (  )  .getVar ( prefix )  ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return !compiler.reportCodeChange (  ) .isExported ( name, isLocal ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P5_Replace_Variable]^return !compiler.getCodingConvention (  ) .isExported ( tempName, isLocal ) ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P7_Replace_Invocation]^return !compiler.getCodingConvention (  )  .getVar ( name )  ;^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P14_Delete_Statement]^^479^^^^^478^480^return !compiler.getCodingConvention (  ) .isExported ( name, isLocal ) ;^[CLASS] RenameVars Assignment ProcessVars 1 2  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^final char oldName;^71^^^^^66^76^final String oldName;^[CLASS] Assignment  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^final  long  orderOfOccurrence;^72^^^^^67^77^final int orderOfOccurrence;^[CLASS] Assignment  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^long  orderOfOccurrence;^72^^^^^67^77^final int orderOfOccurrence;^[CLASS] Assignment  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^char newName;^73^^^^^68^78^String newName;^[CLASS] Assignment  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P1_Replace_Type]^short  count;^74^^^^^69^79^int count;^[CLASS] Assignment  [METHOD] okToRenameVar [RETURN_TYPE] boolean   String name boolean isLocal [VARIABLES] Set  externNames  reservedNames  varsToRename  StringBuilder  assignmentLog  ArrayList  globalNameNodes  localNameNodes  localTempNames  String  LOCAL_VAR_PREFIX  name  newName  oldName  oldTempName  prefix  prevNewName  s  tempName  int  assignmentCount  count  i  index  j  len  numPendingAssignments  orderOfOccurrence  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  ORDER_OF_OCCURRENCE_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  isExterns  isExternsPass_  isLocal  local  localRenamingOnly  preserveAnonymousFunctionNames  VariableMap  prevUsedRenameMap  SortedMap  assignments  Map  renameMap  
[P8_Replace_Mix]^this.input =  null;^77^^^^^76^84^this.input = input;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.count = 0;this.input = input;^77^^^^^76^84^this.input = input;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P5_Replace_Variable]^this.oldName = oldName;^78^^^^^76^84^this.oldName = name;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.newName = null;this.oldName = name;^78^^^^^76^84^this.oldName = name;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.newName = newName;this.oldName = name;^78^^^^^76^84^this.oldName = name;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P8_Replace_Mix]^this.newName = true;^79^^^^^76^84^this.newName = null;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.oldName = name;this.newName = null;^79^^^^^76^84^this.newName = null;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.newName = newName;this.newName = null;^79^^^^^76^84^this.newName = null;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P3_Replace_Literal]^this.count = orderOfOccurrence;^80^^^^^76^84^this.count = 0;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P8_Replace_Mix]^this.count = 3;^80^^^^^76^84^this.count = 0;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.input = input;this.count = 0;^80^^^^^76^84^this.count = 0;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P8_Replace_Mix]^this.orderOfOccurrence  =  this.orderOfOccurrence ;^83^^^^^76^84^this.orderOfOccurrence = assignmentCount++;^[CLASS] Assignment  [METHOD] <init> [RETURN_TYPE] CompilerInput)   String name CompilerInput input [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P2_Replace_Operator]^Preconditions.checkState ( this.newName != null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P5_Replace_Variable]^Preconditions.checkState ( oldName == null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P8_Replace_Mix]^Preconditions.checkState ( newName == null ) ;^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P14_Delete_Statement]^^90^^^^^89^92^Preconditions.checkState ( this.newName == null ) ;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P5_Replace_Variable]^this.newName = oldName;^91^^^^^89^92^this.newName = newName;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P8_Replace_Mix]^this.newName =  null;^91^^^^^89^92^this.newName = newName;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.oldName = name;this.newName = newName;^91^^^^^89^92^this.newName = newName;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P11_Insert_Donor_Statement]^this.newName = null;this.newName = newName;^91^^^^^89^92^this.newName = newName;^[CLASS] Assignment  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P8_Replace_Mix]^private  boolean isExternsPass_;^164^^^^^159^169^private final boolean isExternsPass_;^[CLASS] ProcessVars  [METHOD] setNewName [RETURN_TYPE] void   String newName [VARIABLES] CompilerInput  input  String  name  newName  oldName  boolean  int  count  orderOfOccurrence  
[P5_Replace_Variable]^isExternsPass_ = isExternsPass_;^167^^^^^166^168^isExternsPass_ = isExterns;^[CLASS] ProcessVars  [METHOD] <init> [RETURN_TYPE] RenameVars$ProcessVars(boolean)   boolean isExterns [VARIABLES] boolean  isExterns  isExternsPass_  
[P8_Replace_Mix]^isExternsPass_ =  null;^167^^^^^166^168^isExternsPass_ = isExterns;^[CLASS] ProcessVars  [METHOD] <init> [RETURN_TYPE] RenameVars$ProcessVars(boolean)   boolean isExterns [VARIABLES] boolean  isExterns  isExternsPass_  
[P2_Replace_Operator]^if  ( n.getType (  )  >= Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P7_Replace_Invocation]^if  ( n .getString (  )   != Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P8_Replace_Mix]^if  ( n.getType (  )  = Token.NAME )  {^172^^^^^157^187^if  ( n.getType (  )  != Token.NAME )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^return ;^172^173^174^^^157^187^if  ( n.getType (  )  != Token.NAME )  { return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^172^173^174^^^157^187^if  ( n.getType (  )  != Token.NAME )  { return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P1_Replace_Type]^char name = n.getchar (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^String parentame = n.getString (  ) ;^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^176^^^^^161^191^String name = n.getString (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^if  ( name.length (  )  != 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P3_Replace_Literal]^if  ( name.length (  )  == -3 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P3_Replace_Literal]^if  ( name.length() - 5  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P8_Replace_Mix]^if  ( name.length (  )  == 0  )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^return ;^179^180^181^^^164^194^if  ( name.length (  )  == 0 )  { return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^179^180^181^^^164^194^if  ( name.length (  )  == 0 )  { return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P13_Insert_Block]^if  ( ! ( okToRenameVar ( name, local )  )  )  {     return ; }^179^^^^^164^194^[Delete]^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P3_Replace_Literal]^if  ( name.length() + 3  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P8_Replace_Mix]^if  ( tempName.length (  )  == 0 )  {^179^^^^^164^194^if  ( name.length (  )  == 0 )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^Scope.Var var = t.getScope (  ) .getVar ( tempName ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^184^^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^184^185^^^^169^199^Scope.Var var = t.getScope (  ) .getVar ( name ) ; boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^boolean local =  ( var != null )  || var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^boolean local =  ( var == null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P8_Replace_Mix]^boolean local =  ( 4 != null )  && var.isLocal (  ) ;^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^185^^^^^170^200^boolean local =  ( var != null )  && var.isLocal (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^if  ( !local || localRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !local && isExternsPass_RenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !local && isExternsPass_ )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !local && localRenamingOnlyRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !local && local )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  ( !local ) {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  (  localRenamingOnly )  {^188^^^^^173^203^if  ( !local && localRenamingOnly )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^reservedNames.add(name); return ;^188^189^190^191^^173^203^if  ( !local && localRenamingOnly )  { reservedNames.add ( name ) ; return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^188^189^190^191^^173^203^if  ( !local && localRenamingOnly )  { reservedNames.add ( name ) ; return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P13_Insert_Block]^if  ( isExternsPass_ )  {     if  ( !local )  {         externNames.add ( name ) ;     }     return ; }^188^^^^^173^203^[Delete]^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^189^190^^^^174^204^reservedNames.add ( name ) ; return;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( name ) ;^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^189^^^^^174^204^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^if  ( preserveAnonymousFunctionNames || var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^if  ( preserveAnonymousFunctionNames && var == null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( local && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  ( preserveAnonymousFunctionNames ) {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  (  var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  ( (preserveAnonymousFunctionNames && var != null) )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  ( var != null )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P8_Replace_Mix]^if  (  var != true && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^194^195^196^^^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^reservedNames.add(name); return ;^194^195^196^197^198^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  { reservedNames.add ( name ) ; return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^194^195^196^197^198^179^209^if  ( preserveAnonymousFunctionNames && var != null && NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  { reservedNames.add ( name ) ; return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( name ) ;^197^^^^^194^199^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P7_Replace_Invocation]^&& NodeUtil.isAnonymousFunction ( var .getLocalVarIndex (  )   )  )  {^196^^^^^181^211^&& NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^196^197^^^^181^211^&& NodeUtil.isAnonymousFunction ( var.getParentNode (  )  )  )  { reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^reservedNames.add ( tempName ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^197^198^^^^182^212^reservedNames.add ( name ) ; return;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;reservedNames.add ( name ) ;^197^^^^^182^212^reservedNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !okToRenameVar ( tempName, local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !okToRenameVar ( name, isExternsPass_ )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !okToRenameVar (  local )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !okToRenameVar ( name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !okToRenameVar ( local, name )  )  {^202^^^^^187^217^if  ( !okToRenameVar ( name, local )  )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^return ;^202^203^204^^^187^217^if  ( !okToRenameVar ( name, local )  )  { return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^202^203^204^^^187^217^if  ( !okToRenameVar ( name, local )  )  { return; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P13_Insert_Block]^if  (  ( name.length (  )  )  == 0 )  {     return ; }^202^^^^^187^217^[Delete]^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P13_Insert_Block]^if  ( ! ( okToRenameVar ( name, local )  )  )  {     return ; }^202^^^^^187^217^[Delete]^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( isExterns )  {^206^^^^^191^221^if  ( isExternsPass_ )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^if (!local) {    externNames.add(name);}; return ;^206^207^208^209^210^191^221^if  ( isExternsPass_ )  {  if  ( !local )  { externNames.add ( name ) ; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^206^207^208^209^210^191^221^if  ( isExternsPass_ )  {  if  ( !local )  { externNames.add ( name ) ; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P13_Insert_Block]^if  (  ( !local )  &&  ( localRenamingOnly )  )  {     reservedNames.add ( name ) ;     return ; }^206^^^^^191^221^[Delete]^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^if  ( !isExternsPass_ )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P9_Replace_Statement]^if  ( local )  {^208^^^^^193^223^if  ( !local )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^externNames.add(name);^208^209^210^^^193^223^if  ( !local )  { externNames.add ( name ) ; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^208^209^210^^^193^223^if  ( !local )  { externNames.add ( name ) ; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^externNames.add ( tempName ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^globalNameNodes.add ( n ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;externNames.add ( name ) ;^209^^^^^194^224^externNames.add ( name ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^if  ( var != null )  {^214^^^^^199^229^if  ( local )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P9_Replace_Statement]^if  ( !local )  {^214^^^^^199^229^if  ( local )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^} else if  ( var == null )  {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P6_Replace_Expression]^} else {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P8_Replace_Mix]^}  if  ( var != this )  {^220^^^^^205^235^} else if  ( var != null )  {^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P15_Unwrap_Block]^incCount(name, var.input); globalNameNodes.add(n);^220^221^222^223^224^205^235^} else if  ( var != null )  {  incCount ( name, var.input ) ; globalNameNodes.add ( n ) ; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P16_Remove_Block]^^220^221^222^223^224^205^235^} else if  ( var != null )  {  incCount ( name, var.input ) ; globalNameNodes.add ( n ) ; }^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^incCount (  var.input ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^incCount ( name.input ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^incCount ( name ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^222^223^^^^207^237^incCount ( name, var.input ) ; globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^incCount ( tempName, null ) ;incCount ( name, var.input ) ;^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^globalNameNodes.add ( parent ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;globalNameNodes.add ( n ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;globalNameNodes.add ( n ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localNameNodes.add ( n ) ;globalNameNodes.add ( n ) ;^223^^^^^208^238^globalNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P1_Replace_Type]^char tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  &  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^String tempName = name + var.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^String tempName = var + LOCAL_VAR_PREFIX.getLocalVarIndex (  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P7_Replace_Invocation]^String tempName = LOCAL_VAR_PREFIX + var .getParentNode (  )  ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^216^217^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ; incCount ( tempName, null ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^incCount ( name, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^incCount ( name, var.input ) ;incCount ( tempName, null ) ;^217^^^^^202^232^incCount ( tempName, null ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^localNameNodes.add ( parent ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localTempNames.add ( tempName ) ;localNameNodes.add ( n ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^globalNameNodes.add ( n ) ;localNameNodes.add ( n ) ;^218^^^^^203^233^localNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^localTempNames.add ( name ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^externNames.add ( name ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^localNameNodes.add ( n ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^globalNameNodes.add ( n ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P11_Insert_Donor_Statement]^reservedNames.add ( name ) ;localTempNames.add ( tempName ) ;^219^^^^^204^234^localTempNames.add ( tempName ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P2_Replace_Operator]^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ^  ) ;^216^^^^^201^231^String tempName = LOCAL_VAR_PREFIX + var.getLocalVarIndex (  ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^217^218^^^^202^232^incCount ( tempName, null ) ; localNameNodes.add ( n ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P14_Delete_Statement]^^222^^^^^207^237^incCount ( name, var.input ) ;^[CLASS] ProcessVars  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  isExterns  isExternsPass_  local  String  name  tempName  NodeTraversal  t  Var  var  Node  n  parent  
[P5_Replace_Variable]^Assignment s = name.get ( assignments ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P14_Delete_Statement]^^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P11_Insert_Donor_Statement]^assignments.put ( name, s ) ;Assignment s = assignments.get ( name ) ;^229^^^^^228^235^Assignment s = assignments.get ( name ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P2_Replace_Operator]^if  ( s != null )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P8_Replace_Mix]^if  ( s == true )  {^230^^^^^228^235^if  ( s == null )  {^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P15_Unwrap_Block]^s = new com.google.javascript.jscomp.RenameVars.Assignment(name, input); assignments.put(name, s);^230^231^232^233^^228^235^if  ( s == null )  { s = new Assignment ( name, input ) ; assignments.put ( name, s ) ; }^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P16_Remove_Block]^^230^231^232^233^^228^235^if  ( s == null )  { s = new Assignment ( name, input ) ; assignments.put ( name, s ) ; }^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P4_Replace_Constructor]^s = new Assignment (  input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P4_Replace_Constructor]^s = new Assignment ( name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P5_Replace_Variable]^s = new Assignment ( input, name ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P8_Replace_Mix]^s =  new Assignment ( null, input ) ;^231^^^^^228^235^s = new Assignment ( name, input ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P13_Insert_Block]^if  ( s == null )  {     s = new Assignment ( name, input ) ;     assignments.put ( name, s ) ; }^231^^^^^228^235^[Delete]^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P5_Replace_Variable]^assignments.put (  s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P5_Replace_Variable]^assignments.put ( name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P5_Replace_Variable]^assignments.put ( s, name ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P14_Delete_Statement]^^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P11_Insert_Donor_Statement]^Assignment s = assignments.get ( name ) ;assignments.put ( name, s ) ;^232^^^^^228^235^assignments.put ( name, s ) ;^[CLASS] ProcessVars  [METHOD] incCount [RETURN_TYPE] void   String name CompilerInput input [VARIABLES] Assignment  s  CompilerInput  input  boolean  isExterns  isExternsPass_  local  String  name  
[P2_Replace_Operator]^if  ( a1.count >= a2.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^if  ( a1.count != 0 )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^if  ( a2.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P6_Replace_Expression]^if  ( a2.count - a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P8_Replace_Mix]^if  ( a1.count != a1.count )  {^246^^^^^245^252^if  ( a1.count != a2.count )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P15_Unwrap_Block]^return (a2.count) - (a1.count);^246^247^248^^^245^252^if  ( a1.count != a2.count )  { return a2.count - a1.count; }^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P16_Remove_Block]^^246^247^248^^^245^252^if  ( a1.count != a2.count )  { return a2.count - a1.count; }^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P2_Replace_Operator]^return a2.count  &&  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a2.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a1.count - a2.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P8_Replace_Mix]^return a2.count  |  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P12_Insert_Condition]^if  ( a1.count != a2.count )  { return a2.count - a1.count; }^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P2_Replace_Operator]^return a2.count  !=  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a2.count - a1.count.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a1.count.count - a2;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P8_Replace_Mix]^return a1.count  ^  a1.count;^247^^^^^245^252^return a2.count - a1.count;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare (  a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a2, a1 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a1.compare ( ORDER_OF_OCCURRENCE_COMPARATOR, a2 ) ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P8_Replace_Mix]^return ORDER_OF_OCCURRENCE_COMPARATOR .compare ( a1 , a1 )  ;^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P14_Delete_Statement]^^251^^^^^245^252^return ORDER_OF_OCCURRENCE_COMPARATOR.compare ( a1, a2 ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P2_Replace_Operator]^return a1.orderOfOccurrence   instanceof   a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a2.orderOfOccurrence.orderOfOccurrence - a1;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a2 - a1.orderOfOccurrence.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a2.orderOfOccurrence - a1.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P5_Replace_Variable]^return a1.orderOfOccurrence - a2;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
[P8_Replace_Mix]^return a1.orderOfOccurrence  &&  a2.orderOfOccurrence;^262^^^^^261^263^return a1.orderOfOccurrence - a2.orderOfOccurrence;^[CLASS] 2  [METHOD] compare [RETURN_TYPE] int   Assignment a1 Assignment a2 [VARIABLES] Assignment  a1  a2  boolean  
